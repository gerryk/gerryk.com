1,I recently finished a site for an author who has a fairly substantial bibliography. She has also been translated into many languages, has multiple publishers and a wide and active community of readers. A complex ask to create a site that manages all of this content in a relatively simple and not-too-techy way? Well, yes and no.Yes, in that the initial specification was detailed, necessarily, as it was the hook upon which the site would eventually hang.;No, since the custom content management tools Views and CCK provides the wherewithal for Drupal to handle pretty much any content type you can throw at it. Couple this with the ease with which Drupal + CCK + Views allows you to create relationships between these content items and display them in many ways, and you have all you need to present detailed and complex information in a manageable way.The custom types are Book, Review&amp;Translation, and they are linked in two;<em>one to many;</em>relationship trees, with the Book being the primary type. In other words, for a given book, there can exist multiple reviews, and multiple translations. CCK handles the node links and Views handles the display of the items using Taxonomy to handle the grouping.2,My current HF setup is the Yaesu FT897D, MFJ 993B Auto ATU and 135' doublet in 'inverted V' configuration with the feedpoint at about 35' high. A good multiband setup which allows me to work locally on 80m and more DX on 40m and 20m.;The 993 handles antenna matching duty without a complaint, but the actual tuning procedure is a bit long-winded.After selecting a frequency and having a listen, the first step is to change to AM (or any other carrier mode), then select menu 75 and reduce the power to about 30W so as not to fry the tuner or finals as we get a match. Then key the mic to give a carrier and wait for the ATU to do its thing. Then we change the mode back to whatever it was beforehand (USB/LSB depending on band) and set the power back to 100W. OK, so it probably happens a little more quickly than it may seem, but it's still a bit of a chore, particularly if you QSY a lot.The solution... a single button press which will reduce the output power and key a carrier, returning back to the original settings on release. Nice, but not available as far as I'm aware. There does exist a circuit for the FT857 (basically the same radio in a different box), but it relies on a 'brown wire' in the DC connector which doesn't exist on the 897. Time for plan B.While browsing the;<a href=http://groups.yahoo.com/group/FT897/>FT897 Yahoo Group</a>;I came across a file from DF1QQ containing a nice little circuit which purported to do what I require. The principle it is based on is that it uses the ACC port on the 897, which is basically a stereo jack. Grounding the tip keys a CW carrier... great... we're part of the way there, but we also need reduced power. The ring is an input for the AGC, normally used by linear amplifiers to prevent the radio overdriving, but in this case, DF1QQ cleverly feeds a negative voltage back to the AGC control, thus reducing the radio's output.I built the circuit into a small aluminium case, along with a 100mA FSD meter, which serves as a remote S/PO/SWR meter. The controls are a momentary button and a pot. The pot controls the AGC feedback voltage, and set to about 12 o'clock gives us about 20W out.;Now when I change bands, re-matching is a simple matter of pressing a button... a vast improvement on the old method. Thanks DF1QQ.3,I;recently installed the <a href=http://acquia.com/>Acquia</a>;version of;<a href=http://drupal.org/>Drupal</a>. I'd heard <a href=http://buytaert.net/>Dries Buytaert</a>;being interviewed on the <a href=http://www.lullabot.com/>Lullabot</a> <a href=http://www.lullabot.com/podcast>Podcast</a>, and one of the topics was his new, enterprise level distribution of the Drupal CMS. The main differences are that Views, CCK and a bunch of other modules are included in the basic install. The Mollom spam filter is also included.The thing that caught my eye, however, was the central monitoring system, or Dashboard. The idea of this is that all yout Drupal sites are registered with your Acquia dashboard, which gives you a centralised view of your sites' status. Information available includes version management, Cron status and a site heartbeat, giving an at-a-glance indicator or whether your sites are currently available.Much as I'd like to include an Acquia subscription in further sites, I don't see customers (or;<em>my</em>;customers, at any rate) going for a further expense, so I think a future project to consider might be a Drupal module that provides similar functionality to Acquia. I hope Dries doesn't mind too much.4,As a learning exercise I decided to use the Google Maps API tocreate something that might be useful. A guide to free wifi hotspots inGalway. I had a bit of a google around and found one effort that hadbeen started and died in the same month, about 2 years ago. So, Ifigured that the niche still needed to be filled and got to it.Google provides APIs to many of their apps, Search, Maps and morerecently the Google Ajax Feed. I'll do something with that in thefuture, but for now, I wanted to play with Maps.For those of you who know Javascript, it's pretty quick and easy toget stuck in, for those who don't, well, if you know any OO language,you'll have enough to be getting on with.When you apply for access to the API, you are given a sample codesnippet, which, when pasted into a page gives you a map, centred onGoogle HQ or thereaboutsâ€¦ no good for my purposes, so I opened upGEarth and zoomed over to Galway, found Eyre Square and grabbed theco-ordinates. I then edited the sample code to create a map objectcentred on these coordinates and there was Galway.Pins can be added to the map, much as you would a real map on acorkboard, and it was these I was going to use to mark the hotspotlocations. To do this, I created a marker object with the co-ordinatesof the hotspot. I then added a listener (which listens for clicks) topop up an address and further details. Finally, I added an overlay tothe map to display the marker. Great!one hotspot. Now I just rinse andrepeat for all the hotspots I know about and we're done.5,Ok, I know the title is probably triggering spam filters all over.\nMost people have heard of;<a href=http://www.gutenberg.org/>Project Gutenberg</a>, or, if not, they should have. Now we have the same for tech books.;\nPete Millet has devoted some of his spare time to scanning and otherwise digitising technical books on which the copyright has lapsed. Thanks a lot Pete.\n\n<a href=http://www.pmillett.com/technical_books_online.htm>Technical Books Online</a>\n\nThanks also to Bill Meara M0HBR (<a href=http://www.soldersmoke.com/>Soldersmoke</a>) for passing on this little;<a href=http://soldersmoke.blogspot.com/2008/12/free-electronic-books-online.html>nugget</a>.\n6,This Christmas, my wonderful GF got me something I have wanted since I was a small boy, a telescope. A;<a href=http://www.opticalvision.co.uk/documents/64.pdf target=_blank>damn fine one</a>;too.\nI have always fancied giving astrophotography a shot, so I got the requisite attachment to hook my;<a href=http://www.dpreview.com/reviews/nikond80/ target=_blank>D80</a>;up to the scope.\nI tried many permutations of T-adaptor and ring to get a sharp image, but to no avail... or at least not in prime focus mode. I then tried projection mode, which requires inserting an eyepiece into the T-adaptor.;\nThis is the shot I got. 1/50 sec @ ISO400\n\n<iframe allowtransparency=true frameborder=0 height=480 scrolling=no src=https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fphoto.php%3Ffbid%3D57478393176%26set%3Da.57092638176.58883.548903176%26type%3D3&amp;width=500 style=border:none;overflow:hidden width=500></iframe>\n7,Finally, after freezing all Winter, I decided to do something a little more secure and warm about getting my various antenna feedlines into the shack. The previous attempt was so slipshod that I think the less said about it, the better, so we'll leave it there.\nI had a few pieces of 12mm ply lying around, so after measuring the window (23.5 x 13.5) cut one to fit. A little bit of trimming, here and there and a bang with a hammer, and it was a snug a fit as you could ask for. I then drilled a few holes to take the 3 SO239 bulkhead feedthroughs I had gotten very cheaply off eBay. A also cut a rough slot for the 450 ohm twinlead and drilled a few 3mm holes for various other bits of wire. The Drake 2B does, after all, need its own antenna.\nSo, this is the result...\n\n<img alt= src=http://gerryk.com/sites/default/files/feedthrough1.JPG />\n\n<img alt= src=http://gerryk.com/sites/default/files/feedthrough2.JPG />\n\n<img src=http://gerryk.com/sites/default/files/feedthrough3.JPG />\n8,Ok, there have been a few additions, changes, retirements and so in in the old shack. The current lineup is...\n\n<strong>VHF/UHF - Yaesu FT736R\n4m - Philips FM1000 with PA4DEN 3.2 firmware\nHF - Icom IC756 PROIII\nHF Receiver - Drake 2B</strong>\n\n<img alt= src=http://gerryk.com/sites/default/files/shack.JPG />\n\nThere's a little story behind each of these rigs. The ones that make me most happy these days are the Drake 2B and the PROIII.;\nThe Drake came about primarily through hearing Bill Meara going on about them on his podcast Soldersmoke. I then came across an SK sale in the back of PW, got in touch with fellow GQRP member, Colin G3VTT, who was handling the sale, and with his great assistance, was the owner of a mint condition Drake 2B with matching 2BQ Q multipler.\nThe PROIII is one of those things that we all dream about, but never dare hope we'll ever own. They're far too expensive to justify, even to save for, let alone just drop the cash on. However, a certain ham who I have known a while used to be an Icom dealer, and he required a website, whereas I am a web designer who would have loved a 756PROIII. Can you see where this is going? Barter is a womderul thing...\n9,We (the <a href=http://galwayvhfgroup.blogspot.ie/>Galway VHF Group</a>) have a good many portable operations coming up this year, so, to supplement our portable HF antenna collection, I thought a 20m Moxon might be a nice project.\nThe only real expense was the 4 fibreglass fishing poles, but they ended up very cheap, even when you factor in postage from the UK.\nThe design was going to be based around a spreader made from a rectangle of 12mm ply, with 25mm dowel bolted on at the relevant angles.\n\n<img alt= src=http://gerryk.com/sites/default/files/spreader1.JPG />\n\nOnce this construction was complete, I needed to do a little tapering with a rasp to get the poles to fit snugly, and then we had the test fit...\n\n<img alt= src=http://gerryk.com/sites/default/files/spreader2.JPG />\n\nThe feedpoint was fabricated from a terminal block in a small box, mounted on another (scrap) piece of fibreglass pole, and cable-tied to the spreader.\n\n<img alt= src=http://gerryk.com/sites/default/files/moxon-feedpoint3.JPG />\n\nA little bit of pruning and we are on the air!! First QSO was with Tom, KE9RY from Wisconsin, who gave our puny 5w signal from the FT817 a 5/2 report. Pop the champange!\nFor the record, the gentleman in the pink sweater is Liam, EI6GXB. I am not so sartorially challenged.\n\n<img alt= src=http://gerryk.com/sites/default/files/moxon.JPG />\n10,Yesterday, 17th March (St. Patrick's Day) was also the date of the first castle activation for;<a href=http://cashota-ireland.org/>CASHOTA-Ireland</a>. We chose this day for a number of reasons... it was likely that there would be many stations eager to talk to an Irish station, and it was the first day I would have available.\nThe castle to be activated was Oranmore Castle, resident of World War II Submarine Commander and twice circumnavigator of the world, Commander Bill King. This Castle was designated EI/001/C for the CASHOTA Award.\n\nI spent the previous couple of days building an 80m dipole, a 40m dipole and a;<a href=http://gerryk.com/node/15>20m Moxon</a>;with some help from;<a href=http://www.liammartin.com/>Liam EI6GXB</a>.\nI had recently acquired a 20' x 2' aluminium pole, and Mark, EI6GUB had fabricated a really nice drive-on plate, so we were fully kitted out for the operation.\n\nI'm pleased to report that the event went very well indeed. I was, as I hoped, variously QRV on 80, 40 and 20.;\n80 was not in the best of shape. Made about 8 good contacts over an hour and a bit. Much QRM and general noise hampered things somewhat.\n40 was a different story... 30 odd contacts, many from G land, but also F, D, SQ and many more.;\n20 yielded a bit of DX, giving contacts in Russia, Canada and the US, with the record in terms of distance being Vegas, baby.\n\nAltogether a great day, made better by wonderful weather. Some visitors in the shape of EI6GUB, 6GXB, 5DD and our guest from D land, Udo DJ5UL, made things even more enjoyable.\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1046.JPG />\n\nOranmore Castle with the antenna mast in the foreground\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1047.JPG />\n\nUdo, DJ5UL, our guest for the day\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1048.JPG />\n\nSteve, EI5DD, welcoming Udo, DJ5UL\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1054.JPG />\n\nGerry, EI8DRB (me) working the DX\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1061.JPG />\n\n;\n;Liam, EI6GXB, working stations as Martin and Udo look on\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1075.JPG />;\n\nSteve, EI5DD, gets another one in the log\n\n<img alt= src=http://gerryk.com/sites/default/files/ei001c/DSC_1068.JPG />\n\nThe 20m Moxon reaching out for the DX\n11,It's almost exactly a year since Dan Kaminsky;<a href=http://www.blackhat.com/html/webinars/kaminsky-DNS.html>announced</a>;what has been described the as as the most egregious network security flaw in 10 years. Long enough, it could be thought, for the network admins at the world's ISPs to get their shops in order and eliminate the bug. Especially, since the work of actually eliminating the vulnerability had been undertaken by the authors of the various vulnerable versions of Bind within weeks of the announcement, and all that was required at the ISP level is to install the patch.\nRecently, however, it came to my notice that random name requests to Irish ISP,;<a href=http://www.eircom.net/>Eircom</a>'s nameservers were being sent to link farm advertising pages. I wrote this off as a function of the network I was on when I noticed this, as large shared networks tend to be prone to all sorts of daft issues. This morning, however, I had a conversation with someone who was experiencing strange problems with;<a href=http://www.gaire.com/e/f/view.asp?parent=1253869&amp;nav=1>obviously</a>;<a href=http://www.boards.ie/vbulletin/showthread.php?t=2055567516>hijacked</a>;<a href=http://countermeasures.trendmicro.eu/eircom-dns-servers-compromised/>pages</a>;appearing for domains like google.ie and eircom.net and this spurred me to attempt a little research.\nThe primary and secondary nameservers;<a href=http://support.eircom.net/SRVS/CGI-BIN/WEBCGI.EXE/&amp;/?St=150&amp;E=0000000000172964449&amp;K=1923&amp;SXI=3&amp;E=0000000000172964449&amp;St=150&amp;K=1923&amp;SXI=3&amp;case=2825&amp;branch=4>advertised</a>;by Eircom, 213.94.190.236 and 213.94.190.194 are unfortunately unavailable at this time. The IPs are up and on the internet, but the nameservers are not responding to queries. Whether this is because they are currently being patched, or because of;<a href=http://www.boards.ie/vbulletin/showthread.php?t=2055608998>some other outage</a>;is uncertain.\nA;<a href=https://www.grc.com/dns/dns.htm>test</a>;(one of many) has been;<a href=https://www.grc.com/dns/dns.htm>made available</a>;by Steve Gibson of Gibson Research Corporation to determine if your DNS is vulnerable to the kaminsky bug.\nOn a final note, I would recommend using;<a href=http://www.opendns.com/>OpenDNS</a>;or equivalent than the often broken DNS provided by ISPs.\n12,<a href=http://siliconrepublic.com/news/article/13361/cio/hse-to-centralise-all-medical-data-in-new-national-health-data-centre>Full Article at Silicon Republic</a>\nI have to be honest when I say that this does;<strong>not</strong>;inspire confidence. Neither the HSE, nor Eircom has shown themselves to be leading lights of security and disclosure, preferring a more reactive approach of spin in the face of obvious breaches and slips.\nIt remains to be seen how this plays out, but I, personally, am not expecting any major diversions from form.\n13,The WA1ZMS Trans-Atlantic beacon/transmitter project has had a recent upgrade to\nits operation.\n\nTechnical Description:\nQTH: FM07fm at 4200ft AMSL\nAntenna: 2 6ele yagi stack aimed at 60 degrees to Europe\nERP: 7kw!\n\nFrom Brian Justin, WA1ZMS/4...\n---\nA land mobile grade base station VHF exciter is used and the 25w driver PA is\nkeyed for CW modulation. The exciter utilizes a 10MHz frequency reference with\nis derived from an HP-Z3801A GPS frequency standard. The TX frequency is\n144.285MHz and is stable to within 1E-10Hz, although propagation effects will\nlikely cause much more observed frequency error than the GPS standard can\nprovide.\n\nA new higher power PA has been added as well as an upgrade to the physical rack\ncabinet and requisite power supply, etc.\n\nRF power out of the transmitter is now 500w and is driving a new pair of\nSinclair 6-element yagis. After LPF, circulator, bandpass cavity filter, and\nfeed line losses the ERP is now at the 7kw level. This is likely the highest\npower 2m beacon currently on the air.\n\nThe new PA is a home brew design using a pair of MRF151G push-pull devices\noperating with PCB Wilkinson splitters and coax delay lines to allow for true\nquadrature operation of the pair of 300w amplifier pallets.\n\nAll QSL reports are welcome and can be sent to:;<a href=mailto:wa1zms@arrl.net>wa1zms@arrl.net</a>, although\ntrans-Atlantic QSL reports will be given the highest priority!\n---\n\nSo those of you interested in the;<a href=http://www.irts.ie/cgi/brendan.cgi>Brendan Award</a>;keep an ear out. This service will go a long way towards helping us out.\n14,APRS is often misunderstood to mean Automatic Position Reporting System, when, according to creator Bob Bruninga, WB4APR, it actually stands for Automatic Packet Reporting System. Some might maintain that the primary purpose of APRS is vehicle tracking and service position reporting, and, while this is not entirely untrue, it does sell short the possibilities of this excellent technology.\nThe more obvious purposes to which APRS could be put to include announcing services... obviously, being somewhat limited to the Amateur Radio community, services of interest to them would be the first choice. Voice repeaters, meetings and nets or news readings can be announced both as waypoints, showing location, and as bulletin messages to the APRS user's inbox.\nFurther uses would be in point to point communication experiments. Combining APRS data with weather information and topology detail, using a program like RadioMobile, could create a very comprehensive picture of the environment and be very useful in recording and recreating experiments.\nAREN activites would also be enhanced using APRS. The Galway VHF Group provides communication for many voluntary and charitable events, and the use of APRS for monitoring participants could prove invaluable. Couple this with the visual impact to the non-technical watcher, of a moving map display with the walkers/cyclists progress through the event being graphically depicted, and it can be seen that APRS is definitely a technology which has many proctical purposes for the Amateur Radio community.\n\n;\n\n<h3>My Station</h3>\n\n;\n\nMy home APRS station consists of a laptop running UI-View32 connected to a PacComm Tiny2 TNC, which connects to a Yaesu FT2800 VHF transceiver and finally through an antenna switch to the Diamond tri-band vertical on the roof. This setup is pretty typical for a home station, although alternatives exist, such as Xastir for Linux.\nI have my beacon set up to transmit every 30 minutes, and have the path set to WIDE2-2. This gives me a Time To Live of 2 hops, which is optimal, as there is an IGate at EI7IG 2 hops from me.\nI also got a nice big map of Ireland from John, EI7IG, which plugs nicely into UI-View32 and gives a great overview of the country, while being big enough to show loads of detail.\n\nMobile, I use a Tracker2 from Argent Data connected on one side to a Garmin Nuvi 350 and on the other to an Alinco DR110, which is operating at low power (10W) into a 1/4 wave whip on the roof of the car.\nThe Tracker2 has the facility to plot waypoints received via APRS on the Nuvi, it will also receive messages and bulletins and display then on the Nuvi, and the Nuvi has an onscreen keyboard which can be used to compose messages to other APRS stations.\nThe Tracker2 is set to beacon my position between every 15 minutes to 20 seconds, depending on delta-v... I'm not being purposely obscure here, because it really does use changes in velocity to determine beacon frequency... speeding up, slowing down and changing direction will all have an effect on the rate that beacons are sent out. This has the effect of keeping a pretty accurate record of position, while not clogging up the digis when stationary. I have set a path of WIDE1-1,WIDE2-2, which has the effect of giving me 2 - 3 hops, even where legacy digis, that don't understand the WIDEn-N paradigm, are in use. This should be sufficient to get me to an IGate from anywhere in Ireland.\n\n;\n\n<h3>Projects</h3>\n\n;\n\nOne project I am working on currently is a system whereby local items of interest can be plotted on the fly from my mobile station.\nI have a Psion 5MX, which plugs into a serial port on the Tracker2, and am writing some Perl or Python scripts to transmit custom APRS packets which will notify other users of transient events such as traffic congestion or flooding. I believe that this will be a useful feature as APRS gains more penetration in the community.\n15,Since I qualified for a free upgrade to a Pre, I decided to get one.\nMy initial impression is that it is a small phone, compared to my previous iPhone 3G. The keyboard is small, but very usable... not as good as the one on the Treo 700w I had about a year or so ago though.\nThe OS looks good, and I like the multitasking aspect... being able to leave a Twitter client and GTalk client open in the background while making calls, sending texts and emails, is fantastic. The Google integration is impressive, and it handles Yahoo mail and even Hotmail, unlike a certain other competing handset.\nGraphically, it's pretty, but the OS animations are a little on the jerky side compared to the iPhone.\nBattery life was abysmal to begin with... I was getting 3 hours from full charge to dead. Apparently having my Hotmail account configured wasn't helping, so I removed it. Battery life jumped from 3 hours to about 6. Still terrible, especially when you consider that the 6 consisted of about 5 minutes of of calls, 5 minutes of email/web and the rest sitting in the centre console of my car or in my pocket. Rubbish is the only way to describe it.\nAnother puzzling thing is that it gets extremely hot. Not long phone conversation hot, I mean 50+ degrees hot... as in very uncomfortable to hold hot. The heat doesn't seem to come from the battery either, but possibly a poorly heat-sunk processor, located a little south of the battery.\nI really wanted to like this phone, having been a Palm fan going back to the original Pilot nearly 15 years back and including pretty much every model since. I really wanted an alternative to the iPhone, which, since 3.1, has become flakier and flakier, hanging often and requiring regular resets. It looks like the iPhone is staying with me for a while yet... maybe until the Motorola Droid hits our shores, a long wait, if the carriers prove to be true to form.\nAs for the Pre... it's going back to O2. I'd feel guilty selling it on eBay, and I really want my gold upgrade back for a better handset.\n16,Over the last few weeks, the;<a href=http://galwayvhfgroup.com/>Galway VHF Group</a>;has been testing and putting the final touches to our;<a href=http://gerry.com/node/20>APRS</a>;Digipeater. The final test, the burn-in, if you will, was performed over the last week at my home station, and, having performed perfectly, this morning, the weatherproof case containing the 10A power supply, Yaesu FT8900 and;<a href=http://www.argentdata.com/products/tracker2.html>Argent Data Tracker 2</a>;configured as a digipeater, was installed at the base of the antenna mounted on the roof of Airwire's Mervue data centre. Many thanks to Martin List Petersen, CTO of;<a href=http://www.airwire.ie/>Airwire</a>;for donating the roof space. Thanks also to John Ronan Ei7IG and John McCarthy EI8JA for help, advice and EPROMs.\n\n<img alt= src=https://gerryk.com/sites/default/files/digi0.jpg />\n\nThe;<a href=http://www.eham.net/reviews/detail/1171>Cushcraft</a>;<a href=http://www.universal-radio.com/catalog/hamants/0641.html>ARX2</a>;2x 5/8 wave collinear antenna just after the final tune-up. The antenna is mounted some 30 meters ASL, and has a great view to all horizons. It should provide good coverage well into Mayo, Roscommon and has no problem hitting the next digi at Devil's Bit, near Toomeyvara in Co. Tipperary, from where packets can be repeated through the;<a href=http://searg.com/>South East Amateur Radio Group</a>;APRS network and into an iGate, where the various APRS viewing websites, such as;<a href=http://aprs.fi/?call=ei2gcp&amp;mt=m&amp;z=11&amp;timerange=3600>aprs.fi</a>;can display the relevant stations.\n\n<img alt= src=https://gerryk.com/sites/default/files/digi1.jpg />\n\nMartin List Petersen and Enda Coffey EI3IS finishing the antenna installation.\n\n<img alt= src=https://gerryk.com/sites/default/files/digi2.jpg />\n\nThe weatherproof case containing EI2GCP.\n\nPlans for the future include adding weather reporting functionality, which will broadcast data from a weather station into the APRS network. We also intend on reviving the packet radio network in the Galway area. Packet radio, once very popular, has lost favour to the Internet, but for experimentally minded Radio Amateurs, still holds interest. I purchased an old;<a href=http://www.baycom.org/>Baycom</a>;ISA card which has 4 1200 baud packet modems on it a couple of years ago, and it looks like we'll be able to put it to use as both a packet BBS and a packet gateway to other bands. SEARG have a 4m link which we could link to, and the 10m band holds DX possibilities when the band is open.\nFor now, though, I look forward to exploring what APRS has to offer.\n17,I am currently building a house, and as such, have a great platform for implementing all the things I have dreamt of but could never manage to achieve in a rented house. Apart from finally having the spaghetti finally embedded in the walls and floors, and having almost enough power and network sockets (you can never actually have enough, right?) I can experiment with centralising control of the house and accessing home telemetry through my phone.\nSo... walk before you can run, right? I was discussing all of this with my builder who mentioned that he'd always wanted to be able to SMS his heating system to get it to turn on an hour before he gets home or whatever, and asked if I would be able to do it for him. Great! A testbed for the grand plan!\nBeing a Linux admin, I generally eschew embedded solutions for linux hosted ones, and in this case, hosted on suitably small hardware... the;<a href=http://us.acer.com/acer/product.do;jsessionid=E392CB47BB44B92F719E9797D0A980A7.public_a_us003?LanguageISOCtxParam=en&amp;rcond5e.c2att92=449&amp;inu49e.current.c2att92=449&amp;link=ln314e&amp;CountryISOCtxParam=US&amp;kcond47e.c2att92=449&amp;rcond159e.att21k=1&amp;kcond48e.c2att101=61912&amp;rcond190e.att21k=1&amp;acond23=US&amp;rcond4e.att21k=1&amp;sp=page17e&amp;rcond157e.c2att92=449&amp;var9e=793&amp;ctx1g.c2att92=449&amp;rcond42e.att21k=1&amp;kcond50e.c2att92=449&amp;rcond45e.att21k=1&amp;rcond158e.c2att1=25&amp;ctx2.c2att1=25&amp;inu53e.current.c2att92=449&amp;rcond38e.c2att1=25&amp;var13e=US&amp;rcond44e.c2att1=25&amp;rcond186e.c2att92=449&amp;rcond3e.c2att1=25&amp;rcond28e.attN2B2F2EEF=3264&amp;rcond189e.c2att1=25&amp;ctx1.att21k=1&amp;CRC=2678317110>Acer Veriton</a>. This little box is basically an Acer Aspire One with no keyboard or screen. Powered by an 1.6GHz Atom and containing 1GB of RAM and 160GB HDD, it's a decent little box for many purposes, including general computing, and drawing only 20W of power is perfect for an always-on system.\nThe system was planned as a couple of scripts polling the GSM dongle via the gnokii toolset and parsing out commands which would be passed to the heyu commandline tool which drives the;<a href=http://www.uk-automation.co.uk/x10-computer-interface-usb-serial-version-p-997.html>Marmitek CM11</a>;X10 controller.\nOlder styles of GSM dongle appear to Linux as a couple of USB ttys, which will accept AT commands and the like. The gnokii toolset simplifies this and allows SMS to be sent and received from the commandline. gnokii is available as a Debian package, so that made things as painless as it is possible for software installation to be; sudo apt-get gnokii-cli and 30 seconds later it's done. I then edited /etc/gnokiirc and saved it as .gnokiirc in my home directory.\nThe CM11 has a USB connector which also shows up as a USB tty. The heyu toolset needs to be downloaded and compiled, but it's a painless experience.\nI built the;<a href=http://wiki.debian.org/DebianEeePC>eeePC version of Debian 5;</a>on the Veriton booting from the SD, which had the netinstall image dd'd onto it. I then installed the usual suspects; vi, sudo and build-essential, followed by gnokii and heyu (which had to be compiled).\nThe CM11 controls 4 X10 relays, which are ganged with the original relays to allow;\nThe scripts that run this whole thing were developed specifically for this site, but could easily be modified to handle different situations and functionalities. They are very much alpha version and there is absolutely no warranty, either explicit or implicit. That being said, I have made it available under the GPL, so it is open to copying, modification and everything else the GPL permits. It can be downloaded from;<a href=https://sourceforge.net/projects/x10-sms/>Sourceforge</a>.\n18,Galway has a new HackerSpace.\n\nGoing by the name 091labs (from the dialling code for Galway, 091) a HackerSpace has recently become active in Galway in the West of Ireland. I have yet to visit, but am very excited that we finally have our very own HackerSpace...;\nFurther details from the 091labs site:;<a href=http://091labs.com/>http://091labs.com/</a>;or their twwiter feed:;<a href=http://twitter.com/091labs>http://twitter.com/091labs</a>\n\nI look forward to visiting the labs soon.\nBest of luck!!\n19,I will be conducting an Asterisk workshop on Thursday evening, August 19, 2010 as a part of Irish HackerSpaces week.;The workshop will cover installation of Asterisk (as Trixbox), connection to a SIP trunk provider, connection to an IAX peer, set up of SIP clients and configuration of some of the many features Asterisk offers.\nWe have selected Blueface as the trunk provider.;\nTOG, in Dublin have an Asterisk server set up already, so we have decided to peer with them. This will enable us to make calls to them directly over IAX and will serve as a nice testbed for ideas.\n\n091Labs is located at Exchange House in Fairgreen, Galway -;<a href=http://bit.ly/d1oZaH>http://bit.ly/d1oZaH</a>\n\nHackerSpace week is a week of hacker-oriented events taking place at the four hackerspaces in Ireland.;\n091Labs -;<a href=http://091labs.com/>http://091labs.com/</a>\nTOG -;<a href=http://tog.ie/>http://tog.ie/</a>\nLimerick Hackerspace\nCork Hackerspace\n20,Open StreetMaps is a worldwide collaborative effort to create a high quality, unencumbered street-level map of the world. When I first came across it, a few years ago, Co. Galway was almost unpopulated (with mapping), and Galway city extended as far as Moneenageesha.\n\nThings have changed, however.\n\nOn;<a href=http://www.marlow.dk/site.php>Marlow's</a>;suggestion, I downloaded a daily Garmin build of the Ireland map and installed it to SD card for use on my Nuvi.\n\nOne of the OSM contributors creates regular builds converted to Garmin .img format and makes them available for download from;<a href=http://andrewmccarthy.ie/osm/>here</a>.\n\nAlternatively, a slightly less comprehensive (no Irish Language) map can be downladed from;<a href=http://maps.openstreetmap.ie/~mackerski/garmin/>here</a>.\n\nEither way, the next step is to create a directory 'Garmin' on the root of an SD card. It doesn't need to be a big card, as the biggest Ireland map file is about 75MB.\nCopy the .img file (after unzipping, if necessary) to the Garmin directory, insert into a compatible Garmin GPS and power on. After a few minutes it will start up. Press 'Settings' -&gt; 'Maps' -&gt; 'Map Info' and uncheck all but\nthe OSM map you wish to display. Go back to the main menu and select View Map to see your newly installed map.\n\nFrom what I have seen, the current state of OSM is vastly more up to date, and much more detailed than the Navteq offerings from Garmin. And they're free (as in speech/beer).\nIf you wish to build your own maps, current OSM map extracts may be downloaded;<a href=http://download.geofabrik.de/osm/>here</a>. These extracts can be converted to Garmin format using;<a href=http://wiki.openstreetmap.org/wiki/Mkgmap>mkgmap</a>. You may use standard styles, or create your own, so if the standard colouring grates with you, you can create maps with the orange background, and pink roads you have always craved.\n\nVisit;<a href=http://www.openstreetmap.org/>http://www.openstreetmap.org/</a>;to learn more and maybe contribute yourself!\n21,One of the guys at;<a href=http://www.tog.ie/>tog</a>;mentioned in a recent post to the mailing list the idea of using a photo mosaic to make up a QR code, as opposed to the usual black on white that we see everywhere.\n\nTo see if it works, I created one, and it appears that it does. Not sure about the thresholds of size and contrast though, as this is just a proof of concept, rather than an exhaustive study.\n\n<img alt= src=http://i.imgur.com/v3Lo0.png />\n22,<a href=http://railsgirls.com/>Rails Girls</a>;is an international initiative geared at encouraging more women to get involved in technology, and;<img alt= src=http://readidea.com/magazines/issue6/articles/ad-railsgirls/img/railsgirls-sq.png />more specifically, software engineering and CS. It does this by teaching Webapp development through the medium of;<a href=http://rubyonrails.org/>Ruby on Rails</a>.\n\nI am a member at;<a href=http://091labs.com/>091 Labs, Galway's very own Hacker|Maker space</a>. I don't get the chance to actively participate in much these days, but still monitor the mailing lists. When I came across Myriam Leggieri's post to the list looking for mentors for an event she was putting together, I was immediately interested. When I saw it was using RoR, I was in. I am a big fan of the Ruby language... I enjoy its purity and consistency. I also really like Rails and how fun it is, while being capable of 'big' stuff too.\n\nSo... that was my first introduction to Rails Girls as a concept, and immediately I was taken by the enthusiasm shown by all involved... not just the mentors and others involved in making;<a href=http://railsgirls.com/galway>the Galway event</a>;happen, but worldwide. Since I would be doing one of the many presentations during the day, I got in touch with some others that had done similar presentations at their events in other cities. Straight away, they replied with words of encouragement and open permission to use material from their slidepacks. This movement is something that seems to bring out the best in community spirit, even though that community may be spread out across the world.\n\nOn the first day, we invited all of the participants to attend an 'install party', where we, the mentors, would assist the girls to get the Ruby on Rails framework set up on their computers, along with a good editor to assist in the code creation tasks of the following day. This was attended by a good many, filling the main room in DERI where the event was to take place, and I was immediately struck by the spectrum of women that were attending. They spanned the gamut from schoolgirls to retired ladies, and included tech professionals, the unemployed, students and housewives. The hardware brought along was similarly varied... Windows laptops, some newer, and some older... some Macbooks, a Linux laptop or two, and two full size 27 iMacs!\n\nOn the main day of the event, once again, I was blown away by the variety of women in attendance. To see such a hunger to learn in a traditionally male-centric subject was so refreshing, and gives hope for the future of the tech/IT sector.\nThe day started out with a brief welcome from Myriam, followed by a short talk from local TD Frank Fahy. DERI's John Breslin then said a few encouraging words, after which I gave my presentation which was an overview of web-app development, with the Rails Girls Application used as a case-study. The next item was a workshop style presentation from Rails Girls veteran, Emily Castles, which really got the girls involved for the first time during the day. This was followed by a talk on Beginning Programming by Stefania Farrugia.\nOnce this was over, the group convened to the Computer and Communication Museum also located in the DERI building. In amongst historical items, such as a DEC PDP-8, manufactured in Galway, and many items that brought a nostalgic tear to my eye (80's 8-bit micros!), the attendees and mentors had coffee and a chat, discussing the day so far, each others' backgrounds and the historical significance of the many items of hardware curated by Brendan Smith of DERI.\n\nThe 'main event' was to be a one-to-few mentored workshop, where one mentor would work with a small group of 4 or 5 girls to build, from scratch, a working web application. The application chosen for this event would record details of the attendees, including their address, and using some fancy Rails plugins, render a Google Map with pins identifying the locations of the attendees.\n\nThe workshop initially lasted 2 hours, and this was spent both constructing the application, and describing concepts, such as 'MVC framework', 'client - server architecture', 'html styling', 'data models' and so forth. The girls ate up the information and within the initial 2 hour slot, had each coded up their own version of the webapp, and had their own fully functional maps displayed. Personally, I was impressed at the rate at which these women, some completely new to coding, picked up some very complex concepts. We then broke for lunch, and afterwards returned to the app, where we did some additional styling and tweaking.\n\nA series of lightening-talks, similar to the Ignite format, was planned for the afternoon. This included a talk on Getting into Game Development, from Alanna Kelly, a section on the Rails Girls movement itself, from Linda Liukas, a talk on her career experiences, from Ana Maria Valarezo. Yuwei Lin, visiting from Salford University gave a talk on An Ethnography of Women in FLOSS (Free/Libre Open-Source Software, and finally, Mateo Collina gave a very interesting talk on The Internet of Things.\n\nSome people took the opportunity to do some last minute bug-hunting, or polishing of apps, slowly the visibly elated attendees made their way... their newly empowered way, home. Home, no doubt, to boast of their new found skills to friends and family. Later that evening, mentors were joined by some of the participants for a few well deserved drinks and live music, courtesy of Munroe's bar.\n23,I just got one of those 'we can SEO you to riches and fame' emails. Normally, I just ignore them, flag as spam so gmail recognises them in the future, and go about my day. This time, however, the brazen tone and apparently international presence of IMPACTFULSEO.COM caught my attention.\n\nQUOTE--------------------------------------------------------------\n\nHi,\n\nI was on your website;<a href=http://www.gerryk.com/>www.gerryk.com</a>\nand wanted to shoot you a quick note. I think I can make a few changes\n(aesthetically and/or SEO - wise) to make your site convert more\nvisitors into leads and to get it placed higher in the organic search\nresults, for a few of the select terms.\n\nThis is NOT like one of those foreign emails you probably get in\nyour inbox every day. Just to be upfront I have 3 agents that work with\nme for development /SEO.\n\nI would just need to know which (if not\nboth) services you're open to checking out information about, either web\ndesign or SEO. Would you be open to seeing more brief info / quote for\nwhat I would like to accomplish?\n\nRegards,\n<img alt=Inline image 1 src=https://mail.google.com/mail/u/0/?ui=2&amp;ik=83aedab649&amp;view=att&amp;th=1409cfc4c893660c&amp;attid=0.1&amp;disp=emb&amp;realattid=inlineImages0&amp;zw&amp;atsh=1 />\nQUOTE--------------------------------------------------------------\n\nA bit of searching in Google Maps revealed his Australian address to be a restaurant, his UK address to be non-existent, and mis-spelled, and his US address to be the offices of one Cots Communications.\n\nHis website... a pretty shoddy affair for a company trading for 9 years is full of misspellings, and is located at a domain only registered since March 2013, so about 5 months, rather than the 9 years claimed.\n\nThe whois records are as follows:\n\nDomain Name: IMPACTFULSEO.COM\nRegistrar URL:;<a href=http://www.godaddy.com/>http://www.godaddy.com</a>\nUpdated Date: 2013-03-10 02:37:08\nCreation Date: 2013-03-09 08:14:15\nRegistrar Expiration Date: 2014-03-09 07:14:15\nRegistrar: GoDaddy.com, LLC\nRegistrant Name: Imran Rehmani\nRegistrant Organization:;\nRegistrant Street: 6771 Quail Hill Pkwy Irvine,\nRegistrant City: California\nRegistrant State/Province: Alabama\nRegistrant Postal Code: 92603\nRegistrant Country: United States\nAdmin Name: Imran Rehmani\nAdmin Organization:;\nAdmin Street: 6771 Quail Hill Pkwy Irvine,\nAdmin City: California\nAdmin State/Province: Alabama\nAdmin Postal Code: 92603\nAdmin Country: United States\nAdmin Phone: 9819993019\nAdmin Fax:;\nAdmin Email:;<a href=mailto:nealjwigington@gmail.com>nealjwigington@gmail.com</a>\nTech Name: Imran Rehmani\nTech Organization:;\nTech Street: 6771 Quail Hill Pkwy Irvine,\nTech City: California\nTech State/Province: Alabama\nTech Postal Code: 92603\nTech Country: United States\nTech Phone: 9819993019\nTech Fax:;\nTech Email:;<a href=mailto:nealjwigington@gmail.com>nealjwigington@gmail.com</a>\n\nA bit of googling for the domain name led to this site:;<a href=http://www.jimmo.org/another-dubious-seo-company-impactfulseo-com/>http://www.jimmo.org/another-dubious-seo-company-impactfulseo-com/</a>\nAnother non-score for ImpactfulSEO, by the looks of it.\n\nSo, anyone who lands on this post by googling our friend... save your money.\n24,Since I wrote<a href=http://gerryk.com/node/26/edit>;this blogpost</a>, some of the sites and information referenced has disappeared or become otherwise out of date. Here is an updated version:\n\nOne of the OSM contributors creates regular builds of GB and Ireland converted to Garmin .img format and makes them available for download from;<a href=http://talkytoaster.co.uk/ukmaps.htm#GPSRs-Only>here</a>. The .img files are zipped, and the largest is &gt;550MB, so you'll need a 1GB SD Card or bigger. Other countries and larger areas are available from;<a href=http://wiki.openstreetmap.org/wiki/OSM_Map_On_Garmin/Download>here</a>.\n\nEither way, the next step is to create a directory 'Garmin' on the root of the SD card. Copy the .img file (after unzipping, if necessary) to the Garmin directory, insert into a compatible Garmin GPS and power on. After a few minutes it will start up. Press 'Settings' -&gt; 'Maps' -&gt; 'Map Info' and uncheck all but the OSM map you wish to display. Go back to the main menu and select View Map to see your newly installed map.;\n\nFrom what I have seen, the current state of OSM is vastly more up to date, and much more detailed than the Navteq offerings from Garmin. And they're free (as in speech/beer).;Since the last post, this is even more true. The OSM maps are really excellent.\n\nIf you wish to build your own maps, current OSM map extracts may be downloaded;<a href=http://download.geofabrik.de/osm/>here</a>. These extracts can be converted to Garmin format using;<a href=http://wiki.openstreetmap.org/wiki/Mkgmap>mkgmap</a>. I intend to automate this process and make the output availble for direct download Real Soon Now.\n25,The awesome <a href=https://www.insight-centre.org/users/myriam-leggieri>Myriam Leggieri</a> just posted on the 091 Labs message board that;<a href=http://railsgirls.com/galway>Rails Girls Galway</a>;will be happening again this year. I had such a good time last year that I have to put my name forward to help again this year.\nDeadly. Can't wait!\n26,I have created image files for CHIRP for both the;<a href=http://www.miklor.com/UVB5/>Baofeng B5, VHF/UHF dual band HT</a>, and the<a href=http://cqhq.wordpress.com/2011/07/17/wouxun-kg-uvd1pl-review-worlds-1st-70144-mhz-dual-bander/>;Wouxun UVD1P 4m/2m dual Band HT;</a>with the Irish repeater&amp;internet gateway frequencies and where applicable, access tones. They also contain other frequencies that can be interesting to listen to, such as Marine VHF and PMR446.\nTo use them, you will need;<a href=http://chirp.danplanet.com/projects/chirp/wiki/Home>CHIRP</a>;and a;<a href=http://www.amazon.co.uk/gp/product/B0083H56MY/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;psc=1>radio programming lead</a>, and of course, the files, which can be downloaded from these links:\n\n<a href=https://dl.dropboxusercontent.com/u/32770/BaofengB5-Full.img>Baofeng B5 CHIRP file</a>\n\n<a href=https://dl.dropboxusercontent.com/u/32770/WouxunUVD1P-FullVHF.img>Wouxun UVD1P CHIRP file</a>\n27,I recently bought a TPLink WR703n as they are a nice, inexpensive, and very hackable little device. I have a few projects in mind for this, including playing with;<a href=http://hak5.org/?s=pineapple>Hak.5's Wifi Pineapple</a>. Pretty much all the hacks require flashing with OpenWRT.\n\nWhen I started my research, I discovered that some versions of the 703n can be bricked by OpenWRT. They are not actually fully bricked, as in completely unresponsive, but they boot with the LAN disabled, and therefore are uncontactable. It is possible to recover using the serial port, but this requires a bit of soldering, and is really not for the faint-of-heart.\n\nThe hardware that is susceptible is version 1.7. To add further complication, some devices that are labelled 1.6, are in fact really 1.7 devices under the hood. As a result, it is important to do a bit of probing to see what the actual version is. A couple of different scenarios may exist -;\n\n1. If the device is running the original Chinese firmware, the build version reading as follows - ;Build 120925 will correspond to a v1.7 firmware.\n\n2. If the device is shipped with dd-wrt pre-installed, it is possible to login over telnet The default login/password are root/admin. Once logged in, the following command will list the version -;\n\n<span style=font-family:Courier New,Courier,monospace;># grep -a U-Boot /dev/mtd0ro | cut -d'I' -f1;;;;;</span>\n\nA version 1.7 can be identified by a build date Sep 25 2012.\n\nIn my case, to further complicate the situation, the build version was -\n\n<span style=font-family:Courier New,Courier,monospace;>U-Boot 1.1.4 (Jun 19 2013 - 21:54:34)</span>\n\nThe usual 1.7 build id is;121204, there are some 1.6 builds reported as;130318 and;130321, whereas this is 130625. As a result, I I figured the prudent thing to do would be to flash a version of OpenWRT that would ensure compatibility with 1.7, while retaining compatibility with earlier hardware. The version that meets these criteria is the 12-09 build of OpenWRT - Attitude Adjustment branch. This can be downloaded from here:;<a href=http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin>http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/op...</a>\n\nWhile doing my research, I came across the failsafe uboot project. The purpose of this is to provide a featureful recovery system to help with those failed flashes and other brick-generating events. I decided to go ahead and flash this image also. I came across a post on OpenWRT discussing an interesting uboot with a web-gui failsafe mode. The thread is here:;<a href=https://forum.openwrt.org/viewtopic.php?id=43237>https://forum.openwrt.org/viewtopic.php?id=43237</a>\n\nThe code repo for the uboot is here:;<a href=https://github.com/pepe2k/u-boot_mod>https://github.com/pepe2k/u-boot_mod</a>\n\nA precompiled binary for the 703n can be downloaded here:;<a href=https://app.box.com/s/z13rrr8v8vdu70la67jn>https://app.box.com/s/z13rrr8v8vdu70la67jn</a>\n\nOnce downloaded, the image needs to be modified. The MAC address of the router needs to be inserted. Thankfully, though, scripts exist to do this.\nI will reproduce a script from;<a href=http://zhujunsan.net/index.php/2013/08/install-web-failsafe-u-boot-for-wr703n/>here</a>;for convenience:\n\n<span style=font-family:Courier New,Courier,monospace;>#! /bin/sh\n#high chance need have a change ...\nUBOOT_NAME=wr703n_tuboot_test_2012_06_06.bin\nMD5SUM_SHOULD_BE=623dc0bba6fab68c22e5fb2f329d7d09\n#need check the md5sum,any one byte in bootloader shoud right ...\nCURRENT_MD5SUM_VAL=$( md5sum $UBOOT_NAME |awk '{print $1 }' )\necho $UBOOT_NAME md5sum : $CURRENT_MD5SUM_VAL\nif [ $MD5SUM_SHOULD_BE = $CURRENT_MD5SUM_VAL ]; then\n; echo $UBOOT_NAME md5sum check pass\nelse\n; echo ###############$UBOOT_NAME md5sum check fail###############\n; exit\nfi\nRAW_UBOOT_LEN=`wc -c $UBOOT_NAME | awk '{print $1 }'`\nNEED_PAD_LEN=$((0x1fc00-$RAW_UBOOT_LEN))\n#Generate a file used as pad ...\ndd if=/dev/zero of=pad.bin bs=1 count=$NEED_PAD_LEN\ncat $UBOOT_NAME pad.bin &gt;tuboot_0x1fc00.bin\necho Backup some config first,just like MAC address ...\ndd if=/dev/mtd0 of=./config.bin bs=1 skip=$((0x1fc00))\ncat ./tuboot_0x1fc00.bin ./config.bin &gt;uboot_0x20000.bin</span>\n\nThis script needs to be run on the router, as it pulls data from the existing uboot. The script will create;<em>uboot_0x20000.bin</em>, which is the file we want to flash. Prior to running, UBOOT_NAME and MD5SUM_SHOULD_BE need to be updated to the values for your downloaded binary.\n\nThe commands I ran to update the image and flash it are as follows. My commands in bold.\n\n<span style=font-family:Courier New,Courier,monospace;>root@DD-WRT:~/flash#;<strong>sh update-image.s</strong>h\n64512+0 records in\n64512+0 records out\nBackup some config first,just like MAC address ...\n1024+0 records in\n1024+0 records out\n\n\nroot@DD-WRT:~/flash#;<strong>ls</strong>\nconfig.bin ; ; ; ; ; ; ; pad.bin ; ; ; ; ; ; ; ; ;tuboot_0x1fc00.bin ; ; ;;\nuboot_0x20000.bin ; ; ; ;uboot_for_tl-wr703n.bin ;update-image.sh\n\n\nroot@DD-WRT:~/flash#;<strong>cat /proc/mtd</strong>\ndev: ; ;size ; erasesize ;name\nmtd0: 00020000 00010000 RedBoot\nmtd1: 003c0000 00010000 linux\nmtd2: 002e0000 00010000 rootfs\nmtd3: 00020000 00010000 ddwrt\nmtd4: 00010000 00010000 nvram\nmtd5: 00010000 00010000 board_config\nmtd6: 00400000 00010000 fullflash\nmtd7: 00020000 00010000 fullboot\n\n\nroot@DD-WRT:~/flash#;<strong>mtd write uboot_0x20000.bin mtd0</strong>\nUnlocking mtd0 ...\nWriting from uboot_0x20000.bin to mtd0 ... ;[w]\n\n\nroot@DD-WRT:~/flash#;<strong>grep -a U-Boot /dev/mtd0ro | cut -d'I' -f1</strong>\nU-Boot 1.1.4 (Jun 19 2013 - 21:54:34)\n7▒AP121 (AR9331) U-Boot for TL-WR703N\nroot@DD-WRT:~/flash#</span>\n\nOnce this is completed, we can continue in to flash the firmware. I downloaded it from here ;<a href=http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin>http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/op...</a>;to a local webserver and downloaded to the router from there. I renamed it to something shorter while doing this.\nSequence of commands below... my input in bold.\n\n<span style=font-family:Courier New,Courier,monospace;>root@DD-WRT:/tmp#;<strong>wget http://192.168.1.222/files/openwrt.bin</strong>\nConnecting to 192.168.1.222 (192.168.1.222:80)\nopenwrt.bin ; ; ; ; ;100% |\n**************************************************************************\n**************************************************************************\n*******| ;3840k ;0:00:00 ETA\n\nroot@DD-WRT:/tmp#;<strong>mtd -r write openwrt.bin linux</strong>\nUnlocking linux ...\nWriting from openwrt.bin to linux ... ;[w]\nConnection to 192.168.1.1 closed by remote host.\nConnection to 192.168.1.1 closed.\n\n\nroot@erdos:~ $;<strong>telnet 192.168.1.1</strong>\nTrying 192.168.1.1...\nConnected to 192.168.1.1.\nEscape character is '^]'.\n;=== IMPORTANT ============================\n; Use 'passwd' to set your login password\n; this will disable telnet and enable SSH\n;------------------------------------------\n\n\nBusyBox v1.19.4 (2013-03-14 11:28:31 UTC) built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n\n; _______ ; ; ; ; ; ; ; ; ; ; ________ ; ; ; ;__\n;| ; ; ; |.-----.-----.-----.| ;| ;| ;|.----.| ;|_\n;| ; - ; || ;_ ;| ;-__| ; ; || ;| ;| ;|| ; _|| ; _|\n;|_______|| ; __|_____|__|__||________||__| ;|____|\n; ; ; ; ; |__| W I R E L E S S ; F R E E D O M\n;-----------------------------------------------------\n;ATTITUDE ADJUSTMENT (12.09, r36088)\n;-----------------------------------------------------\n; * 1/4 oz Vodka ; ; ;Pour all ingredients into mixing\n; * 1/4 oz Gin ; ; ; ;tin with ice, strain into glass.\n; * 1/4 oz Amaretto\n; * 1/4 oz Triple sec\n; * 1/4 oz Peach schnapps\n; * 1/4 oz Sour mix\n; * 1 splash Cranberry juice\n;-----------------------------------------------------\nroot@OpenWrt:/#</span>\n\nSuccess!\n28,I;used to have a bunch of radios in my car; an IC7000 for HF, a Kenwood TM D710 for APRS/VHF/UHF and a Cleartone CM7 ex-PMR for 4m AM/FM. They were installed relatively stealthily, but when I came across the successor to the IC7000, the IC7100, I saw how I could aggregate all of this into a single radio.\nSo... long story short, I sold all the radios that were in the car and bought the;<a href=http://www.eham.net/reviews/detail/11080>IC7100</a>.;\n\nAll the basic functionality, HF, VHF/UHF etc was pretty much trivial, but my previous APRS setup included a Garmin Nuvi 350 for GPS, and had the APRS TNC built into the radio head. The IC7100 has no TNC, and the data port is in the radio body rather than the head, which meant another cable to run.\n\nSo... I did a bit of research, and came across;<a href=http://www.mobilinkd.com/>Moblinkd</a>, a fully featured TNC (based on an Atmel MPU) with Bluetooth! Cable problem sorted. I have an Android phone, so after more research, came across;<a href=http://aprsdroid.org/>APRSDroid</a>. So the GPS and mapping duties were also taken care of.\n\nOnce I received the TNC, I charged it (it has a built in battery... so handy for /P operation), and made up a cable to connect it to the ICOM rig. The cable looks like this:\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/IC7100-Mobilinkd.png />\n\n\nThe behaviour of the IC7100 means that when some device is connected to the DATA2 port, it will only respect the PTT line if the radio is set to DigitalFM (FM-D) mode, so there will be no rude data-bursts over your voice QSO. I haven't tested to see how quickly the IC7100 stops scanning, so I don't know if an incoming packet will be truncated or not. For the moment, I leave it on 144.800 (the Irish APRS frequency) when driving unless I want to talk to someone.\n\nOnce connected, I paired the;<a href=http://www.mobilinkd.com/>Mobilinkd;</a>with my phone over bluetooth, installed APRSDroid, and set up the connection to use bluetooth.;<a href=http://aprsdroid.org/>APRSDroid;</a>has a number of beaconing settings, but the standard Smartbeacon settings seem to do as required. The main views are the packet log and map. The log displays the raw packets, so maybe not the easiest to decode on the fly, especially if you receive packets from a weather station. The maps display uses Google Maps for its data, so looks good and functions well.\n\nIt is also possible to send and receive messages, so pinging one of your friends to have a voice QSO via APRS messaging is possible.\n\nI look forward to making up a lead to talk to my Baofeng B5 or Yaesu VX7 to do a bit of portable APRS.\n29,I came across am interesting project at the;<a href=http://ei7mre.org/>Mayo Radio Experimenter's Club</a>;<a href=http://ei7mre.org/?page_id=67>Rally;</a>earlier this year.;<a href=http://en.wikipedia.org/wiki/Wobbulator>A Wobbulator</a>. A small board that would piggy-back on a Raspberry Pi and utilise an Analog Devices AD9850 Direct Digital Synthesiser as an RF source. ;The purpose of a Wobbulator is to generate an RF sweep which can be routed through a device undet test, and captured, in this case, using an RF-voltmeter, but traditionally using an oscilloscope, to determine the characteristics of the device to be tested. It can be used to determine the response of filters and crystals and other RF circuits.\nA Wobbulator would, in the past, have cost hundreds of euros, so to see;<a href=http://asliceofraspberrypi.blogspot.co.uk/2013/12/building-raspberry-pi-wobbulator-kit.html>the full kit</a>;available for a Rally special price of €40 was all the excuse I needed to get one. I already have a few Raspberry Pis and had a DDS on the way from eBay, so no further expenditure would be needed. The kit included a well manufactured board and all the various parts, including some header strips to connect to the GPIO array on the Pi and some high quality SMA ports for the RF in and outputs.;\n\nThe assembly started out with soldering some SMD devices... a few capacitors, diodes and resistors and two 1mm pitch DIL chips. I used a .5mm tip on my iron and .3mm silver bearing solder to mount these. I tinned the pads on the board first, then using a fine tweezers, held each device while I flowed to one side, and then other. The chips were a little more tricky, keeping all of the legs aligned while tacking one corner and then the other. The rest of the components are through-holeand a relatively trivial install. A set of headers are installed to take the DDS, and a double header on the other side to connect to the Pi.\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2014-12-04%2021.10.21.jpg />\n\nOnce assembled, I started with a basic install of Rasbian on an SD card. A few tweaks need to be done to enable the functionality of the Wobbulator, and install the Wobbulator control software.\n\nThe default configuration for Rasbian is that i2c is disabled. We need to re-enable this first.Edit;<em>/etc/modprobe/raspi-blacklist.conf</em>;and comment out the line that blacklists i2c.\n\n<span style=font-family: 'Courier New';>blacklist spi-bcm2708\n<strong>#blacklist i2c-bcm2708</strong>\nblacklist snd-soc-pcm512x\nblacklist snd-soc-wm8804</span>\n\nThen edit;<em>/etc/modules</em>;and add a line to load;<em>i2c-dev.</em>\n\n<span style=font-family: 'Courier New';>snd-bcm2835\n<strong>i2c-dev</strong></span>\n;\n\nInstall i2c-tools, add the 'pi' user to the 'i2c' group and power-down the Pi.\n\n<span style=font-family: 'Courier New';>$ sudo apt-get install i2c-tools\n$ sudo adduser pi i2c\n$ halt</span>\n\nWhile the Pi is powered-off, attach the Wobbulator board to the GPIO array and power up the Pi.\n\nWhen it restarts, check that the Wobbulator has been detected.\n\n<span style=font-family: 'Courier New';>$ i2cdetect -y 0\n; ; ;0 ;1 ;2 ;3 ;4 ;5 ;6 ;7 ;8 ;9 ;a ;b ;c ;d ;e ;f\n00: ; ; ; ; ;-- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- 68 -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --</span>\n\nThe '68' indicates that the Wobbulator has been successfully detected. Next,;install the required Python libraries.\n\n<span style=font-family: 'Courier New';>$ sudo su;\n\n# curl;<a href=https://bootstrap.pypa.io/ez_setup.py>https://bootstrap.pypa.io/ez_setup.py</a>;-o - | python3\n# exit\n$ git clone https://github.com/quick2wire/quick2wire-python-api.git\n$;cd quick2wire-python-api/\n$ sudo python3 setup.py install;\n$ cd ~</span>\n\nFinally, install the Wobbulator software.\n<span style=font-family:Courier New,Courier,monospace;>$ git clone https://github.com/mi0iuo/RPi_Voltmeter.git\n$ git clone https://github.com/mi0iuo/RPi_Wobbulator.git</span>\n\nOnce this is done, we need to test and calibrate the Wobbulator, as follows:\n\n<span style=font-family: 'Courier New';>$ startx</span>\n\nOnce LXDE has started, open a Terminal window and enter the following:\n\n<span style=font-family: 'Courier New';>$ cd RPi_Voltmeter-master\n$ python3 rpi_voltmeter.py</span>\n\nA small window will display.\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/RPiVM.png />\n\nLeave Channel on channel 1, and click the Measure button. This will likely display a voltage up around 2v. This is around the maximum voltage the RF voltmeter can sample, so we need to reduce this greatly, since there is currently no input. On the board, there are two variable resistors (little blue boxes) with a little brass adjustment screw on each. Start to turn the one in the channel 1 section on the board anti-clockwise, clicking Measure periodically, until you get a voltage around 0.1v.\n\nDo the same for Channel 2, except the target voltage is around 0.6v.\n\nAt this point, the Wobbulator is calibrated. You may exit the voltmeter and run the Wobbulator control software by entering the following in the Terminal:\n\n<span style=font-family: 'Courier New';>$ cd ../RPi_Wobbulator-master\n$ python3 rpi_wobbulator.py</span>\n\nOnce this was done, I ran a quick test of a filter I had built a year or so ago. The results, while not what I wanted, were excellent. The trace showed the filter to be out by about 1MHz, so there are a couple of toroids to be rewound. I will use the<a href=http://www.eham.net/reviews/detail/13>MFJ 259b</a>;with a 'custom' connector as an L/C meter to verify the toroids. I will document this process in another post.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/wobbulator-1.png />\n30,When I was young, about 11, I was lucky enough to be bought a;<a href=http://en.wikipedia.org/wiki/Commodore_64>Commodore 64</a>, the computer that introduced a generation to computers, and likely launched thousands of careers in computing, mine included. It wasn't long before I started to feel constrained by the very;<a href=http://en.wikipedia.org/wiki/Commodore_BASIC>basic version of BASIC</a>;that it ran... 2 character variable names, no labels, no loops apart from FOR, no allowances to structured programming whatsoever. However, help was at hand, in the form of the<a href=http://www.commodore.ca/manuals/c64_programmers_reference/c64-programmers_reference.htm>Commodore 64 Programmer's Reference Guide</a>, and;<a href=http://www.commodore.ca/commodore-history/jim-butterfield-meet-jim-butterfield/>Jim Butterfield</a>'s;<a href=http://www.atarimagazines.com/compute/issue32/082_1_SUPERMON_64.php>Supermon 64</a>;machine language monitor. I remember keying in Supermon 64 from the pages of;<a href=https://archive.org/details/compute-magazine>Compute!</a>;magazine... my mentor and educator for many years, and remember clearly the vast speed increases to be had from running machine language code versus BASIC.\nSince then, things have changed so much... I do much of my coding in Python and Java running on multi-cored monsters that live in air conditioned data centres, and capable of speeds that are beyond ridiculous, and yet I still feel a great deal of nostalgia for simple CPUs that can be coded directly with no scheduler or process management to be concerned with. Arduinos deliver some of the fix I miss, as does the Raspberry Pi, but I really miss the;<a href=http://6502.org/>6502</a>.\n\nOne day, while browsing, I came across a site,;<a href=http://obsolescence.wix.com/obsolescence>Obsolescence Guaranteed</a>, wherein the site owner described his adventures in;<a href=http://obsolescence.wix.com/obsolescence#!kim-uno-summary/c1uuh>creating an emulation of the Computer That Started It All</a>, as far as I am concerned. The;<a href=http://en.wikipedia.org/wiki/KIM-1>KIM-1</a>;was released by Commodore in 1976, when I was 5, and had little more than a CPU, a bit of memory, a hexadecimal keypad and display, and a serial port. Not exactly a monster or performance by today's standards, but back then, when you could easily blow a couple of hundred thousand on a PDP-11, or a few million on a 'big iron' System 360, this little thing was a revelation, and cheap at about $250.\n\nOscar, of Obsolescence Guaranteed seems to have as much fondness for old quirky computers as do I, but the KIM-UNO, basically an emulated 6502 and RAM running on an Arduino Mini Pro, with a simple circuit board for the keypad and display, was what really caught my eye. On getting in touch, I found out that a new run had been ordered and should be ready for shipping within a few days. Providence! It was clearly meant to be, so I paypal'd €25 for the kit, and a box and USB-TTL cable, and 6 or so days later had my prize.\n\nI strongly recommend the documentation be read before beginning, or a critical step may be missed. Aside from that, it's a simple build, albeit with loads of solder joins to be made for the keypad. An hour or so of soldering and it's done, ready to be started up... (yes, I know some of the leads could be trimmed better, but I need to get a new side-cutter).\n\n<img alt=KIN UNo data-entity-type=file data-entity-uuid=9a77e645-b217-48e3-9fb0-ef41a1a379ff src=/sites/default/files/inline-images/2014-11-28%2012.44.40.jpg />\n\nSo back to my roots, I go.\n31,The Galway VHF Group Amateur Radio club has been doing some improvements on the APRS network around Galway. This includes adding a weather station - EI2GCP-2 ;- and renaming the digipeater to EI2GCP-10, and adding iGate functionality.\nThe weather station transceiver Philips PRM-80 ex. PMR rig to replace my Yaesu FT8900, which, in testament to its reliability, had been on the roof, through all weather, for over 4 years, without a moments down-time. I am glad to have it back though. The WX beacon and digipeater duty is handled by an Argent Data Tracker-2 unit, with an ADS-WS1 weather sensor cluster. The iGate is APRX running on a PCEngines WRAP SBC with Voyage Linux.\n\n\nOn the day of the installation, it was with trepidation that I opened the IP65 box that the previous incarnation of EI2GCP-2 had lived in for over 4 years. However, my fears were unwarranted, as it looked as it did when we installed it, with not even an additional spider occupying the box.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2014-10-25%2014.09.52.jpg />\n\n\nThe new gear fitted in the box snugly, bit with enough room. A few additional holes had to be bored and grommeted for the weather-station one-wire feed and the ethernet for the iGate connectivity.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/EI2GCP.jpg />\n\n\nOnce this was all connected and verified, the weather sensor cluster was mounted on the pole that already held the Cushcraft Ringo-Ranger 2m co-linear. If ever there was an antenna I would recommend unreservedly, this is it. It has withstood Atlantic storms, lightning and the corrosive sea air that pervades Galway. We did a little preventative maintenance on the antenna. Tightening the top-section and cleaning the phasing loop connections. Once done, the SWR was re-verified at 1.2:1. Reasonable by anyone's standards.\n\nThe wind-vanes and anemometer needed to be aligned W-E, so this was verified with a compass, all clamps tightened and cables cable-tied to avoid flapping in the inevitable winds.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2014-10-25%2014.58.15.jpg />\n\n\nThere are further plans for expansion of the APRS network towards the north of County Galway with a digipeater on Knockroe, which should hopefully reach out as far as Roscommon to the East, and well into Mayo, Leitrim and South Sligo in the North. This is planned for January.\n\nThere are other plans in various stages of execution, including a 4m EchoIRLP gateway in Galway city, which is partially installed at this stage, and a 70cm Repeater + EchoIRLP gateway in north Galway.\n32,<img alt= src=https://dl.dropboxusercontent.com/u/32770/eircom-zyxel.JPG />\n\n<strong>The Eircom D1000 Zyxel Router</strong>\n\nEircom, an ISP in Ireland, supplies a branded version of the Zyxel D1000 router with their DSL broadband offerings. The web interface is protected, as one might expect, by a login&amp;password challenge. All good, one might think. However, if you look at the source of the login page, located at;<em>/cgi-bin/login.html</em>;you might find an interesting surprise.\n\n\n;function DefaultPasswdNote_check()\n{\n; ; ; ; var random_passwd = 01282e7c08b4;\n; ; ; ; var current_passwd = xxxxxxxxx;\n// ; ; ;alert(current_passwd +  +random_passwd);\n; ; ; ; if(current_passwd != random_passwd ){\n; ; ; ; ; ; ; ; ; ; $(#defaultPassNote).hide();\n; ; ; ; ;}\n}\n\nThe admin password can be seen in this function, as;current_passwd. I have obviously replaced mine with x's (it was hunter2). I have verified this vulnerability on a number of D1000 routers.\nIf the web GUI is exposed to the outside world... well, bad things will happen.\n\nThe only mitigations are -;\n;;;;1. Ensure the web GUI is not exposed to the outside world (WAN), LAN and WIFI only.\n\n;;;;2. Ensure you have a strong WPA2 key.\n33,I recently started using Arch as my primary distribution on my laptop. I made this change for a number of reasons... mainly that I did not like the direction that Ubuntu was going in, and I kind of missed the hands-on approach I had experienced with Slackware and Debian. ;I wanted to recapture the control that first drew me to Linux nearly 20 years ago.\nPart of the transition was getting used to a rolling-upgrade methodology. I work in telecoms, where the idea of an upgrade that doesn't get put through multiple phases of end-to-end verification is completely unheard of, and all of my experiences with Linx have been release-based rather than rolling distros. It's a big mind-shift, and apparently can be fraught, if the various Arch forums are to be believed. So, it was with some trepidation that I finally did my first;sudo pacman -Syu\n\nNot before first snapping the volumes. though. When I installed Arch, I decided to go with something other than;<em>EXT4</em>. The 'next-generation' filesystem/volume manager that most caught my attention was;<em>btrfs</em>, so I ran with that. When installing, I created subvolumes for<em>;/, /var, /home, /usr;</em>and;<em>/opt</em>. Snapping these was very straightforward, and unlike other volume managers I am used to, allow concurrent access to the snapped filesystem and the live filesystem without any additional mounting or anything. Nice.\n\nSo, I kicked off the upgrade, which took maybe 40 minutes including downloads. The system rebooted, and initally, all seemed well... I got my;<em>lightdm;</em>greeter, and once I entered my credentials, got my;<em>i3;</em>desktop. All fine... until I tried to move the mouse. Nothing. So, after some investigation, it seems that Elantech touchpads are quirky, and some functionality that had worked in kernel 3.15, was broken in 3.17, and would be fixed in 3.18. So, between the options of (a) building 3.18 from;<em>AUR</em>, porting the patch that had worked in 3.15 or pushing forward with learning to live with keyboard only, I decided to go with the latter. I will detail the whats, whys and hows of that in another blog-post.\n\nThat seemed to be the only issue, however. I thought I would boot into Windows 8.1 to update that too, as I do this so rarely that when I do, it takes forever, and involves huge downloads and multiple reboots. It was then that I noticed that my grub menu did not include Windows... or the Ubuntu that was on another partition... in fact nothing except Arch.\n\nSo, I did some digging, and found that the 'new' grub did things a little differently from what I was used to. No more was<em>menu.lst</em>;configured by hand, but instead sections in;<em>/etc/grub.d</em>;created the boot menu. Different, but definitely better. So, based on memory (and a little bit of Googling), I recreated the line that would point at the Windows EFI bootloader... rebooted and selected Windows, and got the following error:\n\nsymbol grub_term_highlight_color not found\n\nSo I did a bit more Googling, found one or two posts involving Ubuntu upgrading to 14.04, read a bit and thought maybe the grub upgrade had failed to write some file properly. So I had a look in the pacman logs, to find that grub had not been upgraded at all as part of that run. I next mounted the Windows EFI partition, and noticed a bunch of different EFI files, including one for;<em>memtest</em>, so I created a boot option for that, booted and sure enough, got;<em>Memtest</em>. So, back to the EFI partition, where I noticed that the Windows bootloader was much smaller than the other various;<em>.efi</em>;files, and had a modification date of the day I did the upgrade. So, for some unknown reason, the bootloader was modified, and possibly broken. There was also what seemed to be a backup bootloader (prefixed with bk) which was much bigger, so I renamed the broken one and copied the backup in its place...;\n\nOne reboot later, I never thought I would be so glad to see a Windows boot screen.\nNow to download Elite: Dangerous, and relive some of my childhood in HD.\n34,The DDS and related clock generation circuitry has made possible high accuracy, broad-banded programmable VFO functionality for very little money.;<a href=http://www.analog.com/en/rfif-components/direct-digital-synthesis-dds/ad9850/products/product.html>Analogue Devices' AD9850</a>;series offer HF frequencies for about;€5. Higher frequencies can be had for not much more money, with the Silicon Labs SI570 with its near GHz maximum frequency offering the highest. I recently came across;<a href=https://learn.adafruit.com/adafruit-si5351-clock-generator-breakout/overview>an interesting little device from Adafruit. Again, from Silicon Labs, the SI5351</a>;offers 3 independent clock outputs from a single 25MHz reference, programmable via i2c, a maximum frequency of 160MHz and all for less than;€10 shipped. I had to have one.\nThe order, along with some of the other wonderful goodies from Adafruit arrived soon enough, and I got to work, first off getting the encoder knob working. The plan was to have a rotary encoder with push button for setting the freqeuncy, an i2c LCD for display, and the clockgen, all hanging off an Arduino... in this case, a Leonardo clone.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-01-03%2023.57.11.jpg />\n\nThe sample code I first tried for the encoder worked ok, but then I found the builtin 'encoder' library, and tried that... far better, and no messing with interrupts.\n\nNext, I tried to get the display working... no joy using the standard LiquidCrystal_I2C library. I then ran an i2c scanner to find out if the device perhaps had a different address from standard. This gave me a 'no devices' error... something was wrong. After a bit more research, I discovered that the pins used for i2c on the Leo' are not the same as on the Uno.;<em>The Uno uses Analog pins 5 and 6 , whereas the Leo' uses Digital pins 2 and 3</em>. I reran the scanner, and it immediately detected the display on 0x27 ;and the clock-gen on 0x60. I plugged the address into some display testing code and had my display!\n<img alt=Signal Generator Schematic src=https://dl.dropboxusercontent.com/u/32770/signal_gen.png title=Signal Generator Schematic />\n\nI then added in a few lines to include the Adafruit si5351 library and program one of the clocks to output 14Hz. I had my AOR8200 MkIII to hand, tuned to 14MHz AM so I hoped to be able to hear the clock on the AOR receiver. Nothing, however. A bit more reading, and I came across;<a href=https://github.com/etherkit/Si5351Arduino>another library for the SI5351</a>... this one managing to avoid all the divider/multiplier calculations necessary with the Adafruit library. I modified the code once again to include this, and instead of doing any calculations, just wrote the required frequency directly to the clock. This time, I could hear a tone on the receiver. As I turned the encoder, the frequency on the display changed, and I could hear the tone get slightly higher in pitch... success by any measure.\n\nIt only remains to case this and use it to align a few projects.\n\n;\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td id=LC1>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=2 id=L2>;</td>\n\t\t\t<td id=LC2>#include &lt;Wire.h&gt;\n\t\t\t#include &lt;LiquidCrystal_I2C.h&gt;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=3 id=L3>;</td>\n\t\t\t<td id=LC3>#include &lt;Encoder.h&gt;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=4 id=L4>;</td>\n\t\t\t<td id=LC4>#include si5351.h</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=5 id=L5>;</td>\n\t\t\t<td id=LC5>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=6 id=L6>;</td>\n\t\t\t<td id=LC6>Si5351 clockgen;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=7 id=L7>;</td>\n\t\t\t<td id=LC7>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=8 id=L8>;</td>\n\t\t\t<td id=LC8>const int BUTTON = 8;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=9 id=L9>;</td>\n\t\t\t<td id=LC9>long oldPosition = -999;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=10 id=L10>;</td>\n\t\t\t<td id=LC10>long int step = 1;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=11 id=L11>;</td>\n\t\t\t<td id=LC11>long int frequency = 14000000;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=12 id=L12>;</td>\n\t\t\t<td id=LC12>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=13 id=L13>;</td>\n\t\t\t<td id=LC13>Encoder myEnc(5, 6);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=14 id=L14>;</td>\n\t\t\t<td id=LC14>LiquidCrystal_I2C lcd(0x27,20,4); //set the LCD address to 0x27 for a 16 chars and 2 line display</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=15 id=L15>;</td>\n\t\t\t<td id=LC15>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=16 id=L16>;</td>\n\t\t\t<td id=LC16>void setup () {</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=17 id=L17>;</td>\n\t\t\t<td id=LC17>lcd.init();</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=18 id=L18>;</td>\n\t\t\t<td id=LC18>lcd.backlight();</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=19 id=L19>;</td>\n\t\t\t<td id=LC19>lcd.setCursor(0, 0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=20 id=L20>;</td>\n\t\t\t<td id=LC20>lcd.print(Initialising...);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=21 id=L21>;</td>\n\t\t\t<td id=LC21>clockgen.init(SI5351_CRYSTAL_LOAD_8PF);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=22 id=L22>;</td>\n\t\t\t<td id=LC22>lcd.setCursor(0, 1);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=23 id=L23>;</td>\n\t\t\t<td id=LC23>lcd.print(OK!);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=24 id=L24>;</td>\n\t\t\t<td id=LC24>delay (2000);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=25 id=L25>;</td>\n\t\t\t<td id=LC25>pinMode (BUTTON, INPUT);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=26 id=L26>;</td>\n\t\t\t<td id=LC26>digitalWrite (BUTTON, HIGH); // Pull High Restance</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=27 id=L27>;</td>\n\t\t\t<td id=LC27>lcd.init();</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=28 id=L28>;</td>\n\t\t\t<td id=LC28>lcd.backlight();</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=29 id=L29>;</td>\n\t\t\t<td id=LC29>lcd.setCursor(0, 0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=30 id=L30>;</td>\n\t\t\t<td id=LC30>lcd.print(Freq: );</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=31 id=L31>;</td>\n\t\t\t<td id=LC31>lcd.setCursor(6, 0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=32 id=L32>;</td>\n\t\t\t<td id=LC32>lcd.print(frequency);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=33 id=L33>;</td>\n\t\t\t<td id=LC33>lcd.setCursor(0, 1);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=34 id=L34>;</td>\n\t\t\t<td id=LC34>lcd.print(Step: );</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=35 id=L35>;</td>\n\t\t\t<td id=LC35>lcd.setCursor(6, 1);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=36 id=L36>;</td>\n\t\t\t<td id=LC36>lcd.print(step);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=37 id=L37>;</td>\n\t\t\t<td id=LC37>// Set CLK0 to output 14 MHz with a fixed PLL frequency</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=38 id=L38>;</td>\n\t\t\t<td id=LC38>clockgen.set_pll(SI5351_PLL_FIXED, SI5351_PLLA);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=39 id=L39>;</td>\n\t\t\t<td id=LC39>clockgen.set_freq(frequency, SI5351_PLL_FIXED, SI5351_CLK0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=40 id=L40>;</td>\n\t\t\t<td id=LC40>}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=41 id=L41>;</td>\n\t\t\t<td id=LC41>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=42 id=L42>;</td>\n\t\t\t<td id=LC42>void loop () {</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=43 id=L43>;</td>\n\t\t\t<td id=LC43>int delta;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=44 id=L44>;</td>\n\t\t\t<td id=LC44>if (!(digitalRead(BUTTON))) {</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=45 id=L45>;</td>\n\t\t\t<td id=LC45>if (step &gt;= 1000000)</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=46 id=L46>;</td>\n\t\t\t<td id=LC46>step = 1;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=47 id=L47>;</td>\n\t\t\t<td id=LC47>else step = step * 10;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=48 id=L48>;</td>\n\t\t\t<td id=LC48>lcd.setCursor(6, 1);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=49 id=L49>;</td>\n\t\t\t<td id=LC49>lcd.print(step);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=50 id=L50>;</td>\n\t\t\t<td id=LC50>lcd.setCursor(6+(step/10),1);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=51 id=L51>;</td>\n\t\t\t<td id=LC51>lcd.print( );</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=52 id=L52>;</td>\n\t\t\t<td id=LC52>delay (200);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=53 id=L53>;</td>\n\t\t\t<td id=LC53>}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=54 id=L54>;</td>\n\t\t\t<td id=LC54>long newPosition = myEnc.read();</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=55 id=L55>;</td>\n\t\t\t<td id=LC55>if (newPosition != oldPosition) {</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=56 id=L56>;</td>\n\t\t\t<td id=LC56>delta = newPosition &gt; oldPosition? 1 : -1;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=57 id=L57>;</td>\n\t\t\t<td id=LC57>oldPosition = newPosition;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=58 id=L58>;</td>\n\t\t\t<td id=LC58>frequency = frequency + (delta * step);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=59 id=L59>;</td>\n\t\t\t<td id=LC59>lcd.setCursor(6, 0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=60 id=L60>;</td>\n\t\t\t<td id=LC60>lcd.print(frequency);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=61 id=L61>;</td>\n\t\t\t<td id=LC61>clockgen.set_freq(frequency, SI5351_PLL_FIXED, SI5351_CLK0);</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=62 id=L62>;</td>\n\t\t\t<td id=LC62>}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-line-number=63 id=L63>;</td>\n\t\t\t<td id=LC63>}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n;\n\nAn updated version of the code will always be available at;<a href=https://github.com/gerryk/signal_generator>https://github.com/gerryk/signal_generator</a>\n35,A friend of mine bought me a Thrustmaster F22 for my birthday (thanks John!) a good number of years back, and I had many a fun sortie on DID's excellent EF2000 or F22 sims. It spent much of the last 10 or 12 years gathering dust rather than blowing away bogies, however, and due to the progression of technology, is no longer useful. Or at;<img alt= src=https://dl.dropboxusercontent.com/u/32770/f22pro.jpg />least this is what I thought, until I came across the controller modding community. The majority of modded sticks are Thrustmaster Cougars, but they're already USB, so that sort of mod is no use to me... the F22 is a keyboard/game-port stick, so there is physically no way to plug it into a modern machine. There are adapters and such available, but they are both expensive, and, in my opinion, not an elegant hack. There are also replacement controller boards that emulate HID devices, so appear pretty much like a USB joystick. These are not cheap either, and, to be hones, are a little off-the-shelf for my liking. The next possibility is to use an Arduino that can do HID stuff... either a Leonardo, or a Pro Miini can identify themselves as any USB device, so that looks like my solution.\n\nThe Leo and Pro Mini both only have something like 14 digital pins, and 5 analogue inputs. That's far short of the F22's 23 individual switches (4x 4 way hats, 2-stage trigger and 5 buttons), so I will approach this by creating a button matrix.\n\nThe internals of the stick are pretty solid, albeit a bit dated looking, with through-hole components everywhere. There are only 5 wires coming from the stick, and opening it up revealed a bunch of micro-controllers doing whatever multiplexing stuff they have to. I would have to extend all of the wires to get to my button array and discard the microcontrollers in the handle as well as the main controller.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-02-13%2012.55.07.jpg />\n\nAt some stage, I would also like to replavce the X and Y pots with hall-effect angle-sensors. These are far less noisy and spiky than pots, particularly 18 year old pots. The pots can be seen in this next image, along with the now-defunct controller board.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-02-13%2012.10.44.jpg />\n\nA pot swap would be almost trivial, but the sensors are expensive, so I will focus on making the joystick 21st century compatible first.\n\nI used an Arduino Pro Mini for the brains of the conversion, as the Pro Mini has the capability to report itself as any USB device it likes. This allows it to behave as a USB HID Game Controller - Joystick in simple terms. However, the Arduino only has 12 digital inputs, but the F22 has 4 4-way hats and 5 buttons, one of which is the 2-stage trigger. There are a number of ways to solve this, but I went with the diode array, where the switches exist at the intersections of rows and columns, with each of the 6 rows and 6 columns going to a digital input. This uses the 12 inputs, but gives us 36 swiitches.\n\nThe schematic looks like this.\n\nAnd the actual board looks like this.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-02-27%2011.30.13.jpg />\n\nBack side of the board\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-02-27%2011.30.20.jpg />\n\nWith the columns all connected\n\n<img alt= src=https://gerryk.com/node/Image%20URL%20Herehttps://dl.dropboxusercontent.com/u/32770/2015-02-27%2015.47.26.jpg /><img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-02-27%2015.47.26.jpg />\n\nThe next stage is to extend the wiring from each button in the handle to a connection in the array.\n<a href=http://gerryk.com/node/45>Part 2 can be found here.</a>\n36,During HF field day 2010, I had occasion to get some experience with the off-centre fed dipole, in this case, a commercially made unit from Buckmaster.\nPrior to this, I had heard that OCF dipoles ‘are a compromise’, ‘are noisy’, ‘are deaf’, ‘have wildly varying radiation patterns’ and many other negative comments. During field-day, our experiences definitely gave me cause to doubt the nay-sayers.\n\nAround this time, I moved to a new house, and as always, part of moving involves planning out the new antennas. In my situation, the property is long and narrow, and has a number of medium-tall trees (&gt; 50ft). The house, however, is at one end of the property, and, while there are trees located such that an antenna would be oriented broadside slightly north of west, having any balanced antenna, such as a multiband dipole or doublet, would have the feedpoint quite a distance from the house, and would definitely push the ‘untidy wires’ beyond the XYL acceptance threshold.\n\nWith this in mind, and using Google Maps, I modelled a few potential candidates for OCF installation. By the grace of the RF gods, there two of the taller trees are oriented almost perfectly, and with the short end of the OCF dipole beside the house, have the feedpoint within 20’ of the house, thus removing the need for ugly, and loss inducing, long runs of feeder.\n\nI have an aversion to purchasing what can be made oneself, especially where the making is also an education. As a result, I did some investigation into what designs would give the best performance, along with longevity and cost factors being considered. The result was a 4:1 current balun consisting of two 1:1 baluns wound onto 3 inch mix 43 toroids, with two legs made from hard-drawn copper. The legs were to be cut for 80m, at a ratio of 2:1, giving leg lengths of ~90’ and 45’.\n\nStudies done by John, EI1EM, confirmed that building my own balun would be a far preferable course of action compared to purchasing one. John has a number of wonderful toys for doing all sorts of analysis on RF systems, including a mRS MiniVNA, which generates high quality plots of frequency response, SWR, loss and so on.\n\nJohn did an analysis on a number of baluns, from the barely affordable to the inexpensive. This analysis was quite revealing in terms of the varying quality of baluns commercially available. Loss figures on the edges of the HF bands varied from &lt;1dB to &gt;5dB for baluns sold as ‘broadband’ or ‘HF’. SWR also varied from as little as 1.3:1 on the edges to as much as 2:1, and sometimes increasing to well beyond 3:1 around topband.\n\nThe baluns that came out on top were expensive, and generally unavailable locally, thus necessitating the further expense of shipping from the US, and the likely possibility of a VAT and duty levy. More justification for a home-brew.\n\nI started by winding two toroids bifilar. I used 14swg enamelled copper wire for the windings.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/balun1.jpg />\n\nI tested these, and found that they exhibited a lower characteristic impedance than was required. I needed ~100ohm, and these were about 60ohms. So, I tried again, but with a wider spacing between the wires. This spacing could be provided by using insulated wire, so using 1.5mm2 domestic wiring, I rewound…\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/balun2.jpg />\n\nThis time, the impedance matched what it should, being slightly short of 100ohms.\nThe next stage was to connect the two 1:1 baluns back to back, giving a 4:1 balun, with an input impedance of ~200ohms and an output impedance of the familiar 50ohms.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/balun3.jpg />\n\nFour 50ohm resistors in series at one end, and the MFJ 259b Antenna Analyser on the other gives preliminary SWR of 1.1:1 across almost all of the HF band, rising slightly to 1.3:1 at the lower bounds of 1.5MHz. An encouraging start.\n\nMounting the entire assembly in a waterproof (IP40) case was a relatively straightforward operation. I drilled mounting holes for galvanised eyes, and a further one for the antenna socket (SO239). I also drilled two holes for pigtails to allow the antenna legs to connect to the balun.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/balun4.jpg />\n\nOnce this was all done, I attached two legs, cut from hard-drawn copper, and cut roughly to a 2:1 ratio, as per standard OCF dipole design, and proceeded to fine-tune the lengths. After a bit of pruning, I got an acceptable SWR on 80m, 40m, 20m, 15m add 10m, with a surprisingly low 2.1:1 on 6m also. The maximum SWR was 2.3:1 on 20m, but I figured that the internal ATU in the IC756 ProIII would tweak that out.\n\nOn testing, I arrived at the conclusion that the antenna as installed at about 45’ was both sensitive and quiet. I also got a number of satisfactory reports on 80m and 40m, so I deemed the construction a success.\n\nHowever, things are never as simple as they first appear. I was feeding the antenna with 30m of RG213, with the last 10 or so meters suspended from the feedpoint. This, coupled with the heavy balun caused the feedpoint to remain relatively static while the rest of the antenna moved around in the breeze. By itself, not a huge problem, but when coupled with the wild winds of the West, caused my new antenna to last about a month, before landing on the roof, one leg having broken right at the feedpoint, presumably having been work-hardened from the continued oscillation.\n\nNot quite back to the drawing-board, but certainly some of the failings of the antenna had to be addressed. The first replacement was the antenna legs. Discarding the hard-drawn copper for something a bit stronger and more resilient, I splashed out on 50m of PVC coated flexweave. Not cheap, but I expected that this would be a bit more long-lasting than the previous effort. The next item to be swapped out was the feedline. Instead of the heavy RG213, I used a similar weight of RG8X, which is much smaller in diameter and weight, but more flexible, and not much more lossy.\n\nI also replaced the terminators with heaver-duty units purchased from the hardware shop, giving a more flexible, but much sturdier connection to the balun eyes from the antenna legs.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/balun5.jpg />\n\nI re-hoisted and retuned the antenna, with the help of Steve, EI5DD, who devoted a Saturday to the effort, and by afternoon, we had the antenna up and tuned. This time, we took even more time in the pruning operation, and as such, achieved &lt;2:1 SWR on almost all bands.\n\nThat was a few months back, and to date, despite the best efforts of some Springtime gales the antenna is still up. I have since added weighted bungee cords to the ends of the hoisting ropes to add even more flexibility to the system, and help prevent the Galway weather taking its toll too much.\n37,Having done some more research, it turns out that the chips in the handle are not MCUs, or at least not all MCUs. A few are shift registers, and, according to;<a href=http://forum.il2sturmovik.com/topic/1790-there-any-better-joystick-ms-sidewinder-force-feedback-2/#entry46472>this post</a>, talk SPI. The post also has a bit of code to capture the buttons.So, despite having the matrix all built, if I can just use a Teensy and build on that code, all the better. Since the code was written for a Teensy 2.0, some of the pin assignments were different, but once I made the relevant changes, it worked!\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-13%2011.12.55.jpg />\n\nOnce I had the buttons working, I had to add the pots for pitch and roll.;\n\nI also bought a Suncom SFS throttle on eBay recently for $35 with a view to converting it also. Well it had arrived by now, so why not at least open it up to see how easy it might be.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-13%2009.53.24.jpg />\n\nOk, a bunch of redundant control circuitry, but a lot of wires coming from each throttle handle... promising.\nIt turns out that they are wires with diodes inline, with a 4x4 matrix type of scenario on the controller board. It should be pretty easy to add a matrix decoder to the Teensy... but first things first... wire in the throttles so I can at least fly something.\n\nThis, as it turned out was pretty easy. The pots (linear) in the throttle only have 2 wires, but they need 3 (+ve, GND and wiper), so I added one to a free terminal on one and looped it to the same terminal on the other. This was my common +ve. I commoned the earth terminals, and added little plugs on the wipers so they could plug directly to the Teensy.\n\nI then commoned all the earths and the 4 pot +ve (they will be 3.3v) and plugged the pot wipers into the analog inputs on the Teensy (A0, A1, A2, A3). I then made the relevant additions to the code to read the analogue pins, and write them to the relevant joystick axes.\n<a href=https://github.com/gerryk/USBJoystick>The code can be found here</a>, with thanks to;NonWonderDog from;<a href=http://forum.il2sturmovik.com/>il2sturmovik forums</a>;for the original&amp;the SPI idea.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/Diagram1.png />\n\nThe actual wiring is slightly less neat.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-13%2015.46.32.jpg />\n\nThe SFS throttle originally had a 15-way cable for the gameport, and a 5-way for the keyboard connector. I ran the pot connections through the 5-way, which meant that I got the use of the grommets that were originally on the cable. I will use the 15-way for the buttons, and maybe have enough left to add another analogue micro-joystick, and a few toggles.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-13%2015.46.37.jpg />\n\nAt this point, I decided a little test-flight was in order, to off to;<a href=https://www.elitedangerous.com/>Elite: Dangerous</a>. Wow... the springs in the F22 are a bit of a work-out. That aside, a huge success... no ghosting or bouncing buttons.\n\nNext post will be the update on wiring in the SFS throttle buttons.\n\nOh, by the way... this is how they look together.;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-13%2016.14.13.jpg />\n\n;\n38,Having been emboldened by a successful;<a href=http://www.gerryk.com/node/45>conversion of my Thrustmaster F22 Flight Stick</a>, I decided to try to capture all of the buttons on throttle too. A job that worked out easier than I expected as it turned out.\n\nI came across<a href=http://theseger.com/projects/2014/09/converting-suncom-sfs-throttle-usb/>;this page</a>, where a conversion was described. However, this conversion relied on a custom PCB and a SMD PIC which had to be soldered. I have had mixed results in soldering SMD devices with small leg-pitch, so wanted to avoid this route if possible. The author did, however, provide a wiring diagram for the buttons. They are basically wired in a diode-matrix, albeit not on an actual matrix. 3 SELect lines and 8 read lines gives a maximum of 24 buttons. There are actually 18, but since the F22 has 18 already used out of a possible maximum of 32 (DirectPlay controller limitation) we have 14 to play with. Still not terrible.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/GripButtonsConnections.png />\n(thanks Shai Seger for the drawing)\n\nSince the left and right throttles have their own set of buttons, I doubled up one of the SEL lines on the left with one on the right, and the 4 read lines with 4 from the right also, making sure that there were no overlaps.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-16%2013.30.36.jpg />\n\nThis gave me 11 lines to be brought over to the Teensy in the Joystick. The now unused gameport cable on the throttle has 10 lines, so I would need to use another cable. Once cabled up, I connected the read lines to pins 0 - 7 and the three SEL lines to pins 18, 19&amp;20.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-03-16%2014.07.03.jpg />\n\nOnce all of this was soldered up, I wrote a small sketch to try to read the buttons. After a number of iterations, and a very informative email from the author of the aforementioned page, I had a working sketch... well almost. It turns out that when a line is brought HIGH or LOW, it takes a very small period of time to happen, so I had to add a very short;<em>delay()</em>;call to provide the necessary time. Incidentally, to read a column, the SEL line must be taken LOW and;<em>digitalRead()</em>;will return 0 for the activated buttons. See the sketch here...\n\n<strong>Throttle-Analyse Sketch</strong>\nconst int row[8] = { 0,1,2,3,4,5,6,7 };\n// 2-dimensional array of column pin numbers:\nconst int col[3] = { 18,19,20 };\n// setup() runs once on boot\nvoid setup() {\n;;; Serial.begin(9600);\n;;; delay(2000);\n;;; Serial.println(SFS Throttle Button analyser);\n;;; delay(1000);\n;;; for (int x = 0; x &lt; 3; x++) {\n;;; ;;; pinMode(col[x], OUTPUT);\n;;; }\n;;; delay(1000);\n;;; for (int x = 0; x &lt; 8; x++) {\n;;; ;;; pinMode(row[x], INPUT_PULLUP);\n;;; }\n}\n\nvoid loop() {\n;;; digitalWrite(col[0], 0);\n;;; digitalWrite(col[1], 1);\n;;; digitalWrite(col[2], 1);\n;;; delay(10);\n;;; for (int y = 0; y &lt; 4; y++) { // only 4 buttons on this column\n;;; ;;; if (digitalRead(row[y])==0) {\n;;;;;;; ;;; Serial.println(y+1);\n;;; ;;; };;;;\n;;; }\n;;; digitalWrite(col[0], 1);\n;;; digitalWrite(col[1], 0);\n;;; digitalWrite(col[2], 1);\n;;; delay(10);\n;;; for (int y = 0; y &lt; 8; y++) {\n;;; ;;; if (digitalRead(row[y])==0) {\n;;; ;;; ;;; Serial.println(y+9);\n;;; ;;; }\n;;; }\n;;; digitalWrite(col[0], 1);\n;;; digitalWrite(col[1], 1);\n;;; digitalWrite(col[2], 0);\n;;; delay(10);\n;;; for (int y = 0; y &lt; 8; y++) {\n;;; ;;; if (digitalRead(row[y])==0) {\n;;;;;;; ;;; Serial.println(y+17);\n;;; ;;; }\n;;; }\n}\n\nOnce I had reliable reads, I integrated the code from this sketch into the main F22-SFS sketch, along with proper state-change handling for the buttons. This code can be found here:;<a href=https://github.com/gerryk/USBJoystick/tree/master/f22-sfs>https://github.com/gerryk/USBJoystick/tree/master/f22-sfs</a>\n39,I;have always been a fan of DEC minicomputers...;\nI grew up in;<em>Galway, Ireland</em>...<a href=http://www.update.uu.se/~pontus/slask/front_paneler/head2.jpg>;often seen on the front panel of PDPs</a>;instead of the more common;<em>Maynard, Massechusetts</em>, since DEC had a manufacturing plant there until the late 80s.;\nWhen in school, DEC provided a VAX 11/750 to the 6 or 7 secondary schools in Galway city, and provided terminals to each school. When most kids my age were getting their first computer experiences with;<a href=https://en.wikipedia.org/wiki/ZX_Spectrum>Sinclair Spectrums</a>,;<a href=https://en.wikipedia.org/wiki/Commodore_64>Commodore 64s</a>;and;<a href=https://en.wikipedia.org/wiki/BBC_Micro>BBC Micros</a>, we logged into a real multi-user OS,;<a href=https://en.wikipedia.org/wiki/OpenVMS>VMS</a>, via;<a href=https://en.wikipedia.org/wiki/VT100>VT100</a>;and;<a href=https://en.wikipedia.org/wiki/VT52>VT52</a>;terminals. We had the small micros too, but there was something about a multi-user system with usernames&amp;passwords, email and chat (DEC talk) that really fired the imagination.\n\nI have, over the last few years, acquired a couple of;<a href=https://en.wikipedia.org/wiki/MicroVAX>MicroVAXen</a>, which I have played with a bit, and configured as a cluster... I mean who has a VAX cluster in their office? They didn't fully satisfy my retro-desire though... years of TV shows like The 6 Million Dollar Man,;<img alt= src=http://www.3click.tv/mp401/The%20Six%20Million%20Dollar%20Man/season%205/metadata/sm_236759.jpg />The Man from UNCLE and many others depicted computers as walls of;<a href=https://www.tumblr.com/tagged/blinkenlights>blinkenlights</a>;and tape drives, and this depiction still has magic for me.\n\nThing is, PDPs and IBM 370s and the many other blinkenlight computers are rare, often collector's items, and command collector prices. One day a few years back, I heard of a project to reproduce the;<a href=http://www.sparetimegizmos.com/Hardware/SBC6120-1.htm>PDP8/e using a Harris Semiconductors 6120 PDP8-on-a-chip</a>;as the compute core, and with a custom, silk-screened front panel... this got my attention. However, when the time came for pre-orders, the price was still a bit on the high side... $600 is a lot to pay for basically a display piece. Eventually, this very limited quantity project sold out without me making a purchase, and I had to continue to defer my blinkenlights gratification.\n\nAbout a year ago, while browsing yet another retro-computing site, I came across a<a href=http://obsolescenceguaranteed.blogspot.ie/2014/06/kim-uno-kim-i-emulator-on-arduino-uno.html>;project by;</a><a href=http://obsolescenceguaranteed.blogspot.ie/2014/06/kim-uno-kim-i-emulator-on-arduino-uno.html>Oscar Vermeulen;to reproduce the KIM-1</a>, the first microcomputer based on the;<a href=https://en.wikipedia.org/wiki/MOS_Technology_6502>MOS 6502</a>.;<img alt= src=https://dl.dropboxusercontent.com/u/32770/2014-11-28%2012.44.00.jpg />I have a sentimentality for the 6502, since I learned to code primarily on a C64, and the first machine code I learned was;<a href=http://www.pagetable.com/?p=64>6502</a>.;<a href=http://gerryk.com/node/38>I built the KIM-1 kit</a>;and really enjoyed it, but the crucial point is that it put me in touch with Oscar, who has probably a greater fascination with retro-computing then me. We had discussed the possibility of a PDP emulator or reproduction, but there weren't any concrete plans, so I kept looking...\n\nEventually I came across a;<a href=https://pdp8ric.wordpress.com/>page by Ricardo Guerriero</a>, where he documented porting;<a href=http://homepage.cs.uiowa.edu/~jones/pdp8/>Doug Jones' PDP8 emulator</a>;to the Arduino Mega. I had a few Megas lying around, so jumped on this project. The result is a bit of a hack, but many of the most fun things are... it uses a 16K CMOS to provide the 8K-word main memory, and a couple of LS256 EEPROMS read and written to over i2c to simulate paper-tape storage. I have yet to build a blinkenlights panel for it, though, but it boots and runs fine.;<a href=https://github.com/gerryk/pdp8mega>My github repo here</a>.\n\nOne day while yet again browsing retro-computing sites, I visited Oscar's<a href=http://obsolescenceguaranteed.blogspot.ie/>Obsolescence Guaranteed</a>;and noticed a new post... the topic was;<a href=http://obsolescenceguaranteed.blogspot.ie/2015/01/new-project-pdp-8i-replica.html>creating a PDP8 emulator</a>! The project was already at the prototype stage, and a front-panel had been built. I immediately got in touch and told Oscar of my interest if ever he decided to make the parts available. He eventually decided to do a kit, once he had the bugs worked out. Many months passed with many updates from Oscar in the development process, when finally I got an email to confirm interest, followed by a Paypal invoice, and within about 2 weeks, received the kit... I will post a build log when I commence, but for now, here it is.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-21%2007.08.35.jpg />\n40,The story leading up to this can be read;<a href=http://gerryk.com/node/48>here</a>. In short though, I have always had a thing for retro computers, and DEC boxes in particular, and now I have a remake of a PDP8/I in the form of a kit provided by Oscar Vermeulen another retro computing geek with an excellent site at;<a href=http://obsolescenceguaranteed.blogspot.ie/>Obsolescence Guaranteed</a>.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-21%2007.08.35.jpg />\n\nI finally received the kit, and once unboxed and inventoried, I referred to the build instructions on Oscar's site, and to the PiDP8 Google Group, where other builders documented their experiences and build tips. The kit includes a perspex front panel with beautifully garish 60s graphics in orange and brown, a PCB on which all the various LEDs and switches are mounted along with the Raspberry Pi, which runs the simh emulator - the brain of the machine. It also includes a nice wooden - bamboo, I think - case for everything to live in when assembled.\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-22%2019.24.02.jpg />There are 26 switches on the front-panel to provide data-entry and run-control. These need to be soldered to the panel. When building the original series of prototypes, Oscar had a few small difficulties keeping the switches nicely aligned. A member of one of the Swiss hackerspaces suggested popping out the switch pivot and threading the switches en-masse onto an appropriately sized bar.;\n\nOscar provided a small brass bar, about 2mm in diameter for this purpose, and described how to cut and remove the pivot and use a screwdriver to keep the switch together while threading onto the bar.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-22%2020.15.29.jpg />Rinse and repeat 26 times, and it's done.;\nOnce this was completed, the next job was to insert the terminals into the board and tack-solder the two end switches, Then, moving along from switch to switch, I;aligned each, ensured a close-fit and soldered. I did this slowly, and checked multiple times to ensure good alignment, and spacing. While not perfect, I am pretty happy with the result. I will mask up and paint later, when I get the correct type pf paint.<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-22%2021.47.08.jpg />\nThe next step was to solder in the rest of the components... first the diodes and resistors...\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2019.33.34.jpg />\n\nThen the LEDs... all 89 of them. There's a trick to doing these right. They are the star of the show, after all, so it's important to get them nicely aligned. My solution was to fit a row, supporting it from underneath with once of the blocks of wood that will eventually mount the PCB. I wasn't too concerned about getting the alignment right initially... I tacked in one leg in each LED, then when a row was complete, held the board in one hand and re-melted the solder while pushing from underneath to ensure a nice flush-fit with the PCB.;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2019.42.11.jpg />\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2019.42.24.jpg />\n\nIt didn't take all that long, and the result looks nice...\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2020.12.48.jpg />\n\nThe final few stages involved soldering in a driver IC for the LEDs and the 40way header that will accept the Pi's GPIO pins.;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2020.39.45.jpg />\n\nI then attached the wooden blocks that will support the PCB, and drilled the necessary holes in the back of the case to accept the screws and USB cable to supply power.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2021.08.19.jpg />\n\nPi fitted...\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-23%2021.46.25.jpg />\n\nI drilled holes through the PCB to allow screws to be screwed in...;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2008.57.48.jpg />\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2008.57.45.jpg />\n\nThen screwed in the screws... these will be used for the magnetic attachment of the front panel as suggested by;<a href=https://groups.google.com/d/msg/pidp-8/xAWE7pxFARg/rAz26ATe-RYJ>Chris Smith on the PiDP/8 Group</a>.\n\n;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2008.59.11.jpg />\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2008.59.18.jpg />\n\nThen glued two small magnets to the back of the panel, at the appropriate places...\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2011.54.35.jpg />\n\n...and we're done! Well, almost... I still need to get paint and paint the switches, but it works.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-07-24%2014.43.16.jpg />\n41,<a href=https://protonmail.ch/>Proton Mail</a>;is a free, web-based encrypted mail service founded by CERN in 2013. It uses client-side encryption, and could be termed a trust no-one mail service, since the data stored on the servers is encrypted, and the user never loses control of the encryption key.\n\nObviously, since the client-side is served rather than being resident on the client computer, this has raised some questions as to the overall trustworthiness of the service, but Proton Mail have addressed this by Open Sourcing the code - under the very permissive MIT license.\n\nThe code itself runs on Node.js, and leverages such modern web frameworks as Angular.js. It can be acquired from<a href=https://github.com/ProtonMail/WebClient>https://github.com/ProtonMail/WebClient</a>;as can the very scant install instructions. These instructions, however, don't address any set-up or install of dependencies, so here is a more complete instruction for Ubuntu 14.04 LTS, Trusty Tahr.\n\n<span style=font-family:Courier New,Courier,monospace;>$ cd /var/www </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ git clone <a href=https://github.com/ProtonMail/WebClient.git>https://github.com/ProtonMail/WebClient.git</a> protonmail </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ cd protonmail </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo apt-get update </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo apt-get install nodejs </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo apt-get install npm </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo ln -s /usr/bin/nodejs /usr/bin/node </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo npm install -g grunt</span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo npm install -g grunt-cli </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo npm install -g bower </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo npm install </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo bower install --allow-root </span>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo grunt --prod</span>\n\nThe service will be be available on port 8080.\n\nAll I have done so far is verify that the site loads. I need to look closer at the code to determine what persistence is used, how to register new users, how to actually hook into an SMTP back-end and so forth.\n42,I;have had an;<a href=https://www.asus.com/Notebooks/N56VZ/>ASUS N56VZ</a>;laptop for about 18 months, and rate it as one of the best laptops I have ever had. I was dual-booting Windows 8 and Ubuntu off the 750GB hard drive since I got the laptop until one day I basically destroyed the Ubuntu install while playing with Docker.io\nI could have recovered it, but I took this as an opportunity to do an upgrade I had been thinking about for a while - adding an SSD and relegating the hard drive to a caddy which would take the place of the optical drive. I can't remember a time where I had actually used the optical drive, so using the space for a second hard drive seemed a no-brainer.\nI ordered a;<a href=http://www.samsung.com/global/business/semiconductor/minisite/SSD/global/html/ssd850evo/overview.html>250GB Samsung EVO 850 SSD</a>;and a;<a href=http://www.amazon.co.uk/dp/B00E7MH15Y/ref=pe_385721_37038051_TE_dp_2>drive caddy</a>;to take the existing HDD. The actual change-over was almost trivial in its simplicity, and since this laptop is EFI enabled, there was little to no messing about with boot-order and such to get WIndows to boot from the secondary drive.\nI also took this an an opportunity to install Arch Linux on the SSD. I had kind gotten bored with Ubuntu and the lack of control I felt with certain configurations, so thought this might be an appropriate remedy.\nEverything seemed to be working excellently until some time in the recent past, the laptop stopped cleanly shutting down in Windows. It would go through the shutdown process, and at the time when the screen would normally blank, and the drive and fans spin down, it basically sat there... unresponsive, but still spinning away.\nAround this time, my place in the Windows 10 upgrade queue came about, so I thought that the upgrade might fix whatever had broken and went ahead with the upgrade - a remarkably painless experience, incidentally. The upgrade did not fix the issue though...\nSo, I started investigating... update drivers, check, update BIOS, check... all to no avail, though. Then, I came across;<a href=http://forum.notebookreview.com/threads/hp-elitebook-8560p-wont-shutdown.655065/>this thread on NotebookReview</a>. The situation it described matched my own, and as I read through the thread, came across a mention of the procedure being successful with the ASUS N56ZV.;\nThe procedure described the removal or otherwise ungrounding of pin3, which is the SATA Diagnostic pin.;\nSo, screwdriver out... I removed the caddy, and started disassembling it. It wasn't a huge job, slightly complicated by some hidden screws, but once they were all opened, it came apart easily and revealed the internals.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-09-01%2011.37.17.jpg />\n\n<strong>The Caddy with HDD fitted</strong>\n\n;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-09-01%2011.43.04.jpg />\n\n<strong>HDD Removed</strong>\n\n;\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-09-01%2011.48.39.jpg />\n\n<strong>Caddy with the lid off</strong>\n\n;\n\nIt was when I got the lid off and could see the internals that I saw the little switch (to the left of the internal SATA connector). From what I could see it was on the offending pin too, so it seems that I could disable the pin without reverting to surgery. So, I flipped it.\nOnce I reassembled the caddy, I noticed that the switch was perfectly accessible without all the disassembly... oh well... I'll know better next time.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2015-09-01%2011.57.46.jpg />\n\n<strong>Switch visible with the lid on</strong>\n\n;\n\nOne reboot and shutdown later, I verified that the switch did indeed fix the issue.\n43,The FT817 from Yaesu is still the most featured portable radio available. The Elecraft KX3 might have better HF performance, but for sheer spectrum coverage, it doesn't come close... unless you spend a few hundred more Euros for the 2W output 2m or 4m transverter. You will definitely have a world class radio, but it still won't do UHF, and would cost something between twice and three times what an FT817 would.<img alt= src=https://dl.dropboxusercontent.com/u/32770/0817.jpg />\nOne place the 817 does fall down is its battery capabilities. The battery shipped with the radio is an internaally fitted 1400mAh NiMH that delivers in the region of 9.6v. This means you get a maximum of 2W out, and probably at most a couple of hours of average usage. Not great.\n\nIn the recent few years, battery technology has advanced pretty quickly. Lithium battery chemistry has given us batteries that have greater energy density, faster charge and much higher current draw. All of this benefits us that enjoy the more 'al fresco' operation. In the past, anything approaching a decent capacity could only be attained by carrying an external lead-acid or gelcell. Usually this would weigh at least what the radio does, and having an external battery takes from the most attractive 'shack in a very small box' aspect of the FT817.\n\nLithium Polymer batteries are used for everything these days, but the greatest range of size, capacity and voltage are available for the Radio Controlled model market. They are usuallly categorised as 1S, 2S 3S and so forth, with the number before the S denoting the number of cells. Each cell delivers in the ballpark of 4v, so a 3S giving a nominal 12v (actually 11.1v rated) would be perfect for our needs. The next criterion to satisfy is size... ideally something that would be very close to the internal NiMH unit shipped with the radio. Turns out there is an almost;<a href=https://www.hobbyking.com/hobbyking/store/uh_viewitem.asp?idproduct=34374>perfect match available from Hobbyking</a>. I ordered 2, and after shipping was added, the overall cost was just more then €42 - pretty good, I thought. I already have a balanced LiPo charger, but this would add something like an additional €20 to the bill, but this would be a fixed cost, and would be useful for any other forays into LiPo power.\n\n<img alt= src=https:///dl.dropboxusercontent.com/s/zyzz118ga89uv41/2015-11-28%2010.35.48.jpg?dl=0 />\n\nOnce I received the batteries, I test-fitted them, and they were a perfect fit. I then chopped off one of the output;plugs so I could replace it with a;<a href=https://en.wikipedia.org/wiki/JST_connector>JST RCY connector</a>, of which I have many, both male and female. They are cheap, sturdy and the ones I have are rated for 5A, which is more than enough.\n\n\n\n\n<img alt= src=https:///dl.dropboxusercontent.com/s/q89fq0r31sijwxm/2015-11-28%2010.36.07.jpg?dl=0 />;;<img alt= src=https:///dl.dropboxusercontent.com/s/vpccd5zlivza45f/2015-11-28%2010.36.35.jpg?dl=0 />; ;;\n\nOnce the batteries were prepared, I made up an adapter from JST female to the little 5 way Molex on the FT817. I had a little 4 way Molex pigtail which I was able to sacrifice for this, since the rightmost (or leftmost depending on where you are standing) pin with the green wire, is a voltage sense for the charging circuit. Since I won;t be using the internal charger for the LiPo, since I don't want to lose it all to a fire, a 4 way Molex is perfect. A bit of soldering and a bit of heatshrink and I was ready to pack it all in and do a quick test.\n\n<img alt= src=https://dl.dropboxusercontent.com/s/lh2zciwebu8rlox/2015-11-28%2010.37.56.jpg?dl=0 />\n\nFits like a glove.\n\nAnd once powered up, the radio sees the expected voltage, and is able to deliver the full 5W of power out.\n\n<img alt= src=https://dl.dropboxusercontent.com/s/ucpqnjp3511d2yl/2015-11-28%2010.39.59.jpg?dl=0 />\n\n;\n44,The hugely;<a href=https://hackaday.com/tag/im-me/>hackable</a>;<a href=http://service.mattel.com/us/technicalproductdetail.aspx?catid=519&amp;prodno=L7281&amp;siteid=27>Girltech Im-Me</a>;has been used for many;<a href=http://ossmann.blogspot.ie/2010/03/16-pocket-spectrum-analyzer.html>interesting</a>;<a href=http://travisgoodspeed.blogspot.ie/2010/03/im-me-goodfet-wiring-tutorial.html>hacks</a>. However the internal antenna leaves a lot to be desired, being basically a little piece of wire. Having the ability to connect antennas for the specific frequency range you are interested in does a lot to improve receive sensitivity and transmit range.\n\nOnce opened, I removed the little wire antenna which was soldered to the point;<strong>highlighted in red</strong>;below. I then scraped back some solder mask from the groundplane nearby to which I was going to solder the coax shield,;<strong>highlighted in blue</strong>.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2016-02-09%2013.49.29.jpg />\n\nI then drilled out a spot on the front of the lower housing that I thought might have enough clearance from the components in the top housing and passed the SMA connector through. I then secured it with a nut&amp;lock washer, stripped back the external insluator, a bit of shield and some inner insulator and tinned the various parts I was going to solder. I then soldered the inner conductor to the point the original antenna had been connected to, and the shield to the place I had exposed some groundplane.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2016-02-09%2013.49.41.jpg />\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2016-02-09%2013.58.03.jpg />\n\nFinally I routed the little wires internally to prevent any damage and reassembled. The wires poking out at the bottom of the device are soldered to the debug port to allow flashing using a;<a href=http://goodfet.sourceforge.net/hardware/goodfet31/>GoodFET</a>;or some such device.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/2016-02-09%2014.09.54.jpg />\n45,Now that the weather is improving, I decided to dust off the /P kit and ensure that all was working will in anticipation of getting some outdoor operation. I had bought a lightweight dual-band beam for this purpose so decided to put it on a pole and see how it performed.\nI have a number of fibreglass poles of various lengths, but decided to try the longest one, a 10m pole I picked up at the IRTS stand at a rally some time back. I started by clamping a short length of 25mm PVC pipe to the antenna to act as a support. I don't want to clamp directly to the fibreglass pole to prevent cracking.\n\nOnce this was done, I extended the pole, mounted the antenna and cable-tied the co-ax to the pole. I have a drive-on plate with a 5' aluminium pole clamped to it to act as a base. I walked the fibreglass pole with mounted yagi up to it's full height and strapped it to the aluminum pole once vertical.\n\n<img alt= src=https://dl.dropboxusercontent.com/u/32770/DSCF4744.JPG />\n\nI then hooked up the FT817 and tunes around the lower end of 2m. EI3IX had been on a hilltop earlier, but unfortunately had wrapped up by this stage.;The antenna was pointed roughly due north, and while tuning around 144.485, I heard what sounded like a beacon. I listened for a few moments, and heard what sounded like a JT65 transmission followed by a CW ID. The ID was;<a href=http://www.qsl.net/gb3wgi/>GB3WGI</a>, so I did a quick Google to see what it was. GB3WGI is a transatlantic propogation 'early warning' beacon to;provide an early warning of 144MHz transatlantic propagation on the Europe to USA path as a complement to the existing beacon network in the USA.;It can also serve as a useful frequency reference due to the accuracy of the 10 MHZ GPS Disciplined Oscillator;The beacon is located 339 metres above sea level atop Lough Navar Mountain in County Fermanagh, Northern Ireland - Maidenhead Grid Locator IO64BL.\n\nI then did some testing of the directionality of the beam, which I videoed... the beam shows strong rejection off the sides and reasonable front-to-back.;\n\n<a href=https://youtu.be/6OjH1TL7Xpg>https://youtu.be/6OjH1TL7Xpg</a>\n\nSo it looks as though I am ready for some portable ops. The first outing this year (2016) will be the;<a href=http://www.irts.ie/cgi/st.cgi?r_2mrules.html>IRTS 2m Counties Contest</a>.\n46,I have been playing with Software Defined Radio for a number of years, but recently advances in high-speed sampling has put relatively high quality, extremely high frequency SDR within reach of everyone. A few years ago Eric Fry reverse-engineered the communications from a Digital TV USB Dongle to see that it transmitted raw samples. A;<a href=http://comments.gmane.org/gmane.linux.drivers.video-input-infrastructure/30346>number of</a>;<a href=http://comments.gmane.org/gmane.linux.drivers.video-input-infrastructure/40927>email threads</a>;followed up this research, and eventually;<a href=http://sdr.osmocom.org/trac/wiki/rtl-sdr>Osmocom</a>;developed the first RealTek-SDR (rtlsdr) driver that began the low-cost SDR revolution.\nLast year, I heard of a very interesting Kickstarter by renowned hardware hacker;<a href=http://www.ossmann.com/mike/>Michael Ossman</a>;(Im-Me hacking fame). For a remarkably low price ($300) he was developing an SDR capable of both receive and transmit (albeit about 15dBm) from 10MHz to 6GHz. Once the Kickstarter completed, Michael Ossman productified it as the<a href=https://greatscottgadgets.com/hackrf/>;HackRF One</a>. I had to have one.\n\nBefore getting into the hacking aspect, I wanted to get the basic receive-only SDR functionality working. My current favourite Linux SDR demodulator is;<a href=http://cubicsdr.com/>CubicSDR</a>. It demodulates FM, AM, SSB and CW and can also output an IQ stream of selectable bandwidth. I currently have Ubuntu 15.10 as my radio experimentation OS.\n\n1. Install dependencies...\n\n<span style=font-family:Courier New,Courier,monospace;>sudo apt-get install hackrf gnuradio gnuradio-dev gr-iqbalsudo apt-get install git build-essential librtlsdr-dev automake libfftw3-dev cmake libgl1-mesa-dev libwxgtk3.0-dev libpulse-dev\n\nsudo apt-get install libfftw3-dev libpulse-dev libgtk-3-dev\n\nsudo apt-get install freeglut3 freeglut3-dev</span>\n\n2. Clone and install liquid-dsp\n\n<span style=font-family:Courier New,Courier,monospace;>git clone https://github.com/jgaeddert/liquid-dsp\ncd liquid-dsp/\n\n./bootstrap.sh;\n\n./configure;\nmake\nsudo make install\nsudo ldconfig\ncd ..</span>\n\n3. Clone and install SoapySDR\n\n<span style=font-family:Courier New,Courier,monospace;>git clone https://github.com/pothosware/SoapySDR.git\ncd SoapySDR/</span>\n\n<span style=font-family:Courier New,Courier,monospace;>mkdir build\ncd build/\ncmake ../ -DCMAKE_BUILD_TYPE=Release\nmake\nsudo make install\nsudo ldconfig\ncd ..</span>\n\n4. Clone and install SoapyHackRF;\n\n<span style=font-family:Courier New,Courier,monospace;>git clone;<a href=https://github.com/pothosware/SoapyHackRF.git>https://github.com/pothosware/SoapyHackRF.git</a>\n\ncd SoapyHackRF/\nmkdir build;\n\ncd build/\ncmake ../\nmake\nsudo make install\n\nsudo ldconfig</span>\n\n<span style=font-family:Courier New,Courier,monospace;>cd ..</span>\n\n5. Download and build wxWidgets\n\n<span style=font-family:Courier New,Courier,monospace;>wget;<a href=https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.0/wxWidgets-3.1.0.tar.bz2>https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.0/wxWidget...</a></span>\n\n<span style=font-family:Courier New,Courier,monospace;>tar -xjvf wxWidgets-3.1.0.tar.bz2;\ncd wxWidgets-3.1.0/\nmkdir ~/Development/wxwidgets-staticlib\n./autogen.sh;\n./configure --with-opengl --disable-shared --enable-monolithic --with-libjpeg --with-libtiff --with-libpng --with-zlib --disable-sdltest --enable-unicode --enable-display --enable-propgrid --disable-webkit --disable-webview --disable-webviewwebkit --prefix=`echo ~/Development/wxwidgets-staticlib` CXXFLAGS=-std=c++0x --with-libiconv=/usr\n\nmake &amp;&amp; make install\ncd ..</span>\n\n5. Finally clone and install CubicSDR\n\n<span style=font-family:Courier New,Courier,monospace;>git clone;<a href=https://github.com/cjcliffe/CubicSDR.git>https://github.com/cjcliffe/CubicSDR.git</a></span>\n\n<span style=font-family:Courier New,Courier,monospace;>cd;CubicSDR\nmkdir build\n\ncd build/\ncmake ../ -DCMAKE_BUILD_TYPE=Release -DwxWidgets_CONFIG_EXECUTABLE=~/Development/wxwidgets-staticlib/bin/wx-config\n\nmake\nsudo make install</span>\n47,At the Mayo Amateur Radio Rally a couple of years ago, a NI ham, Tom Herbison, MI0IOU was selling an interesting kit for the Raspberry Pi. It combined an Analogue Devices Clock Generator (AD9850) and an RF power meter (AD8307) to give a programmable sweep generator &amp; detector... commonly known as a Wobbulator. I bought one and had an<a href=https://gerryk.com/node/37>enjoyable afternoon not long afterward building it</a>. It was a relatively easy build, and I got some use out of it tuning some Band Pass Filters I had built for use on multi-station portable ops.\n\n\n\nMore recently, I came across an interesting addition, a Return-Loss Bridge. This allows characterisation of how much RF is absorbed and reflected by the Device Under Test... ideal for testing antennas. I built the RLB based on a design by Wes Hayward, W7ZOI according to this schematic:\n\n\n\n<img height=304 src=https://ogfhpa-ch3301.files.1drv.com/y3mhhcBnn5QQVEPdgUuSyPr_EuKXjWc4ujSfkeSbjGdI8UR_C6Q__N-_beKc7eAjHNDQRTXJb1zTXzNGV_i4uvG9oAoPHyqrnY9FvLzJXysHd9-SYsnyg226Ft-49rpiIbT2RI2hepkSuIMRErOBqJEcw?width=470&amp;height=304&amp;cropmode=none width=470 />\n\n\n\nI just built it on a piece of scrap PCB material as a prototyping exercise.\n\n\n\n<img height=564 src=https://ogh8ba-ch3301.files.1drv.com/y3mhmdCE4vbcyZxiWIILRIsMxFtprefGugupQs7sdb2OMVjYHDUvgtfqrzwnTLr-iIaTBMyQr_Ysi44X1E06zdgBT1HkGhVSgA4nkG5uU4etLfKgvQfLpNPGtjQl9NG9SFhI4_XtQmHNkPXcXkU8CxBMg?width=660&amp;height=564&amp;cropmode=none width=660 />\n\n\n\n<img height=571 src=https://oggx4q-ch3301.files.1drv.com/y3mEGmk_6sc1YsKok8tQqGGcWEomSrlhWLomJl4fFEwYVNgK2JxwgmIe0o5yRDoptYKWbOlmEmwHEglC5kYPqXn_cgAZjnmD05dmVGDhNf6JFc3jKxpJJvR_Pberi942t9rB-WuL8GyaJ7uPg0vGIvCGA?width=660&amp;height=571&amp;cropmode=none width=660 />\n\n\n\nIn order to accurately characterise the Load Under Test, it is necessary to plot the Open and Short paths first. To do this, first connect the Signal Generator to the Detector and plot the response from 0 to 30MHz in appropriate steps. This was my response plot.\n\n\n\n<img height=612 src=https://ogerdw-ch3301.files.1drv.com/y3m0CKoTsIGHrLUCMIzWVh1ImEhYZmKxB3r-ONBDbNb2K8tLV_nrtCkxHVwq_ZTivc8ukqjeGikx-0XfGwc1u17vSSarIYSdPjP7KO1H9rNKK3Gwa-93-C_GPT7w_OpjejcBW5BaPAmmda06cI3zWr9Cw?width=660&amp;height=612&amp;cropmode=none width=660 />\n\n\n\nThen I plotted the Open path, giving infinite return loss, as expected.\n\n\n\n<img height=622 src=https://oghggw-ch3301.files.1drv.com/y3m9if5SZU8dnpVuVUQimKxKSOW9mOZnSwKhdRu3kKrDnr9RUfpXRC2j7dpLe-hL9xUi4HeUfd03ZUGRcSqAL2IQZD7tlfb8B2kA0629-hdoHXjQ07DewSY5i70hyYEbMd08838eVZcl-CjRrFGNqKiBQ?width=660&amp;height=622&amp;cropmode=none width=660 />\n\n\n\nI then connected my antenna to the DUT port on the RLB as follows:\n\n\n\n<img height=390 src=https://oggcda-ch3301.files.1drv.com/y3m4E_dIl4Hsff6xiFlzSUSoWPiniIvdLDSAy9XYNATcrkW5i9gYn2ZT2zyI0N3MmNQ7JiKEh1idMFUvuiATMzJLrwEJLH0pdfVnUdmi50LEhFlOCiTGgI2LnL8x5MLCm2moQcvt0mMvA0E0u_zgC8pbg?width=660&amp;height=390&amp;cropmode=none width=660 />\n\n\n\nI then re-ran the sweep from 0 – 30MHz, giving this plot.\n\n\n\n<img height=610 src=https://oggqmg-ch3301.files.1drv.com/y3mQ3ybyBLqRozh_qCmOofBPRUwz9bG4csxHlbTDfaMLe_P_TwM9KXY7mmsBV1TQfHUhTXhY0JpfS1Vijc6GmnDr8i87YaiMiUpG9XckVPRe6NQL7A1faHgKPdZyavWJlvC7zo3RAkpIUo4GscGyAAweQ?width=660&amp;height=610&amp;cropmode=none width=660 />\n\n\n\nFrom this, we can immediately see that there is a good response curve for many of the amateur bands, particularly 80m, 40m, 20m, 17m and 10m. To calculate actual SWR from these figures we can use the following table:\n\n\n\n<img height=547 src=https://ogedgq-ch3301.files.1drv.com/y3mmN_75mLVr_SvLogPKDKL48lEYrnjqUo-bnU5GRU0r1GHFDqJsQnoPjpk4e1NminYmbh0ytb4ZrPORa2Iv_tSPSYw2HLvzc47WeLGT2inAbYGVvfmND4A8qkbRRVfh76-FQMm_-84rI_yphazcQQ3FA?width=300&amp;height=547&amp;cropmode=none width=300 />\n\n\n\nSo, for example, the difference between the short at 80m and the return loss at the same frequency is about 20dB, which gives us an SWR of around 1.2:1. This includes co-ax loss however, so the actual SWR at the feedpoint will be somewhat higher.\n48,I recently upgraded my shack to an;<a href=http://www.eham.net/reviews/detail/12742>ICOM IC7300</a>, which in the EU specification includes the 4 meter / 70MHz band. I do not have a vertical for 4m, or space for one right now, but had read about others using a small matching unit to provide the necessary match using the;<a href=http://www.diamondantenna.net/v2000a.html>Diamond V2000</a>, or Watson W2000, as my version is badged. Two blogs I got my inspriation from are;<a href=http://ea4eoz.blogspot.ie/2012/09/using-v2000-triband-antenna-on-70-mhz.html>Miguel EA4EOZ's blog</a>;and that of;<a href=http://ei4dib.blogspot.ie/2015/09/70-mhz-antenna-tuning-unit-for-4-meter.html>Tony EI4DIB</a>, so having done some reading, and some rummaging in the junk box to see if I had the requisite parts, I got to work.\n\n\n\nI first wound an inductor... estimating by eye from the work of Tony and Miguel. I used a pen with a diameter around 8mm, and wound 4 turns, spaced around 3mm. I then stripped down a rubbish old antenna switch, which provided a case and some SO239s.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2012.19.43.jpg />\n\n\n\nI then drilled some holes to hold the variable capacitors. I had a few dual-gang units I bought from GQRP with 60pF on one gang and 140pF on the other. I ended up using the 60pF gang from one cap on the antenna side and the 140pF from the other cap on the TX side.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2012.40.29.jpg />\n\n\n\nOnce these were mounted, as I was using a C-L-C Pi circuit I connected the two centres of each socket to the appropriate gang of the caps.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2013.35.09.jpg />\n\n\n\nI then added the inductor, again, soldered between the two centre pins of the co-ax connectors.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2013.40.12.jpg />\n\n\n\nFinally, I wired the earths of the capacitors to the earth tags of the coax connectors\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2013.45.41.jpg />\n\n\n\nA few tweaks of the capacitors, and both the rig and the inline meter are happy with the match.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2013.50.22.jpg />\n\n\n\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-05-17%2013.50.31.jpg />\n\n\n\nThis was with 10W of FM at 70.25MHz. The W2000 has some small capacitors in the matching section in the base, and I do not want to risk toasting them.\n\n\n\n\n\n\n;\n49,Following a suggestion by Galway VHF Group mamber Steve, EI5DD, I thought I would give SSTV a shot. It's not a mode I have any experience with, apart from hearing the transmissions at 14.230MHz when I tune around. Steve mentioned a cross-platform SSTV program QSSTV, which seems to run well on a Pi 2, so that's what I decided to use.\n\n\n\nI have a Pi 2 that I use for playing with SDR and radio software already set up with the current Rasbian (wheezy). Initially, I installed the version of QSSTV in the Rasbian repositories, however, I got errors when it tried to open the audio device on the Pi. I uninstalled it and decided to build from source instead. The code and build instructions are available on;<a href=http://users.telenet.be/on4qz/>the author's site</a>.\n\n\n\nI started by installing the dependencies.\n\n\n\nsudo apt-get install g++ libfftw3-dev qt5-default libpulse-dev\n\n\n\nsudo apt-get install hamlib-dev libasound-dev libv4l-dev\n\n\n\nsudo apt-get install libopenjp2-7 libopenjp2-7-dev\n\n\n\nI then downloaded and exploded the source tarball and compiled and installed the binary. Compilation on the Pi takes a while, so be patient.\n\n\n\n$ cd ~/Development\n\n$ tar -xvzf qsstv_9.1.1.tar.gz\n\n$ cd qsstv_9.1.1\n\n$ qmake\n\n$ make\n\n$ sudo make install\n\n\n\n\nRunning the application is just a matter of entering 'qsstv' at the command prompt.\n\n\n$ qsstv\n\nOnce started, it needs to be configured.\n\n\n;\n51,Among other great features of the Raspberry Pi is the General Purpose Input Output array (GPIO). This is an array of pins that can be programmed to behave as pretty much any I/O type that can be represented digitally. The pins can be switched on or off to represent binary 1s and 0s and controlled so as to emulate any communication protocol that uses bits (I2C, SPI, RS232 etc. etc.). However, as a first attempt at working with GPIO, I took a recommendation from Steve EI5DD and wrote a program that will key a transceiver and generate morse code.\n\nThe program is written in Python, and runs from the command line. To install, first ensure that the RPi.GPIO Python module is installed on your Pi. This module enables programmatic access to the GPIO through Python, and makes it very simple. To install, enter the following at the command line:\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo pip install RPi.GPIO</span>\n\nOnce this completes, the next stage is to download the cwbeacon code. To do this, enter the following at the commandline:\n\n<span style=font-family:Courier New,Courier,monospace;>$ git clone;<a href=https://github.com/gerryk/cwbeacon.git title=https://github.com/gerryk/cwbeacon.git>https://github.com/gerryk/cwbeacon.git</a></span>\n\nAssuming you were in your home directory, this will create a directory called 'cwbeacon' containing a Python file called 'beacon.py'. You can execute this by typing the following at the commandline:\n\n<span style=font-family:Courier New,Courier,monospace;>$ python cwbeacon/beacon.py</span>\n\nYou will get a short message describing how to use the program, since you did not provide any parameters. The message is like this:\n\n<span style=font-family:Courier New,Courier,monospace;><em>usage: CW Beacon Sender - uses GPIO pin [-h] [-c CPS] message [message ...]\nCW Beacon Sender - uses GPIO pin: error: too few arguments</em></span>\n\nBefore you can key a rig with this program, you need to build a small keying circuit. Basically this uses a transistor as a switch. I used a BC548, but any general purpose NPN, such as 2N3904 may be used. I also added a small indicator LED, since when not plugged into a rig, the keying is silent.\n\n\nThis is the circuit...\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-08-09%2015.04.42.jpg />\n\n\nMost rigs use a stereo jack as the key input with the tip and shield as key and ground. The pins on the Raspberry Pi are GPIO 11 and GND. The pinout for the Pi 2 is as follows (yours may differ depending on version):\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/gpio-numbers-pi2.png />\n\n\nOnce the keying cirsuit is build and connected, the rig should be set to CW mode, but VOX (or however your rig actually transmits on keyng) disabled to test. The following command line will test the keyer:\n\n<span style=font-family:Courier New,Courier,monospace;>$ python cwbeacon/beacon.py test</span>\n\nYou should see the LED flash and the side-tone generator in the transceiver should sound the morse for 'test'. The speed of transmission can be changed from the default 15 CPS by using the -c parameter as follows:\n\n<span style=font-family:Courier New,Courier,monospace;>$ python cwbeacon/beacon.py -c 20 test</span>\n\nOnce this test has been successful - you may need to debug your keyer circuit! - you can activate CW transmit on the transceiver and test a transmission. It makes sense to transmit on a clear frequency, and using a power and frequency that is appropriate for a beacon.\n\n\nOnce this has been completed, you may wish to automate the beacon transmission. The Linux crontab feature may be used for this. To activate automated transmission, enter the following at the commandline:\n\n<span style=font-family:Courier New,Courier,monospace;>$ crontab -e</span>\n\nYou will be presented with an editor screen where you can add the crontab configuration. An example configuration would be:\n\n<span style=font-family:Courier New,Courier,monospace;>5,10,15,20,25,30,35,40,45,50,55,0 * * * * python /home/pi/cwbeacon/beacon.py -c 20 ei8drb io53mf</span>\n\nThis will beacon my callsign and grid square every 5 minutes of every day. You should customise this to your own environment and requirements.\n\n\nHappy beaconing...\n;\n52,A while ago, while browsing Ham Radio channels on Youtube, I came across an interesting project. Chris, M0NKA, an obviously talented hardware designer had designed a QRP Software Defined Radio (SDR) based on the STM32F407 from STMicroelectronics.\n\n\nThe STM32F407 is a System On a Chip (SoC) that includes a Cortex M4 CPU core running at 200MHz, and some high-speed DAC/ADCs, capable of up to 7Msamples/sec, so a good candidate for a single-stage superhet Software based radio. I continued looking at videos of various builds, and comparative tests between the mcHF (the name for this kit) and other radios, such as Yaesu's FT817. The comparative tests showed this radio in a very good light, with sensitivity across the HF band of better than -130 dBµV. Not bad at all for what is basically a non-commercial hobbyist radio.\n\n\nThere are a number of ways to get your own mcHF. You can download the Gerbers and fabricate or order boards from one of the many PCB fabrication services. You can purchase a set of boards and provide your own components, or you can order a 'full kit' which comprises a set of boards with all the SMD components already in place, almost all of the remaining components which must be installed by the builder. These include a voltage regulator, an LCD screen and the various UI components; buttons and rotary encoders. There is nothing stopping the builder from substituting components for others of the same specification... for instance, some replace the provided tuning encoder with a more substantial unit, since this will probably see a lot of usage.\n\n\nBoards and kits may be ordered from Chris M0NKA at his website;<a href=http://www.m0nka.co.uk/ title=http://www.m0nka.co.uk/>http://www.m0nka.co.uk/</a>;which also has other resources such as a gallery of mcHF builds and a comprehensive Downloads section containing the design and build documents along with links to firmware builds that can be installed on the radio. On the topic of firmware, there is a very active community that has, in the Open Source way, taken the initial code developed by Chris and run with it, adding features such as FM modulation and demodulation, a waterfall display to supplement the existing panadapter display, USB audio and rig-control and many other tweaks and enhancements. The firmware is maintained at a github repository, where builds, documentation and a bug tracker can be found:;<a href=https://github.com/df8oe/mchf-github/wiki title=https://github.com/df8oe/mchf-github/wiki>https://github.com/df8oe/mchf-github/wiki</a>\n\n\nThe boards are GBP8 each (1x UI, 1x RF) + postage\n\n\nThe Full Kit is GBP259 + postage. This includes everything you need except the finals (2x RD16HHF1), a speaker, case and knobs. There are a number of cases available through the community including files to 3D print your own, if you have access to a 3D printer. There is also a very nice complete case kit that includes knobs, a speaker, buttons and a nice aluminium case available from some Chinese suppliers.\n\n\nHaving researched and determined that this would be not just a fun build but would be a capable and performant addition to the shack, I decided to liquidate some unused gear to get myself an mcHF kit, and a few days after placing the order, the package arrived. All of the components are individually packaged and labelled, making the initial inventory very straightforward.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-11%2020.44.57.jpg />\n\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-11%2020.46.19.jpg />\n\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-11%2020.46.42.jpg />\n\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-11%2020.47.02.jpg />\n\n\nThe two boards have all of the Surface Mount Devices already installed from the factory, so all that remains is to install some connectors, rotary encoders and pushbuttons, wind and fit a bunch of toroids for the LPF and SWR sensors and install the LCD, a couple of afternoon's work at most. The boards are well laid out, and have the various stages, such as receive pre-amp, transmit driver &amp; PA and mixer stage silkscreened so that they are easily identified. This will doubtless be handy for any future diagnosis.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-11%2023.14.51.jpg />\n\n\nI started by winding the toroids and the task I hate most, scraping the enamel off the wire to expose the copper. I then measured each on my MFJ259b, and adjusted where necessary. I then soldered them to the RF board. I then did the same for the SWR measurment toroids and stripped a couple of pieces of RG174 to make the sensing elements. These were then soldered in place.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-12%2013.37.44.jpg />\n\n\nThere were a few other items to wind, transformers for the PA and so forth. These were duly wound and soldered.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-17%2008.45.30.jpg />\n\n\nOnce this was all completed, I soldered the buttons and encoders in place on the UI board, along with a couple of LEDs for TX &amp; RX indication.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-12%2010.24.55.jpg />\n\n\nI then finally soldered the various connectors and jacks in place.\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-12%2015.02.13.jpg />\n\n\nI ordered a case from a member of the community on Yahoo Groups (<a href=https://uk.groups.yahoo.com/neo/groups/M0NKA-mcHF/info title=https://uk.groups.yahoo.com/neo/groups/M0NKA-mcHF/info>https://uk.groups.yahoo.com/neo/groups/M0NKA-mcHF/info</a>) and a set of buttons from Farnell, who do free shipping in Ireland these days. I also ordered the finals (2x RD16HHF1) from Box73.de, who are a recommended supplier. Some of the commmunity had strange issues with what seem to be counterfeit parts and I didn't want to take that risk. These have yet to arrive, but when they do arrive, I will follow up with a post on the last stages of construction and the testing. Meanwhile, here is how it looks without its case...\n\n\n<img src=https://dl.dropboxusercontent.com/u/32770/2016-07-12%2019.17.44.jpg />\n\n\n\nPart 2 of this write-up can be found <a href=https://gerryk.com/node/59>here</a>.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;\n53,<a href=https://www.samknows.com/>SamKnows</a>;is a global Broadband Quality Monitoring service. They are funded by a number of national regulatory bodies, including the FCC and OfCom, and are to all intents unaffiliated. On sign-up, they will ship a heavily customised;<a href=http://www.tp-link.com/us/products/details/TL-WDR3600.html%3ETP%20Link%20N600%20router%3C/a%3E.%20The%20conditions%20of%20participation%20are%20that%20you%20leave%20this%20connected%20to%20your%20home%20broadband%20for%20two%20years,%20during%20which%20time%20it%20will%20gather%20metrics%20which%20are%20aggregated%20by%20SamKnows,%20who%20generate%20reports%20which%20can%20then%20presumably%20be%20used%20to%20encourage%20your%20carrier%20to%20improve%20their%20service.%20Once%20the%20two%20years%20have%20lapsed,%20the%20router%20is%20yours%20to%20keep.%3C/p%3E%3Cp%3EThis%20works%20fairly%20well...%20I%20have%20used%20these%20reports%20a%20number%20of%20times%20of%20the%20last%20two%20years,%20to%20often%20positive%20effect.%20However,%20now%20the%20two%20years%20are%20overr,%20I%20feel%20that%20I%20could%20put%20the%20router%20to%20better%20use.%20My%20choice%20of%20router%20firmware%20is%20%3Ca%20href=>OpenWRT</a>, mainly for its rich collection of addons and customisability. It might be a little harder to get to grips with than Tomato or dd-wrt, but I fell the additional functionality makes it worthwhile. A build of;<a href=https://downloads.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/openwrt-15.05.1-ar71xx-generic-tl-wdr3600-v1-squashfs-factory.bin>OpenWRT 15.05 (Chaos Calmer)</a>;exists for the provided router, a TP-Link TL-WDR3600 (N600), so downloading that is where I began.\n\nOnce downloaded, I renamed to 'tplink.bin' and left it in an accessible directory on my laptop. I then configured my laptop to a static address (192.168.1.2), and connected it directly to one of the LAN ports on the WDR3600. It is possible to set the SamKnows firmware into 'failsafe' mode, which sets the IP to 192.168.1.1 and exposes a telnet port with no password. This is achieved by powering the unit off, then powering back up... all of the LEDs will light up after a couple of seconds, and once they do, repeatedly pressing the Reset/WPS button on the back will eventually cause the little 'sun' LED, second from the left to start to flash rapidly... once this happens you are in failsafe and can log in.\n\nThe login and re-flash session was captured, and looks like this:\n\n;\n\n<span style=font-family:Courier New,Courier,monospace;>gerryk@feynman:~$ telnet 192.168.1.1\nTrying 192.168.1.1...\nConnected to 192.168.1.1.\nEscape character is '^]'.</span>\n\n<span style=font-family:Courier New,Courier,monospace;>=== IMPORTANT ============================\nUse 'passwd' to set your login password\nthis will disable telnet and enable SSH\n------------------------------------------</span>\n\n<span style=font-family:Courier New,Courier,monospace;>BusyBox v1.19.4 (2015-02-03 17:28:09 GMT) built-in shell (ash)\nEnter 'help' for a list of built-in commands.</span>\n\n<span style=font-family:Courier New,Courier,monospace;>; ; ; ; ; ; ; ; ; ; ;_\n;___ __ _ _ __ ___ ;| | ;; ;___ ;;__ ; ;_____ _____\n/ __|/ _` | '_ ` _ \\| | / / '_ \\ / _ \\ \\ /\\ / / __|\n\\__ \\ (_| | | | | | | ;&lt; ;| | | | (_) \\ V V /\\__ \\\n|___/\\__,_|_| |_| |_|_| \\_\\_| |_|\\___/ \\_/\\_/ |___/\nP E R F O R M A N C E M O N I T O R I N G</span>\n\n<span style=font-family:Courier New,Courier,monospace;>OS: OpenWRT Attitude Adjustment, r35093\nSW: WDR3600 Build\n-------------------------------------------------\nroot@(none):/#\nroot@(none):/# mount_root\n/sbin/mount_root: line 1: pi_include: not found\n/sbin/mount_root: line 1: pi_include: not found\n/sbin/mount_root: line 1: set_jffs_mp: not found\n/sbin/mount_root: line 1: determine_root_device: not found\n/sbin/mount_root: line 1: can't create /.extroot.md5sum: Read-only file system\nswitching to jffs2\nroot@(none):/# passwd\nChanging password for root\nNew password:\nRetype password:\nPassword for root changed by root\nroot@(none):/# cd /tmp\nroot@(none):/tmp# scp gerryk@192.168.1.2:~/tplink.bin /tmp</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Host '192.168.1.2' is not in the trusted hosts file.\n(fingerprint md5 99:32:6a:72:db:26:03:a2:a5:42:ff:a6:9c:b8:6c:e8)\nDo you want to continue connecting? (y/n) y</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Login for gerryk@192.168.1.2\nPassword:\nYou have logged in using cached account information. Some network services\nwill be unavailable.</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Press Enter to Continue.\ntplink.bin 100% 7936KB 2.6MB/s 00:03\nroot@(none):/tmp# mtd -r write /tmp/tplink.bin firmware\nUnlocking firmware ...</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Writing from /tmp/tplink.bin to firmware ... [w]</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Rebooting ...\nConnection closed by foreign host.\ngerryk@feynman:~$ telnet 192.168.1.1\nTrying 192.168.1.1...\nConnected to 192.168.1.1.\nEscape character is '^]'.\n=== IMPORTANT ============================\nUse 'passwd' to set your login password\nthis will disable telnet and enable SSH\n------------------------------------------</span>\n\n<span style=font-family:Courier New,Courier,monospace;>BusyBox v1.23.2 (2016-01-02 18:01:44 CET) built-in shell (ash)</span>\n\n<span style=font-family:Courier New,Courier,monospace;>_______ ________ __\n| |.-----.-----.-----.| | | |.----.| |_\n| - || _ | -__| || | | || _|| _|\n|_______|| __|_____|__|__||________||__| |____|\n|__| W I R E L E S S F R E E D O M\n-----------------------------------------------------\nCHAOS CALMER (15.05.1, r48532)\n-----------------------------------------------------\n* 1 1/2 oz Gin Shake with a glassful\n* 1/4 oz Triple Sec of broken ice and pour\n* 3/4 oz Lime Juice unstrained into a goblet.\n* 1 1/2 oz Orange Juice\n* 1 tsp. Grenadine Syrup\n-----------------------------------------------------\nroot@OpenWrt:/#</span>\n\n;\n\nAt this point, OpenWRT is installed. The web UI, LuCI, can be accessed by pointing a browser at;<a href=http://192.168.1.1/>http://192.168.1.1/</a>\nThe password will need to be set on first login, or the router will start-up in 'initialised' mode every time.\n54,Meraki (now part of Cisco) are well known for their high-quality enterprise grade networking hardware. Over the last number of years, they have been promoting their kit by way of providing 'evaluation' units for the cost of simply attending a webinar. They specify that the attendee should be a 'networking professional', but it is possible that not every attendee is.\nI recently acquired a number of these, where the evaluation period had expired, and the cloud-management interface was no longer accessible without a license key. This in effect makes the unit useless. Unless...\nThere is a build of;<a href=https://github.com/riptidewave93/Openwrt-MR12>OpenWRT CC available for the MR12 and MR16</a>;Access Points, and it turns out it is not too hard to flash. All you need is the build images, a serial to USB convertor with flying leads, and a TFTP server.\nA serial consle is exposed over a debug port on the main board, and connecting a serial lead and configuring a terminal as 15200,8,n,1 is enough to get access. Pressing a key during boot will halt the boot process and drop the user to an 'emergency' prompt.\nAt this prompt, it is possible to do a 'test' boot without flashing... this is good practise, since once you flash, if there is a problem, it is difficult to recover.\nIn the 1.3 release of riptide_wave's build, there are images for boot and to flash.\n\nTo boot from TFTP: <em>openwrt-ar71xx-generic-mr12-initramfs-uImage.bin</em>\nTo flash to the device: <em>openwrt-ar71xx-generic-mr12-kernel.bin &amp; openwrt-ar71xx-generic-mr12-rootfs-squashfs.bin</em>\n\nThe command to enter at the recovery prompt to boot is:\n\n<span style=font-family:Courier New,Courier,monospace;>tftpboot 0x81000000 openwrt-ar71xx-generic-mr12-initramfs-uImage.bin; bootm</span>\n\nOnce the unit boots, log in and verify the behaviour before flashing, which can be done using these commands:\n\n<span style=font-family:Courier New,Courier,monospace;>tftpboot 0x80010000 openwrt-ar71xx-generic-mr12-kernel.bin;erase 0x9fda0000 +0x240000;cp.b 0x80010000 0x9fda0000 0x240000\ntftpboot 0x80010000 openwrt-ar71xx-generic-mr12-rootfs-squashfs.bin;erase 0x9f080000 +0xD20000;cp.b 0x80010000 0x9f080000 0xD20000\nsetenv bootcmd bootm 0x9fda0000; saveenv; boot</span>\n\nWhen the system boots at the end, you have a full OpeWRT/LuCI build available. The default IP is 192.168.1.1\n\n<h3>Session Transcript</h3>\n\n\n<span style=font-family:Courier New,Courier,monospace;>[ 58.980000] random: nonblocking pool is initialized</span>\n\n<span style=font-family:Courier New,Courier,monospace;>U-Boot 1.1.4-g0c3911dd (Mar 3 2011 - 17:08:51)</span>\n\n<span style=font-family:Courier New,Courier,monospace;>PB93 (ar7241 - Virian) U-boot\nDRAM:\nsri\nar7240_ddr_initial_config(133): virian ddr1 init\n#### TAP VALUE 1 = 0x2, 2 = 0x2 [0x1440010: 0x10000000]\n64 MB\nTop of RAM usable for U-Boot at: 84000000\nReserving 272k for U-Boot at: 83fb8000\nReserving 192k for malloc() at: 83f88000\nReserving 44 Bytes for Board Info at: 83f87fd4\nReserving 36 Bytes for Global Data at: 83f87fb0\nReserving 128k for boot params() at: 83f67fb0\nStack Pointer at: 83f67f98\nNow running in RAM - U-Boot at: 83fb8000\nid read 0x100000ff\nflash size 16MB, sector count = 256\nFlash: 16 MB\n*** Warning - bad CRC, using default environment</span>\n\n<span style=font-family:Courier New,Courier,monospace;>In: serial\nOut: serial\nErr: serial\nNet: ag7240_enet_initialize...\nFetching MAC Address from 0x83fe7ea0\nVirian External MII mode MDC CFG Value ==&gt; 6\n: cfg1 0xf cfg2 0x7014\neth0 link down\neth0: 00:03:7f:e0:00:2a\nATHRSF1_PHY: PHY unit 0x0, address 0x4, ID 0xd04e,\nATHRSF1_PHY: Port 0, Neg Success\nATHRSF1_PHY: unit 0 port 0 phy addr 4\neth0 up\neth0\nRESET is un-pushed\nHit any key to stop autoboot: 0\nar7240&gt;\nar7240&gt; tftpboot 0x81000000 openwrt-ar71xx-generic-mr12-initramfs-uImage.bin; bootm\nTrying eth0\nUsing eth0 device\nTFTP from server 192.168.1.101; our IP address is 192.168.1.1\nFilename 'openwrt-ar71xx-generic-mr12-initramfs-uImage.bin'.\nLoad address: 0x81000000\nLoading: len bad 52 &lt; 60\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n###\ndone\nBytes transferred = 3339055 (32f32f hex)\n## Booting image at 81000000 ...\nImage Name: MIPS OpenWrt Linux-3.18.11\nCreated: 2015-05-09 15:35:10 UTC\nImage Type: MIPS Linux Kernel Image (lzma compressed)\nData Size: 3338991 Bytes = 3.2 MB\nLoad Address: 80060000\nEntry Point: 80060000\nVerifying Checksum ... OK\nUncompressing Kernel Image ... OK\nNo initrd\n## Transferring control to Linux (at address 80060000) ...\n## Giving linux memsize in bytes, 67108864</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Starting kernel ...</span>\n\n<span style=font-family:Courier New,Courier,monospace;>[ 0.000000] Linux version 3.18.11 (riptide_wave@BuildBox1) (gcc version 4.8.3 (OpenWrt/Linaro GCC 4.8-2014.04 r45651) ) #2 S5\n[ 0.000000] bootconsole [early0] enabled\n[ 0.000000] CPU0 revision is: 00019374 (MIPS 24Kc)\n[ 0.000000] SoC: Atheros AR7242 rev 1\n[ 0.000000] Determined physical RAM map:\n[ 0.000000] memory: 04000000 @ 00000000 (usable)\n[ 0.000000] Initrd not found or empty - disabling initrd\n[ 0.000000] Zone ranges:\n[ 0.000000] Normal [mem 0x00000000-0x03ffffff]\n[ 0.000000] Movable zone start for each node\n[ 0.000000] Early memory node ranges\n[ 0.000000] node 0: [mem 0x00000000-0x03ffffff]\n.\n.\n.\n[ 23.280000] eth0: link up (1000Mbps/Full duplex)\n[ 23.280000] br-lan: port 1(eth0) entered forwarding state\n[ 23.290000] br-lan: port 1(eth0) entered forwarding state\n[ 23.310000] IPv6: ADDRCONF(NETDEV_CHANGE): br-lan: link becomes ready\n[ 25.290000] br-lan: port 1(eth0) entered forwarding state</span>\n\n<span style=font-family:Courier New,Courier,monospace;>BusyBox v1.23.2 (2015-05-09 10:22:11 CDT) built-in shell (ash)</span>\n\n<span style=font-family:Courier New,Courier,monospace;>_______ ________ __\n| |.-----.-----.-----.| | | |.----.| |_\n| - || _ | -__| || | | || _|| _|\n|_______|| __|_____|__|__||________||__| |____|\n|__| W I R E L E S S F R E E D O M\n-----------------------------------------------------\nCHAOS CALMER (Bleeding Edge, r45651)\n-----------------------------------------------------\n* 1 1/2 oz Gin Shake with a glassful\n* 1/4 oz Triple Sec of broken ice and pour\n* 3/4 oz Lime Juice unstrained into a goblet.\n* 1 1/2 oz Orange Juice\n* 1 tsp. Grenadine Syrup\n-----------------------------------------------------\nroot@OpenWrt:/#\n[ 58.980000] random: nonblocking pool is initialized</span>\n\n<span style=font-family:Courier New,Courier,monospace;>U-Boot 1.1.4-g0c3911dd (Mar 3 2011 - 17:08:51)</span>\n\n<span style=font-family:Courier New,Courier,monospace;>PB93 (ar7241 - Virian) U-boot\nDRAM:\nsri\nar7240_ddr_initial_config(133): virian ddr1 init\n#### TAP VALUE 1 = 0x2, 2 = 0x2 [0x1440010: 0x10000000]\n64 MB\nTop of RAM usable for U-Boot at: 84000000\nReserving 272k for U-Boot at: 83fb8000\nReserving 192k for malloc() at: 83f88000\nReserving 44 Bytes for Board Info at: 83f87fd4\nReserving 36 Bytes for Global Data at: 83f87fb0\nReserving 128k for boot params() at: 83f67fb0\nStack Pointer at: 83f67f98\nNow running in RAM - U-Boot at: 83fb8000\nid read 0x100000ff\nflash size 16MB, sector count = 256\nFlash: 16 MB\n*** Warning - bad CRC, using default environment</span>\n\n<span style=font-family:Courier New,Courier,monospace;>In: serial\nOut: serial\nErr: serial\nNet: ag7240_enet_initialize...\nFetching MAC Address from 0x83fe7ea0\nVirian External MII mode MDC CFG Value ==&gt; 6\n: cfg1 0xf cfg2 0x7014\neth0 link down\neth0: 00:03:7f:e0:00:2a\nATHRSF1_PHY: PHY unit 0x0, address 0x4, ID 0xd04e,\nATHRSF1_PHY: Port 0, Neg Success\nATHRSF1_PHY: unit 0 port 0 phy addr 4\neth0 up\neth0\nRESET is un-pushed\nHit any key to stop autoboot: 0\nar7240&gt; tftpboot 0x80010000 openwrt-ar71xx-generic-mr12-kernel.bin;erase 0x9fda0000 +0x240000;cp.b 0x80010000 0x9fda0000 0x24000\nTrying eth0\ndup 1 speed 1000\nUsing eth0 device\nTFTP from server 192.168.1.101; our IP address is 192.168.1.1\nFilename 'openwrt-ar71xx-generic-mr12-kernel.bin'.\nLoad address: 0x80010000\nLoading: #################################################################\n#################################################################\n#################################################################\n####################################\ndone\nBytes transferred = 1179648 (120000 hex)\nErase Flash from 0x9fda0000 to 0x9ffdffff in Bank # 1\nFirst 0xda last 0xfd sector size 0x10000\n253\nErased 36 sectors\nCopy to Flash... write addr: 9fda0000\ndone\nar7240&gt; tftpboot 0x80010000 openwrt-ar71xx-generic-mr12-rootfs-squashfs.bin;erase 0x9f080000 +0xD20000;cp.b 0x80010000 0x9f08000\nTrying eth0\nUsing eth0 device\nTFTP from server 192.168.1.101; our IP address is 192.168.1.1\nFilename 'openwrt-ar71xx-generic-mr12-rootfs-squashfs.bin'.\nLoad address: 0x80010000\nLoading: #################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n#################################################################\n######\ndone\nBytes transferred = 2359296 (240000 hex)\nErase Flash from 0x9f080000 to 0x9fd9ffff in Bank # 1\nFirst 0x8 last 0xd9 sector size 0x10000\n217\nErased 210 sectors\nCopy to Flash... write addr: 9f080000\ndone\nar7240&gt; setenv bootcmd bootm 0x9fda0000; saveenv; boot\nSaving Environment to Flash...\nProtect off 9F040000 ... 9F04FFFF\nUn-Protecting sectors 4..4 in bank 1\nUn-Protected 1 sectors\nErasing Flash...Erase Flash from 0x9f040000 to 0x9f04ffff in Bank # 1\nFirst 0x4 last 0x4 sector size 0x10000\n4\nErased 1 sectors\nWriting to Flash... write addr: 9f040000\ndone\nProtecting sectors 4..4 in bank 1\nProtected 1 sectors\n## Booting image at 9fda0000 ...\nImage Name: MIPS OpenWrt Linux-3.18.11\nCreated: 2015-05-09 15:26:58 UTC\nImage Type: MIPS Linux Kernel Image (lzma compressed)\nData Size: 1132559 Bytes = 1.1 MB\nLoad Address: 80060000\nEntry Point: 80060000\nVerifying Checksum ... OK\nUncompressing Kernel Image ... OK\nNo initrd\n## Transferring control to Linux (at address 80060000) ...\n## Giving linux memsize in bytes, 67108864</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Starting kernel ...</span>\n\n<span style=font-family:Courier New,Courier,monospace;>[ 0.000000] Linux version 3.18.11 (riptide_wave@BuildBox1) (gcc version 4.8.3 (OpenWrt/Linaro GCC 4.8-2014.04 r45651) ) #1 S5\n[ 0.000000] bootconsole [early0] enabled\n[ 0.000000] CPU0 revision is: 00019374 (MIPS 24Kc)\n[ 0.000000] SoC: Atheros AR7242 rev 1\n.\n.\n.\n[ 26.920000] eth0: link up (1000Mbps/Full duplex)\n[ 26.920000] br-lan: port 1(eth0) entered forwarding state\n[ 26.930000] br-lan: port 1(eth0) entered forwarding state\n[ 26.950000] IPv6: ADDRCONF(NETDEV_CHANGE): br-lan: link becomes ready\n[ 28.930000] br-lan: port 1(eth0) entered forwarding state</span>\n\n<span style=font-family:Courier New,Courier,monospace;>BusyBox v1.23.2 (2015-05-09 10:22:11 CDT) built-in shell (ash)</span>\n\n<span style=font-family:Courier New,Courier,monospace;>_______ ________ __\n| |.-----.-----.-----.| | | |.----.| |_\n| - || _ | -__| || | | || _|| _|\n|_______|| __|_____|__|__||________||__| |____|\n|__| W I R E L E S S F R E E D O M\n-----------------------------------------------------\nCHAOS CALMER (Bleeding Edge, r45651)\n-----------------------------------------------------\n* 1 1/2 oz Gin Shake with a glassful\n* 1/4 oz Triple Sec of broken ice and pour\n* 3/4 oz Lime Juice unstrained into a goblet.\n* 1 1/2 oz Orange Juice\n* 1 tsp. Grenadine Syrup\n-----------------------------------------------------\nroot@OpenWrt:/#\nroot@OpenWrt:/# passwd\nChanging password for root\nNew password:\nRetype password:\nPassword for root changed by root\nroot@OpenWrt:/#</span>\n55,As a parent, I am somewhat torn regarding 'parental control' of Internet Access where my daughter is concerned. She is 8, so has limited access anyhow, but I would like for that access to be as unrestricted as possible while at the same time avoiding her stumbling any age-inappropriate content, which as we all know can often be only 2 or 3 clicks away.\n\nI have decided on a multipronged approach, with the main home router, a TP Link N600 running OpenWRT Chaos Calmer being the crux of this.\n\n<h3>Time Based Access</h3>\n\nI am using a LuCI application called Access-Control which allows time-based rules block any accesses from any MAC address. It also has the facility to grant 'tickets' for usage within the usually restricted times. Basically, it is a LuCI UI to create;<em>iptables</em>;rules, which look like this:\n\n<span style=font-family:Courier New,Courier,monospace;>zone_wan_dest_REJECT ;all ;-- ;anywhere ; ; ; ; ; ; anywhere ; ; ; ; ; ; MAC 00:04:4B:aa:bb:cc TIME from 00:01:00 to 08:30:00 /* Emily's Tablet Morning */\nzone_wan_dest_REJECT ;all ;-- ;anywhere ; ; ; ; ; ; anywhere ; ; ; ; ; ; MAC 00:04:4B:aa:bb:cc TIME from 19:00:00 to 23:59:00 /* Emily's Tablet Evening */</span>\n\n;\n\n<h3>DNS Filtering</h3>\n\nI use two types of DNS filtering... one is the LuCI App - Adblock. This leverages a number of blacklists which are used with dnsmasq to block requests for known ad and other unwanted content. This has the added benefits of blocking malware, ransomware, phishing sites and a bunch of other stuff you really don't want to be clicking on. I have this configured network-wide as I want to block this for everyone, not just the kids.\n\nThe second is OpenDNS <em>Family Shield</em>. This is basically a pair of DNS resolvers which are tailored to child-friendly content. Setting this up to only affect the kids while allowing the adults free access involves tweaking dnsmasq to add a 'tag' which will get the OpenDNS resolvers, while untagged clients will get the standard DNS resolvers. Once the tag has been set up, the clients you wish to tag need to be given a static DHCP lease, and then the configuration edited to add the tag.\n\nThe configuration on my router looks like this <em>(/etc/config/dhcp)</em>\n\n<span style=font-family:Courier New,Courier,monospace;>config tag 'kids'\n; ; ; ; list dhcp_option '6,208.67.222.123,208.67.220.123'</span>\n\n<span style=font-family:Courier New,Courier,monospace;>config host\n; ; ; ; option name 'emily-tablet'\n; ; ; ; option mac '00:04:4b:aa:bb:cc'\n; ; ; ; option ip '192.168.1.201'\n; ; ; ; option 'tag' kids</span>\n;\n\n<h3>Links:</h3>\n\n<a href=https://openwrt.org/>https://openwrt.org/</a>\n\n<a href=https://github.com/k-szuster/luci-access-control-package>https://github.com/k-szuster/luci-access-control-package</a>\n\n<a href=https://github.com/openwrt/packages/tree/master/net/adblock/files>https://github.com/openwrt/packages/tree/master/net/adblock/files</a>\n\n<a href=https://www.opendns.com/home-internet-security/>https://www.opendns.com/home-internet-security/</a>\n\n;\n56,Attenuators are expensive, especially the fancy calibrated ones, and it seems that they are the only ones available. SMD resistors are cheap, though, and I have SMA connectors, so I thought I would try to make my own. I used the calculator;<a href=http://leleivre.com/rf_pipad.html>here</a>, to come up with a design that used resistors I had, gave an impedance of 50 ohms and an attenuation that was useful (10dB). The schematic for the attenuator is as follows.;\n<img alt=pi attenuator data-align=center data-entity-type=file data-entity-uuid=2ef3598c-a29b-4113-b3fd-0bb34a5e578b src=/sites/default/files/inline-images/Pi-attenuator-pad.jpg />\nThe formulas to calcuate R1, R2 and R3 are:;\n\nR1=R3= Z ( K-1/K+1);\n\nR2= 2 Z ( K / K<sup>2</sup>;- 1);\n\nAnd in my case, the values I got (while selecting for resistors I already had) are R1 = R3 = 100ohm, and R2 = 75ohm.\n\nI built it up on a pair of SMA connectors with a bit of PCB soldered to the bottom to give a bit of rigidity. I will eventually replace this with some heavy copper or tin sheet, which I will be able to fully enclose the device with. This is how it currently looks.\n<img alt=10dB Attenuator data-align=center data-entity-type=file data-entity-uuid=4a243508-de0e-4342-ba87-071657a6cd26 src=/sites/default/files/inline-images/2017-02-12%2016.28.39.jpg />\nI did some measurements on my scope. I took readings at 2MHz and 20MHz and found an attenuation of very close to 10dB in both cases.\n\nAt 2MHz, I read a peak-to-peak voltage of 10.5V when fed direct from my signal generator. With the attentuator inline, I measured a peak-to-peak voltage of 3.28V, which is very nearly 10dB of attenuation.;\n\nDirect reading...\n<img alt=direct reading at 2MHz data-align=center data-entity-type=file data-entity-uuid=76f6133b-e18b-4c5f-af70-e6a5b4c60f11 src=/sites/default/files/inline-images/2017-02-12%2016.25.21.jpg />\nAttenuated reading...\n<img alt=attenuated reading at 2MHz data-align=center data-entity-type=file data-entity-uuid=4cd6d643-ce4f-4f02-ab17-174737011b25 src=/sites/default/files/inline-images/2017-02-12%2016.24.31.jpg />\nAt 20MHz, the figures were very similar... 9.92V p-p direct, and 3.2V attenuated. Slightly less attenuation, but close enough for my purposes.\n\nDirect reading...\n<img alt=direct reading at 20MHz data-align=center data-entity-type=file data-entity-uuid=b7ffa4bf-a9d7-4e7d-96da-cfc01a1828f9 src=/sites/default/files/inline-images/2017-02-12%2016.26.09.jpg />\nAttenuated reading...\n<img alt=attenuated reading at 20MHz data-align=center data-entity-type=file data-entity-uuid=5cb4eb36-f7b8-4298-b365-614f32ad1e66 src=/sites/default/files/inline-images/2017-02-12%2016.26.58.jpg />\nThis attenuator is not designed to handle power, but will be ideal for use with a reflection bridge and Red Pitaya for use as a Vector Network Analyser.\n\n;\n\n;\n\n;\n\n;\n\n;\n57,I came across the highly informative and interesting website of <a href=http://kv4qb.blogspot.ie/2016/05/sna-jr-version-ii-part-1.html>DuWayne KV4QB</a> through Bill Meara M0HBR who has the excellent Ham Radio podcast <a href=http://soldersmoke.blogspot.ie/>Soldersmoke</a>. DuWayne has documented many projects on his site, but one that caught my attention is the SNA Jr II. An SNA is a Scalar Network Analyser, which is a device that has the capability to measure RF amplitude. The SNA Jr II is the second iteration of this project by DuWayne, and is based on a number of enexpensive modular components. The brain of the device is an Arduino Nano, display is courtesy of a small 1.8 TFT, control through a push-button rotary encoder, and signal generation is provided by the Analogue Devices AD9850, and the RF power measurement is done by another Analogue Devices component, the AD8307. The AD8307 can take as input an RF signal up to 13dBm, and as low as -70dBm so has quite a wide range. It first became widely known in the Amateur Radio community when Wes Hayward W7ZOI <a href=http://www.qsl.net/df7tv/pm8307.html>published his design for a power meter</a> using this component. These devices are all available through eBay.\n\nDuWayne has published PCB designs and a Bill of Materials for his SNA Jr II. He also uploaded the Eagle PCB files to OshPark, so ordering a batch is a very simple matter. In my case, though, I thought I could get a cheaper deal by shopping around. I have used Chinese supplier DFRobot for other components in the past, and found them very reliable, and they also do PCB fabrication, so I though I might try them. There was a little stumbling block however... they require Gerber files for PCB manufacture rather than the files created by EagleCAD. EagleCAD has, however, the capability to generate Gerber files using its CAM (Computer Aided Manufacturing) module. Gerber files are basically vector files describing each layer of the manufacturing process... copper tracks, solder masking, silk-screening and drills.;\n\nIt took about 3 weeks for my PCBs to arrive, and on inspection, they look perfect. For less than half the cost of OshPark, including;postage. In the meantime, I had ordered the rest of the passive components from Farnell, who do free shipping to Ireland. I had the main modules already to hand, so was ready to start construction.\n\n\n<img alt=pcbs data-entity-type=file data-entity-uuid=3c720ce4-456d-405d-85df-dd2875e04ef3 src=/sites/default/files/inline-images/fig1-800px.jpg />\n\n<em>PCBs arrived from DFRobot</em>\n\nThe build was relatively quick, since the SMD components are on the larger size (1206), and there is not a huge amount to solder. All in all it took about an hour. I had a aluminium case in the junkbox which I Dremelled to permit access to the screen and drilled to allow the encoder shaft to peek through. Once this was done assembly was straightforward. I had a 7.2V LiPo from an old RC helicopter lying around, so that was co-opted for power.\n\n<img alt=board built up data-entity-type=file data-entity-uuid=c7b4f2fa-5a51-4966-9261-f2274e4f8388 src=/sites/default/files/inline-images/fig2-800px.jpg />\n\n<em>PCB built</em>\n\n<img alt=board fully assembled data-entity-type=file data-entity-uuid=2e2fa145-7fa5-43c5-bb08-4c398890ee7f src=/sites/default/files/inline-images/fig3-800px.jpg />\n\n<em>SNA Jr II Assembled</em>\n\nOnce the software was uploaded to the Arduino, I quickly ran through the functionality. The SNA Jr. II can do the following:\n\n<ol>\n\t<li>\n\tMeasure filter response - a start and end frequency can be set and swept, with the output of the filter measured and a graph of response generated. It is capable of frequencies as high as 40MHz, so is well capable in HF frequencies.\n\t</li>\n\t<li>\n\tMeasure RF power - using a 40dB tap, the power output of a rig can be measured.\n\t</li>\n\t<li>\n\tMeasure antenna response and SWR - using a Return Loss Bridge, the response curve and SWR of an antenna can be plotted, assisting with tuning.\n\t</li>\n\t<li>\n\tMeasure resonance - using an additional coil the SNA Jr. II can behave as a DIP meter, measuring the resonance of a circuit.\n\t</li>\n</ol>\n\n<img alt=menu display data-entity-type=file data-entity-uuid=258185f2-7971-4424-bec5-c66cd94bc866 src=/sites/default/files/inline-images/fig4-400px.jpg /><img alt=sweep display data-entity-type=file data-entity-uuid=a03082ff-5bb0-4130-b2ee-cb5cde0d792a src=/sites/default/files/inline-images/fig5-400px.jpg />\n\n<em>Display functions</em>\n\nI had the parts to build the Return Loss Bridge to hand, so assembled that also and look forward to better weather so I can use it in erecting the 80m loop I have planned.\n\n<img alt=rlb data-entity-type=file data-entity-uuid=799cc1c9-aacc-49db-baec-9c22c014a002 src=/sites/default/files/inline-images/fig6-800px.jpg />\n<em>Return Loss Bridge</em>\n\n<img alt=rlb in  case data-entity-type=file data-entity-uuid=eff9a86c-3db9-4e2d-be31-18dec82f4391 src=/sites/default/files/inline-images/fig7-800px.jpg />\n\n<em>Return Loss Bridge</em>\n\n;\n58,I have been following the <a href=http://www.sparetimegizmos.com/>Sparetime Gizmos</a> Yahoo group since I first heard of the SBC6120, basically a single-board computer reproduction of the DEC PBP8. It was based on the Harris Semiconductors HD6120, which is basically a PDP8 CPU on a single chip, as opposed to multiple flip-chip boards. So, in essence, turning this\n\n<img alt=PDP8 Flipchip boards data-entity-type=file data-entity-uuid=2225d789-4c71-4dd2-99b4-fdb901401cc1 src=/sites/default/files/inline-images/pdp8-boards.jpg />\n\ninto this...\n\n<img alt=HD6120 image data-entity-type=file data-entity-uuid=bf2bbec0-cfb6-4d45-bb4c-4409b1307f8f src=/sites/default/files/inline-images/HD6120.jpg />\n\nHowever, the HD6120 is in very short supply, and expensive, and the Sparetime Gizmos board is out of production, and Bob Anderson has said that he will not be doing any future runs. ;\n\nRecently, there was a bit of activity on the Sparetime Gizmos Yahoo Group when Andrew Bunghan, the administrator of <a href=https://www.retrobrewcomputers.org>RetroBrew Computers</a>;posted an investigation of interest to see how many people might be interested in a partial kit to build a Single Board PDP8, based on a newly fabricated PCB, using a cheaper 2 layer process, and a kit of the harder to acquire silicon. The prices were very reasonable... much less than the original unit, so I immediately signed up. A few months later, I got a follow-up email from Andrew requesting payment if I was still interested. I paid straight away, and within a couple of days had a tracking number, and a further 4 days later, had the package. The contents consisted of the PCB, the HD6120 CPU, some EPROMS and various other glue.\n\n<img alt=SBC6120-RetroBrew Kit data-entity-type=file data-entity-uuid=12aac159-2eeb-4227-9565-ffd841d7cdbe src=/sites/default/files/inline-images/SBC6120-800px.jpg />\n\nThe <a href=https://www.retrobrewcomputers.org/doku.php?id=boards:sbc:sbc6120-rbc-edition:start>project pages</a> include a BOM generator spreadsheet, but the vendor of choice is Mouser, who are unreasonably expensive for shipping to Ireland, so I took the time to generate an equivalent BOM for Farnell, who ship to Ireland free. The component costs are very reasonable at Farnell also, often competing with, and beating the likes of Mouser and Digikey. The Farnell BOM is almost complete, apart from an oscillator, a polyfuse and a couple of connectors. I am making it available for <a href=https://dl.dropboxusercontent.com/u/32770/SBD6120_Farnell_BOM.csv>download here</a>.\n\nI have ordered the BOM, and will be posting a build-log as construction progresses.\n59,Since the <a href=https://gerryk.com/node/52>last post</a>, I had gotten involved in a <a href=https://www.facebook.com/groups/1794230080790075/>Facebook group with a focus on the mcHF transceiver</a>. As well as being a great forum for sharing knowledge and experiences, it gave me the opportunity to get a very nice case in a group buy organised by one of the members. The case is 2-part design, which is easier to work with than the one I bought ;previously. It also comes with buttons, a speaker and very nice machined aluminium knobs.\n\n<img alt=mcHF Case data-entity-type=file data-entity-uuid=943a8d78-a838-439a-ac10-4135b4b32553 src=/sites/default/files/inline-images/2016-11-16%2013.07.10-800.jpg />\n\n<em>The case from the Group Buy</em>\n\n;\n\nThe RD16HHF1s also arrived, so I started out by installing them and biasing. The biasing procedure is well documented on the <a href=https://github.com/df8oe/mchf-github/wiki/Adjustment-and-Configuration-Manual>github site</a>, and involves reading the quiescent current, and then transmitting;an unmodulated carrier, increasing;the bias setting until the current increases by 500mA over the previously noted quiescent current.\n\nOnce this is done, the settings for 5W transmit and full power, which can mean anything from 6 or 7W to 20W depending on band, driver FET and some transformer modifications that are documented on the Yahoo group, are configured in the software. At this point you are ready to transmit.\n\nHowever, I still wanted to fit the case. Mainly for protection, but also because the heavy lumps of aluminium I was using for heak-sinking the regulators and final transistors were putting strain on the legs of the devices, and i really did not want to break them. Fitting the case was relatively straightforward. I first installed the speaker, with a small JST connector allowing it to be disconnected from the RF board if necessary. I then removed some of the panels to allow the boards to be fitted. They fitted easily. Once I had bolted the output transistors and regulators to the inside of the case, which provides heat-sinking, I bolted the small spacers and the RF shield to the UI board, and attached the UI board to the RF board which was in-situ in the case. I then fitted the side-pieces, which have the necessary holes for connectors already cut out. Finally I fitted the top cover, and stumbled on my first gremlin. The key-switches supplied in the kit are too long for the case I was using, which resulted in some of the buttons being activated by the case! I ordered replacements on Farnell's site, which does free next-day-delivery to Ireland. Once these were fitted, the shorter button stems, and the higher activation force (260g) meant that no unwanted activations were caused by the case.\n\n<img alt=RF Shield data-entity-type=file data-entity-uuid=93fc87b3-3132-4d6a-985c-8acd9816a51a src=/sites/default/files/inline-images/2016-11-22%2015.50.12-800.jpg />\n\n<em>Fitting the boards and RF shield</em>\n\n;\n\n<img alt=Side view data-entity-type=file data-entity-uuid=784bdabd-0cf6-4caa-9980-d2d30d98f448 src=/sites/default/files/inline-images/2016-11-16%2019.32.46-800.jpg />\n\n<em>Side view, showing fitted spacers</em>\n\n;\n\n<img alt=Test fit data-entity-type=file data-entity-uuid=0da673a5-dee8-40cc-b90a-0768ffbfe580 src=/sites/default/files/inline-images/2016-11-16%2019.54.56-800.jpg />\n\n<em>Test fit, showing incorrect button stem length problem</em>\n\n;\n\nI had read of an issue with the polyfuse specified in the kit, which being a non-resettable type, could blow leaving the radio inoperative until the fuse was replaced, so I ordered a fuse-holder and some 3A slow-blow fuses to replace the little SMD until. I also ordered a 1024Mbit serial EPROM which is used to store configuration. There is flash storage on the ST Micro CPU, but flash degrades, and I would sooner replace an SOIC-8 unit than a 100pin CPU when the flash dies. I added these and performed a small modification, involving running two bodge-wires from the CPU to SMD pads which enables the touchscreen functionality.\n\n<img alt=touchscreen mod data-entity-type=file data-entity-uuid=80ffa73c-723c-4450-b76f-d3f919c03109 src=/sites/default/files/inline-images/2016-10-29%2014.50.00_0.jpg />\n\n<em>Touchscreen mod and Serial EPROM (seen on top left)</em>\n\n;\n\n<img alt=touchscreen detected data-entity-type=file data-entity-uuid=a321bb9d-1f10-458e-b6e7-6f5c7f59d479 src=/sites/default/files/inline-images/2016-10-29%2015.42.07.jpg />\n\n<em>Settings screen showing Touchscreen Detected</em>\n\n;\n\nOnce this was completed, I updated the software. DF8OE runs a github which has the newest revision of both the software and documentation. The newer software includes a bootloader that allows flashing direct from USB flash drive rather than having to plug the radio into a computer. So much more convenient. The newer firmware also adds functionality such as FreeDV and a more useable spectrum view. The software is in heavy development so updates are frequent and sometimes quite substantial. This makes the USB update feature very useful indeed.\n\nI needed a microphone to use with the radio, and having acquired a nice little unit at a recent radio rally, opened it up to rewire it to work with the mcHF. This was just a matter of swapping the leads around, as the radio can work with either dynamic or electret capsules. In this case, the capsules in the microphone is an electret type, which requires a 5V bias voltage to operate. This is enabled by soldering a 680ohm resistor to position R6 on the main board. I had one of these to hand, and fitting it was a matter of minutes... a testament to the design of both the case and the 2-part board layout. When I reassembled the radio, added power and plugged it into a dummy load to try a test transmission, I came across another issue. Distortion, and lots of it. After a bit of analysis, I determined that the compression and mic-gain settings were far too high. Reducing these brought the transmitted audio into spec, so I did some tests to determine what power I was getting on each band. On 80, 40, 30 and 20m, at full power, the mcHF is putting out just over 10W, on the remaining bands, the power decreases slightly to give about 8W on 10M.\n\n<img alt=microphone bias enable data-entity-type=file data-entity-uuid=518fad89-255b-4883-8bca-f3a099dbee5f src=/sites/default/files/inline-images/2016-10-29%2014.49.55.jpg />\n\n<i>Addition of 680ohm resistor to enable microphone bias voltage</i>\n\n;\n\nUsing my Red Pitaya, I noted a little oscillation when using the 'tune' functionality. This is visible as harmonic content where there should be a single carrier. Winding down the power settings to about 4W while using the 'tune' feature reduces this distortion to almost nothing, but many people on the forums have demonstrated that the pin-diode switching allows RF feedback which causes distortion. I have purchased an Omron relay with which I will replace the diode switching to completely eliminate the feedback and distortion. For now, though, it is well within acceptable parameters, being 70dB down on the fundamental.\n\nSome forum users have done various other modifications which I may try in the future. One has added lighting in the form of lit buttons. I think I may just add some LEDs under the case top, which will show through the transclucent rubber buttons that came with the case. Others have modified the output transformer and driver transistors to give higher power levels, up to 20W. I may also try this in the future, but would like to operate the radio as it stands for a while before I start 'enhancing' it.\n\nAll in all, the entire experience was both enjoyable and educational. The kit as provided by Chris M0NKA is of excellent quality and design, but the very active community around it ensures that there are continued developments and design improvements fed back into the project. In fact, the boards are now at Rev. 0.6, where the kit I started out at are Rev. 0.5. The newer version includes a new preamp. design which reduces possible distortion levels. This can be added to the 0.5 board quite easily also.\n60,I recently bought a new signal generator, the Feeltech FY3024. I chose this unit after a good amount of research on various Ham Radio forums, and the ever-useful EEVBlog. The consensus is that of the various Chinese function generators, the FY3024 is the best combination of cost, features and implementation. There are others, but they fall short, often on the quality of output, which is pretty important in a signal generator.\n\nOne feature I was looking forward to using is the Amplitude Modulation feature, but when I attempted to use it, I discovered it is basically a static waveform, with a 100KHz carrier modulated by a 1KHz audio frequency signal. Pretty much useless in an RF environment. However, the FY3024 has 2 independent channels, both of which are capable of generating signals from 0 - 24MHz, so I though if I was to build an outboard Amplitude Modulator, I could use one channel as the carrier and the other as the modulation signal, giving me the desired Amplitude Modulated signal at the output.\n\nI used a design I found at this site, which happily used components I had to hand in the parts-box. Some soldering later and I have something to test.\n\nI applied a 1MHz signal to the carrier-in port, and a 1KHz signal to the audio-in port. I connected the output to the scope, terminated with 50ohms to match the AM output impedance.\n\n;\n61,I am a member of a group on Facebook that shares and discusses antenna designs, usually of a portable nature. Recently the topic of the WonderWand WonderLoop antenna came up, particularly how expensive it is relative to its apparent complexity. A number of members had posted pictures of a torn-down control box, and it really seemed to contain little more than a transformer wound on a mix-6 toroid and a variable capacitor.;\n\nThe general design is a wire loop, connected to 2 screw-terminals on the top of a control box. The control box has a knob to adjust the variable capacitor, and a PL259 to attach to a radio. The positioning of the PL259 indicates that this is intended primarily for use with the well-known all-band, all-mode Yaesu FT817 QRP Portable radio.\n\nI thought it might make a nice Saturday morning project to try to replicate it, at least to prototype level, to see if it would be worthwhile to make a more productified version. I started out by digging in the junkbox to see if I had the necessary bits. I was going to build this on a piece of scrap PCB material, and had a FT130-6 toroid and a dual-gang 250pF polyvaricon I could use with it. Since I was only going to put 5W into it, I figured the PV cap would be sufficient - at least for a proof-of-concept.\n\nExamining the pictures provided by the Facebook group members, and various other sources, I came up with the following schematic for the control-box. The toroid has 19 turns, and it tapped at the third.\n<img alt=schematic data-align=center data-entity-type=file data-entity-uuid=018a492d-c4b0-48a6-8e25-98d38fa25c43 src=/sites/default/files/inline-images/2017-03-27%2014.58.08-1-750.jpg />\nI started out by doing a rough-and-ready measurement of the piece of PCB. Then, using a dremel, I etched away some copper to make two lands... one for the hot side and one for the groundplane.\n<img alt=pcb sketch data-align=center data-entity-type=file data-entity-uuid=5496383a-de78-4bea-912b-54ebcf7b0933 src=/sites/default/files/inline-images/2017-03-26%2009.26.07-750.jpg />\n;\n<img alt=placement data-align=center data-entity-type=file data-entity-uuid=41d9510c-f8b7-49ae-b0fe-0b5635f8843b src=/sites/default/files/inline-images/2017-03-26%2009.55.27-750.jpg />\nI ended up etching out a bit more copper to ensure that stray capacitance was kept to a minimum. Once this;was done, I drilled holes for the capacitor and SO239 connector and fitted them. I connected the dual-gangs of the capacitor in parallel, giving a maximum capacitance of ~500pF, and a minimum of ~50pF. I also soldered the trimmer tabs which would give a few extra pF of wiggle room.\n\nI wound the toroid and fitted it also, with the ends of the coil going from hot to earth, and the 3-turn tap going to the centre conductor of the SO239.\n<img alt=front &amp; back data-align=center data-entity-type=file data-entity-uuid=93fb7ee7-d592-4efa-9ccb-7b6e098b31f0 src=/sites/default/files/inline-images/loop-front-back-750.jpg />\n;\n\nI finally had another dig in the junkbox for some sturdy copper wire. I found a length of 1.5mm single-strand that had been cannibalised from a length of domestick mains wiring in the past. It held shape quite well, even in a breeze, as it turned out. I cut sufficient to make a loop of ~24 diameter and soldered the ends to the hot and earth of the PCB.\n<img alt=completed data-align=center data-entity-type=file data-entity-uuid=afaccfbc-c6c8-4190-b33e-1807635c70b0 src=/sites/default/files/inline-images/2017-03-26%2011.56.11-750.jpg />\n;\n\nI purposely placed the SO239 in such a way as it could be connected directly to the back of my FT817, similarly to the commercially produced antenna. I used a barrel adapter to make this connection. I initially tuned for most noise, and then fine-tuned with a 1W AM carrier and the SWR meter on the FT817. The exposed wiring made me realise that even at 1W, the voltages generated by this sort of antenna are not to be taken lightly. I got quite a nip on more than one occasion.\n\nThere was a contest on all bands that day, so I had plenty of variety to listen to, but contest situations aren't the best for testing a new antenna for sensitivity, since everyone seems to dust off their Legal Limit Linears and beams. Signals were very strong across the board. I tuned to 18m, where things were a little quieter, but the little loop performed well here too. Certainly within a couple of S-points of my main antenna, an Off-Centre Dipole at about 35'. I did take note of the directional capabilities of the loop too, with signals strongly nulled when broadside to the antenna.\n<img alt=using the loop antenna with ft817 data-align=center data-entity-type=file data-entity-uuid=324d760f-f741-4352-97ae-766b336d4a4a src=/sites/default/files/inline-images/2017-03-26%2012.38.52-750.jpg />\nTuning was very sharp, especially on the lower bands, with the usable bandwidth often being less than 6KHz before the SWR rose to 3:1 or more.\n\nI did attempt a number of calls, but had no replies. I suspect nobody contesting had any interest in wasting time digging a tiny QRP signal out of the noise. I was encouraged enough by this initial experiment. however, that I will build a more substantial magnetic loop in the near future. The ease of setting up alone will make it a worthwhile addition to the shack.\n\n;\n\n;\n\n;\n\n;\n62,Recently, one of the club members, Steve EI5DD has been showing a lot of interest in digital voice modes. So much interest, in fact, that he did up an introductory document outlining the details of and differences between the main modes in use in the Amateur Radio Community. These are DStar (the oldest, and most commonly on ICOM radios), Yaesu C4FM/System Fusion, and DMR. The latter, DMR, was originally for use in the Commercial market, but more recently thanks to very inexpensive transceivers from the likes of Tytera, interest has grown very rapidly in the Amateur Community.\n\nOne of my main interests in Ham Radio is building stuff. Sure, you can buy off-the-shelf devices to do whatever you need, but to me, the challenge and education inherent in building is a big bonus. Also, it has been said that time spent melting solder is not deducted from out time allotted on earth. Among the off-the-shelf offerings are SharkRF Openspot, DVMini and DVMega. DVMega also do boards that sit on top of an Arduino, and can be connected to a Raspberry Pi to handle getting traffic onto and off of the Internet. There are a number of options available for connecting to the various DV networks, but I decided on MMDVMHost, since it is Linux based and doesn't require a GUI.\n\nThe main DV networks include Brandmeister and DMR-MARC for DMR, XLX , DPlus which are DStar networks and YSFReflector and Wires-X which are Yaesu Fusion networks. There is some interoperability between networks, with reflectors and talkgroups often connecting to one or more networks, and even across network types.\nBrandmeister is popular in Europe, so I decided that I would use this for DMR, and YSFReflector for Fusion.\n\nI ordered the Dual-band DVMega board, which supports either 2m or 70cm, but not at the same time, or cross-band. This sits on top of an Arduino. I used a Mega 2560, since I had one to hand. The Arduino needs to be flashed 63,Following on from <a href=https://gerryk.com/node/58>here</a>. Farnell were typically swift with their turnaround wit most of the components arriving within a couple of days. I was not so timely, in either building out the board or writing it up, but better late than never... I had also ordered a CF to IDE interface. There is an IDE interface on the SBC board, but these days, it's hard to find an IDE drive, and who wants a spinning platter with all of its attendant power consumption issues when a little bit of flash memory would do just as;well. This took its time arriving, so I did as much soldering as I could in the meantime. I had ordered sockets for all of the ICs, so I started out by soldering these in place. I then followed with the various capacitors, resistors, jumpers, fuses and the two crystal oscillators. Compared to many of the projects I have worked on, which have been primarily SMD, the size and spacing of the through-hole components was positively roomy. This made for a quick and problem-free build. The final steps were to install the status LEDs, power connector and reset button, and we are ready to go, from a hardware perspective at least.\n\n<img alt=SBC6120 board built up data-entity-type=file data-entity-uuid=eb4ddbbc-0b93-4092-aec4-c32bf8ba2b7b src=/sites/default/files/inline-images/2017-03-28%2011.18.32-1.jpg />\n\nI have a 1GB Compact Flash card which will be my storage device. This can be partitioned into multiple disks using the SBC6120 Monitor Program. The Monitor Program is executed on boot, and once fully booted, the system drops you to a console prompt where monitor commands may be executed. Full documentation on teh Monitor Program can be read in Bob Armstrong's original SBC6120 documentation.\n\nPartitioning the CF card is done using the;<em>df</em>;command in the Monitor.;<em>df </em>stands for Disk Format, and takes 1 parameter... the disk partition to format.\n\nFrom the SBC6120 manual, we can see the following command definition:\n\n<em><strong>5.8.3 RF (Format RAM Disk) and DF (Format IDE Disk)</strong>\n.\n.\n.\nFormat\n&gt;RF u ⇒ format RAM disk unit u\n&gt;DF pppp ⇒ format IDE disk partition pppp</em>\n\nEach disk partition is 2,097,152 bytes in size, which means that on my 1GB CF Card, I could have a maximum of around 50;partitions. This is probably far more that would be necessary to store every bit of PDP8 software and data out there... we shall see. There is a whole lot of PDP8 software <a href=http://www.pdp8.net/images/index.shtml>here</a>, mostly as either tape or disk image format. However, for my purposes at the moment, the OS/8 and Games images <a href=https://www.grc.com/pdp-8/os8utils-sbc.htm>provided by Steve Gibson</a> are enough to get started.\n\n;\n\n;\n64,<pre>\n\n\n$ ssh root@192.168.1.1\nroot@192.168.1.1's password: \n\nBusyBox v1.23.2 (2016-01-02 18:01:44 CET) built-in shell (ash)\n\n  _______                     ________        __\n |       |.-----.-----.-----.|  |  |  |.----.|  |_\n |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n |_______||   __|_____|__|__||________||__|  |____|\n          |__| W I R E L E S S   F R E E D O M\n -----------------------------------------------------\n CHAOS CALMER (15.05.1, r48532)\n -----------------------------------------------------\n  * 1 1/2 oz Gin            Shake with a glassful\n  * 1/4 oz Triple Sec       of broken ice and pour\n  * 3/4 oz Lime Juice       unstrained into a goblet.\n  * 1 1/2 oz Orange Juice\n  * 1 tsp. Grenadine Syrup\n -----------------------------------------------------\nroot@main-rt:~# vim /etc/config/dnscrypt-proxy \nroot@main-rt:~# /etc/init.d/dnscrypt-proxy enable\nroot@main-rt:~# /etc/init.d/dnscrypt-proxy start\nroot@main-rt:~# vim /etc/config/dhcp \nroot@main-rt:~# /etc/init.d/dnsmasq restart\nroot@main-rt:~# logread | grep -n using nameserver\n45:Tue Aug  8 11:11:45 2017 daemon.info dnsmasq[6006]: using nameserver 8.8.8.8#53\n46:Tue Aug  8 11:11:45 2017 daemon.info dnsmasq[6006]: using nameserver 159.134.0.1#53\n47:Tue Aug  8 11:11:45 2017 daemon.info dnsmasq[6006]: using nameserver 159.134.0.2#53\n159:Tue Aug  8 12:04:32 2017 daemon.info dnsmasq[19353]: using nameserver 208.67.222.222#53 for domain pool.ntp.org\n160:Tue Aug  8 12:04:32 2017 daemon.info dnsmasq[19353]: using nameserver 127.0.0.1#5353\nroot@main-rt:~# logread | grep Proxying from\nTue Aug  8 11:19:05 2017 daemon.notice dnscrypt-proxy[15984]: Proxying from 127.0.0.1:5353 to 208.67.220.220:443\nroot@main-rt:~# \n</pre>\n65,I have previously talked about the highly informative blog run by <a href=http://kv4qb.blogspot.ie/>DuWayne Schmidlkofer KV4QB</a>. He often publishes board designs which he is happy for people do reproduce using their PCB house of choice. In the past I have built his <a href=https://gerryk.com/node/57>Scalar Network Analyser</a>, which has proved to be invaluable when tuning filters and building antennas. He has another project that I thought would be a very useful tool to have for any radio amateur interested in building their own rigs. This is his take on a receiver;test oscillator. The idea behind this is that it generates a signal at a known level, or often a number of levels, so that a receiver may be aligned. He has taken inspiration from both Elecraft and NorCal projects, and the result is his S9 Signal Generator.\n\nAs with most of KV4QB's projects, he doesn't provide a kit or boards, just design files, so my first task was to download the provided EagleCAD files and convert them to Gerber format. I use Gerbers because they are accepted by many of the Chinese PCB houses, who tend to be substantially cheaper than the US based houses like OshPark. I have used SeeedStudio and DFRobot in the past, but decided to try a newcomer, PCBGogo.;\n\nThe conversion process involved opening the EagleCAD file using EagleCAD, and then using the CAM (Computer Aided Manufacturing) tool to generate layer files which represent each stage of the manufacturing process. These layers define board dimension, copper tracks, solder-masking, pad-tinning, silk-screened legends, drills and plate-through &amp; vias. Once these have been generated - I used the;<em>gerb274x</em> CAM tool for the layers, and the <em>Excellon</em> tool for the drills - the files are combined into a single;<em>zip</em>;file and uplloaded to the PCB order. When ordering, it is posible to select a number of options: board thickness, solder-mask colour, substrate type, controlled-impedance. In my case, I selected a red solder mask and 1.6mm FR4, both of which were no-cost options. About a day after sending the order I got an email notifying me that the designs had passed their design-rule acceptance, basically a statement they the boards make sense at a mechanical level - there are no holes outside the board, and so forth. About two weeks later, I received my order.\n\n<img alt=PCBs data-entity-type=file data-entity-uuid=0ad8a765-5704-4f73-9bc3-c71fa71b3587 src=/sites/default/files/inline-images/1-800px.jpg />\n\nWhile waiting for the boards to arrive, I used DuWayne's schematic to create an order from Farnell for the parts I didn't have to hand. I often order SMDs in 10x rather than one-off quantities, since the unit cost is much lower like this, and you get a bunch of components to bulk out the parts-box. The parts arrived in due course, actually the following day, with Farnell's usual free shipping.\n\nMy first task was to find a suitable enclosure... the boards are designed to fit in an Altoids tin, so I rooted out one I had used for a previous project. It needed a little tidying up, but once that was done looked prefect. I marked out and drilled the various holes I would use for mounting and passing the SMA RF port through.\n\n<img alt=test fit data-entity-type=file data-entity-uuid=6a20b355-9a9b-41b1-b937-86243f9c41ea src=/sites/default/files/inline-images/2-800px.jpg />\n\nSoldering the components was a very quick and painless process. DuWayne generally specifies larger SMD components. In this case, 1206 size, which are about 3.5mm x 1.6mm, so by SMD standards, huge. Where through-hole components are used, rather than having holes, the PCB has larger pads, allowing me to bend the leads at a right-angle and solder them in an SMD manner also.\n\n<img alt=fully built data-entity-type=file data-entity-uuid=6378be3d-8e72-4a0e-beb5-99e8223ab058 src=/sites/default/files/inline-images/8-800px.JPG />\n\nThe circuit is a relatively simple one... it has 4 crystals, or at least provision for 4... I only had one to hand, but an order with GQRP will soon rectify that. The crystals feed to a selector, which is basically a dual-row header which uses a jumper to select the crystal. This then feeds a simple oscillator based on a 2N3904 NPN, which in turn feeds to two switchable selectable pi-attenuators, with the attenuation levels being -14dB and -20dB respectively. These are also selected or de-selected through the use of jumpers. The design should generate signals at around S0 and S9 with -14dB and -20dB as intermediate levels in between.\n\nWhen I initially finished the build, I plugged it into my Spectrum Analyser, and where I was expecting a spike saw nothing. I visually inspected the board, and being a simple circuit was able to verify it pretty quickly. The only other possibilities were the transistor and diode which when tested with a multimeter also proved OK. So these were not the;only possible cuplrits... maybe the crystal was faulty. I had another crystal I could use, a <a href=https://en.wikipedia.org/wiki/Colorburst#Crystals>colour-burst crystal I</a> had received from <a href=http://soldersmoke.blogspot.ie/>Bill M0HBR</a> a few years back. It was currently doing duty in a <a href=http://soldersmoke.blogspot.ie/2011/03/return-of-michigan-mighty-mite.html>Michigan Mighty-Mite 80m CW transmitter</a>, but a few seconds with a soldering iron soon liberated it. I soldered it in place and at last had my signal visible on the Spectrum Analyser. The 'S9' signal shows up at ~-65dBm, which is about what is expected. I then plugged it into the antenna port of my Icom IC7300 to see what it made of it. Sure enough a nice clean signal at about 3.59MHz at about S8. With both attenuators in place, it showed an S0 signal - perfect.\n\n<img alt=SA data-entity-type=file data-entity-uuid=0b97b4ee-7c8c-44f4-8d8b-fafd82c1224d src=/sites/default/files/inline-images/7-800px.JPG />\n\n<h5>Signal on Spectrum Analyser</h5>\n\n<h5><img alt=S9 data-entity-type=file data-entity-uuid=81c3757a-6df8-42f2-bf47-cae2d2db1d9a src=/sites/default/files/inline-images/4-800px.JPG /></h5>\n\n<h5>S8 signal on ICOM IC7300</h5>\n\n<h5><img alt=S0 signal data-entity-type=file data-entity-uuid=74c8766c-94d7-4b6d-a259-b539ab5f3d0e src=/sites/default/files/inline-images/5-800px.JPG /></h5>\n\n<h5>S8 signal on ICOM IC7300</h5>\n\nMany thanks to DuWayne for yet another enjoyable and useful project.\n\n;\n\n<strong>Farnell Bill of Materials</strong>\n\n<h4>;</h4>\n\n<h4><strong>\n<style type=text/css><!--td {border: 1px solid #ccc;}br {mso-data-placement:same-cell;}-->\n</style>\n</strong></h4>\n\n<table border=1 cellpadding=0 cellspacing=0 dir=ltr xmlns=http://www.w3.org/1999/xhtml>\n\t<colgroup>\n\t\t<col width=100 />\n\t\t<col width=100 />\n\t\t<col width=100 />\n\t\t<col width=100 />\n\t</colgroup>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R1&quot;}>R1</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;3K9&quot;}>3K9</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1100206}><a href=http://ie.farnell.com/welwyn/wcr1206-3k9fi/res-thick-film-3k9-1-0-25w-1206/dp/1100206 target=_blank>1100206</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R2&quot;}>R2</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;10K&quot;}>10K</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2073878}><a href=http://ie.farnell.com/multicomp/mcmr12x1002ftl/res-ceramic-10k-1-0-25w-1206/dp/2073878 target=_blank>2073878</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R3&quot;}>R3</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:15}>15</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2078989}><a href=http://ie.farnell.com/welwyn/asc1206-15rft5/res-thick-film-15r-1-0-25w-1206/dp/2078989 target=_blank>2078989</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R4&quot;}>R4</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;20K&quot;}>20K</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2057774}><a href=http://ie.farnell.com/panasonic-electronic-components/erj8enf2002v/res-thick-film-20k-1-0-25w-1206/dp/2057774 target=_blank>2057774</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R5&quot;}>R5</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:470}>470</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:9240489}><a href=http://ie.farnell.com/yageo-phycomp/rc1206jr-07470rl/res-thick-film-470r-5-0-25w-1206/dp/9240489 target=_blank>9240489</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R6&quot;}>R6</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:56}>56</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2057808}><a href=http://ie.farnell.com/panasonic-electronic-components/erj8geyj560v/res-thick-film-56r-5-0-25w-1206/dp/2057808 target=_blank>2057808</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R7, R9&quot;}>R7, R9</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:62}>62</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2307801}><a href=http://ie.farnell.com/panasonic-electronic-components/erj8enf62r0v/res-thick-film-62r-1-0-25w-1206/dp/2307801 target=_blank>2307801</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R8&quot;}>R8</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:240}>240</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1100174}><a href=http://ie.farnell.com/welwyn/wcr1206-240rfi/res-thick-film-240r-1-0-25w-1206/dp/1100174 target=_blank>1100174</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R10&quot;}>R10</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:120}>120</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1576617}><a href=http://ie.farnell.com/multicomp/mchp06w2f1200t5e/res-thick-film-120r-1-0-5w-1206/dp/1576617 target=_blank>1576617</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;R11, R12&quot;}>R11, R12</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:75}>75</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2057810}><a href=http://ie.farnell.com/panasonic-electronic-components/erj8geyj750v/res-thick-film-75r-5-0-25w-1206/dp/2057810 target=_blank>2057810</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>;</td>\n\t\t\t<td>;</td>\n\t\t\t<td>;</td>\n\t\t\t<td>;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;C1&quot;}>C1</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;33pF&quot;}>33pF</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2320894}><a href=http://ie.farnell.com/multicomp/mc1206n330j500ct/cap-mlcc-c0g-np0-33pf-50v-1206/dp/2320894 target=_blank>2320894</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;C6, C7, C8&quot;}>C6, C7, C8</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;0.01uF&quot;}>0.01uF</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1759350}><a href=http://ie.farnell.com/multicomp/mc1206b103k500ct/cap-mlcc-x7r-10nf-50v-1206/dp/1759350 target=_blank>1759350</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;C5, C9, C10&quot;}>C5, C9, C10</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;47pF&quot;}>47pF</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2295749}><a href=http://ie.farnell.com/nte-electronics/2n3904/rf-transistor-npn-40v-250mhz/dp/2295749 target=_blank>2295749</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;C4 &quot;}>C4</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;10pF&quot;}>10pF</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1206}>1206</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2320889}><a href=http://ie.farnell.com/multicomp/mc1206n100j500ct/cap-mlcc-c0g-np0-10pf-50v-1206/dp/2320889 target=_blank>2320889</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;D1&quot;}>D1</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;1N4148&quot;}>1N4148</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot; &quot;}>;</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:1621821}><a href=http://ie.farnell.com/multicomp/1n4148w/diode-small-signal-75v-sod-123f/dp/1621821 target=_blank>1621821</a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;Q1&quot;}>Q1</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:2,&quot;2&quot;:&quot;2N3904&quot;}>2N3904</td>\n\t\t\t<td>;</td>\n\t\t\t<td data-sheets-value={&quot;1&quot;:3,&quot;3&quot;:2295749}><a href=http://ie.farnell.com/nte-electronics/2n3904/rf-transistor-npn-40v-250mhz/dp/2295749 target=_blank>2295749</a></td>\n\t\t</tr>\n\t</tbody>\n</table>\n66,Letsencrypt is a free TLS certificate provider. Since launch, they have revolutionised security for small and personal websites by not just making SSL certificates available for no fee, but also adding their CA cert into all the major browser cert. stores.;\n67,So, when you get a Spectrum Analyser, what do you do? Analyse spectra, of course.\n\nI have a number of HTs, among them, a Baofeng B5. Baofeng HTs are a little looked-down upon in the Ham community, which may to some extent be justified. They do offer a cheap route to getting on the air, but with questionable spectral purity, or so reports would have it.\n\nNow that I have a recently acquired Spectrum Analyser, a HP 8591A, I can do some testing of my own, rather than taking hearsay at face-value.\n\nThe HTs on the bench for this test are...\n\nBaofeng UV-B5\n\nWouxun UV-1DP\n\nICOM IC E90\n\nICOM V80E\n\nYaesu FT2D\n\nMy testing setup and methodology will be to put a 5W signal into a 50ohm dummy-load with a 40dB test-port which will be connected to the input of the spectrum analyser. In order to give a reasonable window onto the spectrum, the view will be centred on the 2nd harmonic of the transmitted signal, and the span set to 2x the 2nd harmonic, so for a 440MHz signal, the centre will be 880-MHz, and the spam set to 1600MHz.\n68,I occasionally use Bittrex to trade cryptos and were it not for my password manager, I would probably have fallen victim to a pretty subtle phishing scam.. The scam relies on the fact that in the huge unicode character set, there are many glyphs that look very like standard the roman characters we are used to as far as URLs are concerned. Many browsers do not make any visual distinction either, so if a letter looks like an 'A' for example, only some digging will reveal that it is in fact another character entirely.\n\nCompare this, the legitimate URL...\n\n<img alt=legit url data-entity-type=file data-entity-uuid=3590823d-32ac-4b62-900a-6333c0a6ef3c src=/sites/default/files/inline-images/2017-10-10%20%285%29.png />\n\nWith this, the fake...\n\n<img alt=fake url data-entity-type=file data-entity-uuid=be3d7884-047b-4a81-81ed-3af215aabdad src=/sites/default/files/inline-images/2017-10-10%20%284%29.png />\n\nAll looks OK at a glance, right? Even has a green 'site secure' SSL notification. However, notice what looks like a;little comma under the 'r'? This is an entirely different character, which means that we are not at bittrex.com, we are at a phishing site. A pretty clever one too, as it turns out.\n\nI didn't actually notice this at first. I use a password manager, Lastpass, which has a browser plugin that fills in credentials on recognised sites. In this instance, though, it failed to fill anything, which got me thinking.\n\nI opened the 'site information' window and saw the following cookie...\n\n<img alt=cookie data-entity-type=file data-entity-uuid=bb761768-e7a8-46cc-a05f-f7b7f6cbe488 src=/sites/default/files/inline-images/2017-10-10%20%287%29.png />\n\nI then remembered <a href=https://www.theguardian.com/technology/2017/apr/19/phishing-url-trick-hackers>reading about Unicode URL hacks</a>, and looked closer at;the;URL only to notice the little comma. xn--bittex-eib.com is rendered as;bittŗex.com by the browser.\n\nIt seems that Google is returning an ad for this URL in its results for 'bittrex'.\n\n<img alt=google results data-entity-type=file data-entity-uuid=d82bc09f-3a35-4031-a4ce-24876f2298fa src=/sites/default/files/inline-images/2017-10-10%20%2810%29.png />\n\nThankfully this is as far as the scam got with me, but others may be less lucky.\n\nPassword managers and 2FA are a good line of defense against this sort of attack.\n\nA Unicode encoder can be seen here:;https://www.punycoder.com/\n\nThe registrar, namecheap.com and bittrex.com have both been notified since namecheap are identified in the whois record.\n;\n\n<pre>\nDomain name: XN--BITTEX-EIB.COM\nRegistry Domain ID: 2172486546_DOMAIN_COM-VRSN\nRegistrar WHOIS Server: whois.namecheap.com\nRegistrar URL: http://www.namecheap.com\nUpdated Date: 2017-10-09T19:56:44.00Z\nCreation Date: 2017-10-09T19:17:53.00Z\nRegistrar Registration Expiration Date: 2018-10-09T19:17:53.00Z\nRegistrar: NAMECHEAP INC\nRegistrar IANA ID: 1068\nRegistrar Abuse Contact Email: <a href=http://reversewhois.domaintools.com/?email=44c91f4f81df8526bd460ad6db4a95fe title=Search for this email address><img align=middle border=0 src=http://source.domaintools.com/email.pgif?md5=44c91f4f81df8526bd460ad6db4a95fe&amp;face=arial&amp;size=9&amp;color=000000&amp;bgcolor=FFFFFF&amp;face=arial&amp;size=9&amp;color=0000FF&amp;bgcolor=FFFFFF&amp;format[]=transparent&amp;format[]=transparent /></a>\nRegistrar Abuse Contact Phone: +1.6613102107\nReseller: NAMECHEAP INC\nDomain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\nDomain Status: addPeriod https://icann.org/epp#addPeriod\nRegistry Registrant ID: \nRegistrant Name: WhoisGuard Protected\nRegistrant Organization: WhoisGuard, Inc.\nRegistrant Street: P.O. Box 0823-03411 \nRegistrant City: Panama\nRegistrant State/Province: Panama\nRegistrant Postal Code: \nRegistrant Country: PA\nRegistrant Phone: +507.8365503\nRegistrant Phone Ext: \nRegistrant Fax: +51.17057182\nRegistrant Fax Ext: \nRegistrant Email: 3fd40fbd82894113a145535926a6c47f.protect@whoisguard.com\nRegistry Admin ID: \nAdmin Name: WhoisGuard Protected\nAdmin Organization: WhoisGuard, Inc.\nAdmin Street: P.O. Box 0823-03411 \nAdmin City: Panama\nAdmin State/Province: Panama\nAdmin Postal Code: \nAdmin Country: PA\nAdmin Phone: +507.8365503\nAdmin Phone Ext: \nAdmin Fax: +51.17057182\nAdmin Fax Ext: \nAdmin Email: 3fd40fbd82894113a145535926a6c47f.protect@whoisguard.com\nRegistry Tech ID: \nTech Name: WhoisGuard Protected\nTech Organization: WhoisGuard, Inc.\nTech Street: P.O. Box 0823-03411 \nTech City: Panama\nTech State/Province: Panama\nTech Postal Code: \nTech Country: PA\nTech Phone: +507.8365503\nTech Phone Ext: \nTech Fax: +51.17057182\nTech Fax Ext: \nTech Email: 3fd40fbd82894113a145535926a6c47f.protect@whoisguard.com\nName Server: rs60a.registrar-servers.com\nName Server: rs60b.registrar-servers.com\nDNSSEC: unsigned\nURL of the ICANN WHOIS Data Problem Reporting System: http://wdprs.internic.net/\n\n</pre>\n\n;\n\n;\n\nAs of October 13th, the domain has been cancelled and the account suspended. Thanks Namecheap!\n\n;\n\n;\n\n;\n\n;\n\n;\n\n;\n\n;\n\n;\n\n;\n\n;\n69,I recently augmented my home-server with a bunch of additional storage. Since I have all this space, and a few Raspberry Pis lying around gathering dust, I though I might try running a Bitcoin Full Node at home. This has a couple of positive effects... it strengthens the overall bitcoin network, and it gives me a trusted verification for any inbound transactions.\n\nI first created an NFS share on my home server... I allocated a 250GB LVM volume with an EXT4 filesystem to it, added it to /etc/exports and restarted nfs service. It was necessary to ensure that the user that owned the NFS share on the server had the same UID as the owner on the Pi. In this case, 101 for both.\n\nI then installed the minimal Rasbian image onto a surplus 8GB MicroSD card and booted it up. I then followed these steps to install and build the bitcoin client...\n\n<strong>1. Install prerequisites</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>sudo apt install build-essential autoconf libssl-dev libboost-dev libboost-chrono-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libtool;libevent-dev</span>\n;\n\n<strong>2. Get bitcoin source (I got v0.15 which was the most recent 'stable', I would recommend getting whatever the most recent numbered release is)</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>git clone -b 0.15 https://github.com/bitcoin/bitcoin.git</span>\n;\n\n<strong>3. Build - the 'make' will take some time</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>cd bitcoin/\n./autogen.sh;\n./configure CPPFLAGS=-I/usr/local/BerkeleyDB.4.8/include -O2 LDFLAGS=-L/usr/local/BerkeleyDB.4.8/lib --disable-wallet\nmake\nsudo make install</span>\n;\n\n<strong>4. Enable ssh (this is specific to newer Rasbian releases)</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>sudo touch /boot/ssh</span>\n;\n\n<strong>5. Add NFS share to fstab - in my case, my server is called 'erdos' and the share is located at /exports/blockchain... yours will;differ</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo vi /etc/fstab</span>\n\nPaste the following - yours may vary\n\n<span style=font-family: &quot;Courier New&quot;, Courier, monospace;>erdos:/exports/blockchain ; /home/pi/.bitcoin ; nfs ; defaults ;0 0</span>\n\nMount the filesystem...\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo mount -a</span>\n;\n\n<strong>6. Create systemd service file</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>$ sudo vi /etc/systemd/system/bitcoind.service</span>\n\nPaste the following - again, yours may vary\n\n<span style=font-family:Courier New,Courier,monospace;>[Unit]\nDescription=Bitcoin daemon serivce\nAfter=network.target</span>\n\n<span style=font-family:Courier New,Courier,monospace;>[Service]\nType=simple\nUser=pi\nExecStart=/usr/local/bin/bitcoind</span>\n\n<span style=font-family:Courier New,Courier,monospace;>[Install]\nWantedBy=multi-user.target</span>\n;\n\n<strong>7. Start and enable bitcoind service</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>pi@bitcoin:~/bitcoin $ sudo systemctl start bitcoind\npi@bitcoin:~/bitcoin $ sudo systemctl status bitcoind\n● bitcoind.service - Bitcoin daemon serivce\n; ;Loaded: loaded (/etc/systemd/system/bitcoind.service; disabled; vendor preset: enabled)\n; ;Active: active (running) since Mon 2017-10-23 12:07:50 IST; 5s ago\n;Main PID: 8717 (bitcoind)\n; ;CGroup: /system.slice/bitcoind.service\n; ; ; ; ; ;└─8717 /usr/local/bin/bitcoind</span>\n\n<span style=font-family:Courier New,Courier,monospace;>Oct 23 12:07:50 bitcoin systemd[1]: Started Bitcoin daemon serivce.\npi@bitcoin:~/bitcoin $ sudo systemctl enable bitcoind\nCreated symlink /etc/systemd/system/multi-user.target.wants/bitcoind.service → /etc/systemd/system/bitcoind.service.</span>\n;\n\n<strong>8. Confirm listening status</strong>\n\n<span style=font-family:Courier New,Courier,monospace;>pi@bitcoin:~ $ ss -ltp\nState Recv-Q Send-Q Local Address:Port Peer Address:Port\nLISTEN 0 128 127.0.0.1:8332 *:* users:((bitcoind,pid=8717,fd=10))\nLISTEN 0 128 *:8333 *:* users:((bitcoind,pid=8717,fd=127))\nLISTEN 0 64 *:33171 *:*\nLISTEN 0 128 *:ssh *:*\nLISTEN 0 64 :::39493 :::*\nLISTEN 0 128 ::1:8332 :::* users:((bitcoind,pid=8717,fd=9))\nLISTEN 0 128 :::8333 :::* users:((bitcoind,pid=8717,fd=126))\nLISTEN 0 128 :::ssh :::*</span>\n\n\n<strong>9. Forward port 8333 to your bitcoin node</strong>\n\nThis will be specific to your router. It is recommended that you either configure a static IP on your Pi, or configure static DHCP on your router, so the Pi will always have the same IP.\n\n;\n\n;\n\n<strong><span style=font-family:Arial,Helvetica,sans-serif;>Notes on downloading the blockchain:</span></strong>\n\n<font face=Arial, Helvetica, sans-serif>The limited RAM in the Raspberry Pi can cause issues when downloading the entire blockchain... it may hang or otherwise misbehave. To avoid this, I temporarily installed bitcoin core on my main server to do the download, but since discovered that it is available via Bittorrent from;https://getbitcoinblockchain.com/</font>\n\n<font face=Arial, Helvetica, sans-serif>Once downloaded, move the downloaded files to wherever your NFS share is and it will appear in the .bitcoin home directory.</font>\n